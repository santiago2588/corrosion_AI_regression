2022-09-12 15:04:14,961:INFO:PyCaret Supervised Module
2022-09-12 15:04:14,962:INFO:ML Usecase: regression
2022-09-12 15:04:14,962:INFO:version 2.3.10
2022-09-12 15:04:14,962:INFO:Initializing setup()
2022-09-12 15:04:14,962:INFO:setup(target=mpy, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=['dosis_IC_ppm'], numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-09-12 15:04:14,988:INFO:Checking environment
2022-09-12 15:04:14,988:INFO:python_version: 3.8.12
2022-09-12 15:04:14,988:INFO:python_build: ('default', 'Oct 12 2021 03:01:40')
2022-09-12 15:04:14,988:INFO:machine: AMD64
2022-09-12 15:04:14,988:INFO:platform: Windows-10-10.0.22000-SP0
2022-09-12 15:04:14,990:WARNING:cannot find psutil installation. memory not traceable. Install psutil using pip to enable memory logging.
2022-09-12 15:04:14,990:INFO:Checking libraries
2022-09-12 15:04:14,990:INFO:pd==1.4.2
2022-09-12 15:04:14,990:INFO:numpy==1.22.4
2022-09-12 15:04:14,990:INFO:sklearn==0.23.2
2022-09-12 15:04:14,990:INFO:lightgbm==3.3.1
2022-09-12 15:04:14,990:WARNING:catboost not found
2022-09-12 15:04:15,343:INFO:xgboost==1.6.1
2022-09-12 15:04:15,343:INFO:mlflow==1.21.0
2022-09-12 15:04:15,343:INFO:Checking Exceptions
2022-09-12 15:04:15,344:INFO:Declaring global variables
2022-09-12 15:04:15,344:INFO:USI: 703d
2022-09-12 15:04:15,344:INFO:pycaret_globals: {'dashboard_logger', 'display_container', 'fold_groups_param_full', '_all_metrics', 'gpu_param', '_all_models', 'seed', 'USI', 'logging_param', 'experiment__', 'y_train', 'iterative_imputation_iters_param', 'X', 'fold_generator', 'y_test', '_available_plots', 'target_param', 'n_jobs_param', 'prep_pipe', 'transform_target_method_param', '_internal_pipeline', 'pycaret_globals', 'X_test', 'fix_imbalance_param', 'master_model_container', 'stratify_param', '_all_models_internal', 'X_train', 'data_before_preprocess', 'log_plots_param', 'html_param', 'fix_imbalance_method_param', 'y', 'transform_target_param', 'create_model_container', 'exp_name_log', 'fold_groups_param', 'fold_param', '_gpu_n_jobs_param', 'imputation_classifier', '_ml_usecase', 'imputation_regressor', 'fold_shuffle_param'}
2022-09-12 15:04:15,344:INFO:Preparing display monitor
2022-09-12 15:04:15,345:INFO:Preparing display monitor
2022-09-12 15:04:15,379:INFO:Importing libraries
2022-09-12 15:04:15,380:INFO:Copying data for preprocessing
2022-09-12 15:04:15,393:INFO:Declaring preprocessing parameters
2022-09-12 15:04:15,399:INFO:Creating preprocessing pipeline
2022-09-12 15:04:15,410:INFO:Preprocessing pipeline created successfully
2022-09-12 15:04:15,410:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-09-12 15:04:15,410:INFO:Creating global containers
2022-09-12 15:04:15,414:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-09-12 15:04:23,897:WARNING:Couldn't import catboost.CatBoostRegressor
2022-09-12 15:04:24,085:WARNING:Couldn't import catboost.CatBoostRegressor
2022-09-12 15:04:24,085:INFO:Creating grid variables
2022-09-12 15:04:24,104:INFO:create_model_container: 0
2022-09-12 15:04:24,105:INFO:master_model_container: 0
2022-09-12 15:04:24,105:INFO:display_container: 1
2022-09-12 15:04:24,114:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=['dosis_IC_ppm'],
                                      target='mpy', time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeri...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='mpy')),
                ('fix_perfect', Remove_100(target='mpy')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-09-12 15:04:24,114:INFO:setup() succesfully completed......................................
2022-09-12 15:06:39,276:INFO:PyCaret Supervised Module
2022-09-12 15:06:39,277:INFO:ML Usecase: regression
2022-09-12 15:06:39,277:INFO:version 2.3.10
2022-09-12 15:06:39,278:INFO:Initializing setup()
2022-09-12 15:06:39,278:INFO:setup(target=mpy, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=['dosis_IC_ppm'], numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-09-12 15:06:39,278:INFO:Checking environment
2022-09-12 15:06:39,278:INFO:python_version: 3.8.12
2022-09-12 15:06:39,279:INFO:python_build: ('default', 'Oct 12 2021 03:01:40')
2022-09-12 15:06:39,279:INFO:machine: AMD64
2022-09-12 15:06:39,279:INFO:platform: Windows-10-10.0.22000-SP0
2022-09-12 15:06:39,281:WARNING:cannot find psutil installation. memory not traceable. Install psutil using pip to enable memory logging.
2022-09-12 15:06:39,281:INFO:Checking libraries
2022-09-12 15:06:39,281:INFO:pd==1.4.2
2022-09-12 15:06:39,281:INFO:numpy==1.22.4
2022-09-12 15:06:39,281:INFO:sklearn==0.23.2
2022-09-12 15:06:39,281:INFO:lightgbm==3.3.1
2022-09-12 15:06:39,283:WARNING:catboost not found
2022-09-12 15:06:39,283:INFO:xgboost==1.6.1
2022-09-12 15:06:39,284:INFO:mlflow==1.21.0
2022-09-12 15:06:39,284:INFO:Checking Exceptions
2022-09-12 15:06:39,284:INFO:Declaring global variables
2022-09-12 15:06:39,284:INFO:USI: 40a4
2022-09-12 15:06:39,284:INFO:pycaret_globals: {'dashboard_logger', 'display_container', 'fold_groups_param_full', '_all_metrics', 'gpu_param', '_all_models', 'seed', 'USI', 'logging_param', 'experiment__', 'y_train', 'iterative_imputation_iters_param', 'X', 'fold_generator', 'y_test', '_available_plots', 'target_param', 'n_jobs_param', 'prep_pipe', 'transform_target_method_param', '_internal_pipeline', 'pycaret_globals', 'X_test', 'fix_imbalance_param', 'master_model_container', 'stratify_param', '_all_models_internal', 'X_train', 'data_before_preprocess', 'log_plots_param', 'html_param', 'fix_imbalance_method_param', 'y', 'transform_target_param', 'create_model_container', 'exp_name_log', 'fold_groups_param', 'fold_param', '_gpu_n_jobs_param', 'imputation_classifier', '_ml_usecase', 'imputation_regressor', 'fold_shuffle_param'}
2022-09-12 15:06:39,284:INFO:Preparing display monitor
2022-09-12 15:06:39,284:INFO:Preparing display monitor
2022-09-12 15:06:39,312:INFO:Importing libraries
2022-09-12 15:06:39,312:INFO:Copying data for preprocessing
2022-09-12 15:06:39,333:INFO:Declaring preprocessing parameters
2022-09-12 15:06:39,335:INFO:Creating preprocessing pipeline
2022-09-12 15:06:39,346:INFO:Preprocessing pipeline created successfully
2022-09-12 15:06:39,348:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-09-12 15:06:39,355:INFO:Creating global containers
2022-09-12 15:06:39,359:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-09-12 15:06:46,853:WARNING:Couldn't import catboost.CatBoostRegressor
2022-09-12 15:06:47,118:WARNING:Couldn't import catboost.CatBoostRegressor
2022-09-12 15:06:47,119:INFO:Creating grid variables
2022-09-12 15:06:47,150:INFO:create_model_container: 0
2022-09-12 15:06:47,151:INFO:master_model_container: 0
2022-09-12 15:06:47,151:INFO:display_container: 1
2022-09-12 15:06:47,164:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=['dosis_IC_ppm'],
                                      target='mpy', time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeri...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='mpy')),
                ('fix_perfect', Remove_100(target='mpy')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-09-12 15:06:47,166:INFO:setup() succesfully completed......................................
2022-09-12 15:07:28,016:INFO:PyCaret Supervised Module
2022-09-12 15:07:28,017:INFO:ML Usecase: regression
2022-09-12 15:07:28,017:INFO:version 2.3.10
2022-09-12 15:07:28,017:INFO:Initializing setup()
2022-09-12 15:07:28,017:INFO:setup(target=mpy, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=['dosis_IC_ppm', 'CO2_gas'], numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-09-12 15:07:28,017:INFO:Checking environment
2022-09-12 15:07:28,017:INFO:python_version: 3.8.12
2022-09-12 15:07:28,018:INFO:python_build: ('default', 'Oct 12 2021 03:01:40')
2022-09-12 15:07:28,018:INFO:machine: AMD64
2022-09-12 15:07:28,018:INFO:platform: Windows-10-10.0.22000-SP0
2022-09-12 15:07:28,025:WARNING:cannot find psutil installation. memory not traceable. Install psutil using pip to enable memory logging.
2022-09-12 15:07:28,025:INFO:Checking libraries
2022-09-12 15:07:28,025:INFO:pd==1.4.2
2022-09-12 15:07:28,025:INFO:numpy==1.22.4
2022-09-12 15:07:28,025:INFO:sklearn==0.23.2
2022-09-12 15:07:28,026:INFO:lightgbm==3.3.1
2022-09-12 15:07:28,028:WARNING:catboost not found
2022-09-12 15:07:28,028:INFO:xgboost==1.6.1
2022-09-12 15:07:28,029:INFO:mlflow==1.21.0
2022-09-12 15:07:28,029:INFO:Checking Exceptions
2022-09-12 15:07:28,029:INFO:Declaring global variables
2022-09-12 15:07:28,029:INFO:USI: 6489
2022-09-12 15:07:28,030:INFO:pycaret_globals: {'dashboard_logger', 'display_container', 'fold_groups_param_full', '_all_metrics', 'gpu_param', '_all_models', 'seed', 'USI', 'logging_param', 'experiment__', 'y_train', 'iterative_imputation_iters_param', 'X', 'fold_generator', 'y_test', '_available_plots', 'target_param', 'n_jobs_param', 'prep_pipe', 'transform_target_method_param', '_internal_pipeline', 'pycaret_globals', 'X_test', 'fix_imbalance_param', 'master_model_container', 'stratify_param', '_all_models_internal', 'X_train', 'data_before_preprocess', 'log_plots_param', 'html_param', 'fix_imbalance_method_param', 'y', 'transform_target_param', 'create_model_container', 'exp_name_log', 'fold_groups_param', 'fold_param', '_gpu_n_jobs_param', 'imputation_classifier', '_ml_usecase', 'imputation_regressor', 'fold_shuffle_param'}
2022-09-12 15:07:28,030:INFO:Preparing display monitor
2022-09-12 15:07:28,030:INFO:Preparing display monitor
2022-09-12 15:07:28,084:INFO:Importing libraries
2022-09-12 15:07:28,085:INFO:Copying data for preprocessing
2022-09-12 15:07:28,119:INFO:Declaring preprocessing parameters
2022-09-12 15:07:28,121:INFO:Creating preprocessing pipeline
2022-09-12 15:07:28,133:INFO:Preprocessing pipeline created successfully
2022-09-12 15:07:28,134:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-09-12 15:07:28,134:INFO:Creating global containers
2022-09-12 15:07:28,135:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-09-12 15:07:30,262:WARNING:Couldn't import catboost.CatBoostRegressor
2022-09-12 15:07:30,477:WARNING:Couldn't import catboost.CatBoostRegressor
2022-09-12 15:07:30,480:INFO:Creating grid variables
2022-09-12 15:07:30,503:INFO:create_model_container: 0
2022-09-12 15:07:30,503:INFO:master_model_container: 0
2022-09-12 15:07:30,503:INFO:display_container: 1
2022-09-12 15:07:30,517:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=['dosis_IC_ppm',
                                                          'CO2_gas'],
                                      target='mpy', time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=N...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='mpy')),
                ('fix_perfect', Remove_100(target='mpy')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-09-12 15:07:30,518:INFO:setup() succesfully completed......................................
2022-09-12 15:08:38,822:INFO:Initializing get_config()
2022-09-12 15:08:38,822:INFO:get_config(variable=data_before_preprocess)
2022-09-12 15:08:38,833:INFO:Global variable: data_before_preprocess returned as       BPPD     BAPD  Caudal_gas_MSCFD  Presion_cabeza_psi  \
0   273.00  5187.00             120.0                 160   
1   306.90   251.10              33.0                 180   
2    30.00   970.00              51.0                 200   
3   311.64   324.36              28.0                 210   
4   412.48  4743.52              48.0                 200   
..     ...      ...               ...                 ...   
72   91.98  2974.02              22.0                 195   
73  295.80  4634.20              12.0                 156   
74  239.96  3188.04              50.7                 195   
75  992.00  3968.00              41.3                 170   
76  279.90  2830.10              45.0                 220   

    Temperatura_cabeza_F  Salinidad_ppm  CO2_gas  bicarbonatos_ppm  \
0                    220          76600        7               240   
1                    130          74000        0               281   
2                    192          73000       15               120   
3                    160          36200       15               220   
4                    150          82200       20               400   
..                   ...            ...      ...               ...   
72                   200          55000       10               370   
73                   200          60200        4               360   
74                   210          52800        5               360   
75                   210          69500        3               300   
76                   197          53200        7               300   

    dosis_IC_ppm  Fe_ppm       mpy  
0             50   45.90   8.41626  
1             50   77.11   0.10024  
2             90   54.00   7.17844  
3             40   56.21   1.50500  
4             40   54.80   0.71894  
..           ...     ...       ...  
72            70   34.90  10.20184  
73            40   71.82   3.36175  
74            80   40.90   0.76563  
75            50   48.90   3.65412  
76            80   32.00  10.41508  

[77 rows x 11 columns]
2022-09-12 15:08:38,833:INFO:get_config() succesfully completed......................................
2022-09-12 15:08:38,833:INFO:Initializing get_config()
2022-09-12 15:08:38,833:INFO:get_config(variable=prep_pipe)
2022-09-12 15:08:38,842:INFO:Global variable: prep_pipe returned as Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=['dosis_IC_ppm',
                                                          'CO2_gas'],
                                      target='mpy', time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=N...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='mpy')),
                ('fix_perfect', Remove_100(target='mpy')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-09-12 15:08:38,842:INFO:get_config() succesfully completed......................................
2022-09-12 15:09:10,425:INFO:Initializing get_config()
2022-09-12 15:09:10,425:INFO:get_config(variable=data_before_preprocess)
2022-09-12 15:09:10,435:INFO:Global variable: data_before_preprocess returned as       BPPD     BAPD  Caudal_gas_MSCFD  Presion_cabeza_psi  \
0   273.00  5187.00             120.0                 160   
1   306.90   251.10              33.0                 180   
2    30.00   970.00              51.0                 200   
3   311.64   324.36              28.0                 210   
4   412.48  4743.52              48.0                 200   
..     ...      ...               ...                 ...   
72   91.98  2974.02              22.0                 195   
73  295.80  4634.20              12.0                 156   
74  239.96  3188.04              50.7                 195   
75  992.00  3968.00              41.3                 170   
76  279.90  2830.10              45.0                 220   

    Temperatura_cabeza_F  Salinidad_ppm  CO2_gas  bicarbonatos_ppm  \
0                    220          76600        7               240   
1                    130          74000        0               281   
2                    192          73000       15               120   
3                    160          36200       15               220   
4                    150          82200       20               400   
..                   ...            ...      ...               ...   
72                   200          55000       10               370   
73                   200          60200        4               360   
74                   210          52800        5               360   
75                   210          69500        3               300   
76                   197          53200        7               300   

    dosis_IC_ppm  Fe_ppm       mpy  
0             50   45.90   8.41626  
1             50   77.11   0.10024  
2             90   54.00   7.17844  
3             40   56.21   1.50500  
4             40   54.80   0.71894  
..           ...     ...       ...  
72            70   34.90  10.20184  
73            40   71.82   3.36175  
74            80   40.90   0.76563  
75            50   48.90   3.65412  
76            80   32.00  10.41508  

[77 rows x 11 columns]
2022-09-12 15:09:10,436:INFO:get_config() succesfully completed......................................
2022-09-12 15:09:10,436:INFO:Initializing get_config()
2022-09-12 15:09:10,436:INFO:get_config(variable=prep_pipe)
2022-09-12 15:09:10,446:INFO:Global variable: prep_pipe returned as Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=['dosis_IC_ppm',
                                                          'CO2_gas'],
                                      target='mpy', time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=N...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='mpy')),
                ('fix_perfect', Remove_100(target='mpy')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-09-12 15:09:10,446:INFO:get_config() succesfully completed......................................
2022-09-12 15:10:02,366:INFO:Initializing compare_models()
2022-09-12 15:10:02,366:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2022-09-12 15:10:02,366:INFO:Checking exceptions
2022-09-12 15:10:02,366:INFO:Preparing display monitor
2022-09-12 15:10:02,366:INFO:Preparing display monitor
2022-09-12 15:10:02,430:INFO:Initializing Linear Regression
2022-09-12 15:10:02,430:INFO:Total runtime is 0.0 minutes
2022-09-12 15:10:02,448:INFO:SubProcess create_model() called ==================================
2022-09-12 15:10:02,448:INFO:Initializing create_model()
2022-09-12 15:10:02,448:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665D93DC0>, return_train_score=False, kwargs={})
2022-09-12 15:10:02,448:INFO:Checking exceptions
2022-09-12 15:10:02,448:INFO:Importing libraries
2022-09-12 15:10:02,448:INFO:Copying training dataset
2022-09-12 15:10:02,448:INFO:Defining folds
2022-09-12 15:10:02,453:INFO:Declaring metric variables
2022-09-12 15:10:02,480:INFO:Importing untrained model
2022-09-12 15:10:02,500:INFO:Linear Regression Imported succesfully
2022-09-12 15:10:02,551:INFO:Starting cross validation
2022-09-12 15:10:02,585:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:10:11,720:INFO:Calculating mean and std
2022-09-12 15:10:11,723:INFO:Creating metrics dataframe
2022-09-12 15:10:12,118:INFO:Uploading results into container
2022-09-12 15:10:12,119:INFO:Uploading model into container now
2022-09-12 15:10:12,119:INFO:create_model_container: 1
2022-09-12 15:10:12,119:INFO:master_model_container: 1
2022-09-12 15:10:12,120:INFO:display_container: 2
2022-09-12 15:10:12,120:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2022-09-12 15:10:12,121:INFO:create_model() succesfully completed......................................
2022-09-12 15:10:12,779:INFO:SubProcess create_model() end ==================================
2022-09-12 15:10:12,779:INFO:Creating metrics dataframe
2022-09-12 15:10:12,845:INFO:Initializing Lasso Regression
2022-09-12 15:10:12,845:INFO:Total runtime is 0.17359048525492352 minutes
2022-09-12 15:10:12,866:INFO:SubProcess create_model() called ==================================
2022-09-12 15:10:12,867:INFO:Initializing create_model()
2022-09-12 15:10:12,868:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665D93DC0>, return_train_score=False, kwargs={})
2022-09-12 15:10:12,868:INFO:Checking exceptions
2022-09-12 15:10:12,869:INFO:Importing libraries
2022-09-12 15:10:12,869:INFO:Copying training dataset
2022-09-12 15:10:12,871:INFO:Defining folds
2022-09-12 15:10:12,871:INFO:Declaring metric variables
2022-09-12 15:10:12,897:INFO:Importing untrained model
2022-09-12 15:10:12,923:INFO:Lasso Regression Imported succesfully
2022-09-12 15:10:12,986:INFO:Starting cross validation
2022-09-12 15:10:12,987:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:10:13,216:INFO:Calculating mean and std
2022-09-12 15:10:13,230:INFO:Creating metrics dataframe
2022-09-12 15:10:13,318:INFO:Uploading results into container
2022-09-12 15:10:13,319:INFO:Uploading model into container now
2022-09-12 15:10:13,319:INFO:create_model_container: 2
2022-09-12 15:10:13,319:INFO:master_model_container: 2
2022-09-12 15:10:13,319:INFO:display_container: 2
2022-09-12 15:10:13,320:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=123,
      selection='cyclic', tol=0.0001, warm_start=False)
2022-09-12 15:10:13,320:INFO:create_model() succesfully completed......................................
2022-09-12 15:10:13,926:INFO:SubProcess create_model() end ==================================
2022-09-12 15:10:13,927:INFO:Creating metrics dataframe
2022-09-12 15:10:13,963:INFO:Initializing Ridge Regression
2022-09-12 15:10:13,963:INFO:Total runtime is 0.19221754868825278 minutes
2022-09-12 15:10:13,994:INFO:SubProcess create_model() called ==================================
2022-09-12 15:10:13,994:INFO:Initializing create_model()
2022-09-12 15:10:13,994:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665D93DC0>, return_train_score=False, kwargs={})
2022-09-12 15:10:13,994:INFO:Checking exceptions
2022-09-12 15:10:13,994:INFO:Importing libraries
2022-09-12 15:10:13,994:INFO:Copying training dataset
2022-09-12 15:10:14,000:INFO:Defining folds
2022-09-12 15:10:14,000:INFO:Declaring metric variables
2022-09-12 15:10:14,020:INFO:Importing untrained model
2022-09-12 15:10:14,050:INFO:Ridge Regression Imported succesfully
2022-09-12 15:10:14,096:INFO:Starting cross validation
2022-09-12 15:10:14,097:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:10:14,255:INFO:Calculating mean and std
2022-09-12 15:10:14,255:INFO:Creating metrics dataframe
2022-09-12 15:10:14,330:INFO:Uploading results into container
2022-09-12 15:10:14,330:INFO:Uploading model into container now
2022-09-12 15:10:14,330:INFO:create_model_container: 3
2022-09-12 15:10:14,330:INFO:master_model_container: 3
2022-09-12 15:10:14,330:INFO:display_container: 2
2022-09-12 15:10:14,330:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=123, solver='auto', tol=0.001)
2022-09-12 15:10:14,330:INFO:create_model() succesfully completed......................................
2022-09-12 15:10:15,012:INFO:SubProcess create_model() end ==================================
2022-09-12 15:10:15,017:INFO:Creating metrics dataframe
2022-09-12 15:10:15,088:INFO:Initializing Elastic Net
2022-09-12 15:10:15,088:INFO:Total runtime is 0.2109717607498169 minutes
2022-09-12 15:10:15,110:INFO:SubProcess create_model() called ==================================
2022-09-12 15:10:15,112:INFO:Initializing create_model()
2022-09-12 15:10:15,112:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665D93DC0>, return_train_score=False, kwargs={})
2022-09-12 15:10:15,112:INFO:Checking exceptions
2022-09-12 15:10:15,112:INFO:Importing libraries
2022-09-12 15:10:15,112:INFO:Copying training dataset
2022-09-12 15:10:15,114:INFO:Defining folds
2022-09-12 15:10:15,115:INFO:Declaring metric variables
2022-09-12 15:10:15,128:INFO:Importing untrained model
2022-09-12 15:10:15,157:INFO:Elastic Net Imported succesfully
2022-09-12 15:10:15,215:INFO:Starting cross validation
2022-09-12 15:10:15,215:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:10:15,450:INFO:Calculating mean and std
2022-09-12 15:10:15,454:INFO:Creating metrics dataframe
2022-09-12 15:10:15,523:INFO:Uploading results into container
2022-09-12 15:10:15,523:INFO:Uploading model into container now
2022-09-12 15:10:15,523:INFO:create_model_container: 4
2022-09-12 15:10:15,525:INFO:master_model_container: 4
2022-09-12 15:10:15,525:INFO:display_container: 2
2022-09-12 15:10:15,526:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=123, selection='cyclic', tol=0.0001, warm_start=False)
2022-09-12 15:10:15,526:INFO:create_model() succesfully completed......................................
2022-09-12 15:10:16,195:INFO:SubProcess create_model() end ==================================
2022-09-12 15:10:16,195:INFO:Creating metrics dataframe
2022-09-12 15:10:16,276:INFO:Initializing Least Angle Regression
2022-09-12 15:10:16,277:INFO:Total runtime is 0.2307921369870504 minutes
2022-09-12 15:10:16,304:INFO:SubProcess create_model() called ==================================
2022-09-12 15:10:16,305:INFO:Initializing create_model()
2022-09-12 15:10:16,306:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665D93DC0>, return_train_score=False, kwargs={})
2022-09-12 15:10:16,307:INFO:Checking exceptions
2022-09-12 15:10:16,308:INFO:Importing libraries
2022-09-12 15:10:16,312:INFO:Copying training dataset
2022-09-12 15:10:16,315:INFO:Defining folds
2022-09-12 15:10:16,315:INFO:Declaring metric variables
2022-09-12 15:10:16,339:INFO:Importing untrained model
2022-09-12 15:10:16,390:INFO:Least Angle Regression Imported succesfully
2022-09-12 15:10:16,432:INFO:Starting cross validation
2022-09-12 15:10:16,433:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:10:16,693:INFO:Calculating mean and std
2022-09-12 15:10:16,696:INFO:Creating metrics dataframe
2022-09-12 15:10:16,763:INFO:Uploading results into container
2022-09-12 15:10:16,763:INFO:Uploading model into container now
2022-09-12 15:10:16,763:INFO:create_model_container: 5
2022-09-12 15:10:16,763:INFO:master_model_container: 5
2022-09-12 15:10:16,764:INFO:display_container: 2
2022-09-12 15:10:16,764:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize=True, precompute='auto',
     random_state=123, verbose=False)
2022-09-12 15:10:16,764:INFO:create_model() succesfully completed......................................
2022-09-12 15:10:17,403:INFO:SubProcess create_model() end ==================================
2022-09-12 15:10:17,403:INFO:Creating metrics dataframe
2022-09-12 15:10:17,471:INFO:Initializing Lasso Least Angle Regression
2022-09-12 15:10:17,471:INFO:Total runtime is 0.25067782402038574 minutes
2022-09-12 15:10:17,495:INFO:SubProcess create_model() called ==================================
2022-09-12 15:10:17,496:INFO:Initializing create_model()
2022-09-12 15:10:17,497:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665D93DC0>, return_train_score=False, kwargs={})
2022-09-12 15:10:17,497:INFO:Checking exceptions
2022-09-12 15:10:17,497:INFO:Importing libraries
2022-09-12 15:10:17,497:INFO:Copying training dataset
2022-09-12 15:10:17,500:INFO:Defining folds
2022-09-12 15:10:17,500:INFO:Declaring metric variables
2022-09-12 15:10:17,523:INFO:Importing untrained model
2022-09-12 15:10:17,549:INFO:Lasso Least Angle Regression Imported succesfully
2022-09-12 15:10:17,619:INFO:Starting cross validation
2022-09-12 15:10:17,620:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:10:17,838:INFO:Calculating mean and std
2022-09-12 15:10:17,841:INFO:Creating metrics dataframe
2022-09-12 15:10:17,926:INFO:Uploading results into container
2022-09-12 15:10:17,926:INFO:Uploading model into container now
2022-09-12 15:10:17,926:INFO:create_model_container: 6
2022-09-12 15:10:17,927:INFO:master_model_container: 6
2022-09-12 15:10:17,927:INFO:display_container: 2
2022-09-12 15:10:17,928:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize=True,
          positive=False, precompute='auto', random_state=123, verbose=False)
2022-09-12 15:10:17,928:INFO:create_model() succesfully completed......................................
2022-09-12 15:10:18,493:INFO:SubProcess create_model() end ==================================
2022-09-12 15:10:18,493:INFO:Creating metrics dataframe
2022-09-12 15:10:18,560:INFO:Initializing Orthogonal Matching Pursuit
2022-09-12 15:10:18,560:INFO:Total runtime is 0.26882885694503783 minutes
2022-09-12 15:10:18,581:INFO:SubProcess create_model() called ==================================
2022-09-12 15:10:18,582:INFO:Initializing create_model()
2022-09-12 15:10:18,582:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665D93DC0>, return_train_score=False, kwargs={})
2022-09-12 15:10:18,583:INFO:Checking exceptions
2022-09-12 15:10:18,583:INFO:Importing libraries
2022-09-12 15:10:18,583:INFO:Copying training dataset
2022-09-12 15:10:18,585:INFO:Defining folds
2022-09-12 15:10:18,586:INFO:Declaring metric variables
2022-09-12 15:10:18,606:INFO:Importing untrained model
2022-09-12 15:10:18,625:INFO:Orthogonal Matching Pursuit Imported succesfully
2022-09-12 15:10:18,687:INFO:Starting cross validation
2022-09-12 15:10:18,689:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:10:18,819:INFO:Calculating mean and std
2022-09-12 15:10:18,820:INFO:Creating metrics dataframe
2022-09-12 15:10:18,874:INFO:Uploading results into container
2022-09-12 15:10:18,874:INFO:Uploading model into container now
2022-09-12 15:10:18,874:INFO:create_model_container: 7
2022-09-12 15:10:18,875:INFO:master_model_container: 7
2022-09-12 15:10:18,875:INFO:display_container: 2
2022-09-12 15:10:18,875:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None)
2022-09-12 15:10:18,875:INFO:create_model() succesfully completed......................................
2022-09-12 15:10:19,620:INFO:SubProcess create_model() end ==================================
2022-09-12 15:10:19,620:INFO:Creating metrics dataframe
2022-09-12 15:10:19,695:INFO:Initializing Bayesian Ridge
2022-09-12 15:10:19,695:INFO:Total runtime is 0.28774847586949664 minutes
2022-09-12 15:10:19,722:INFO:SubProcess create_model() called ==================================
2022-09-12 15:10:19,722:INFO:Initializing create_model()
2022-09-12 15:10:19,722:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665D93DC0>, return_train_score=False, kwargs={})
2022-09-12 15:10:19,722:INFO:Checking exceptions
2022-09-12 15:10:19,722:INFO:Importing libraries
2022-09-12 15:10:19,722:INFO:Copying training dataset
2022-09-12 15:10:19,731:INFO:Defining folds
2022-09-12 15:10:19,731:INFO:Declaring metric variables
2022-09-12 15:10:19,755:INFO:Importing untrained model
2022-09-12 15:10:19,776:INFO:Bayesian Ridge Imported succesfully
2022-09-12 15:10:19,822:INFO:Starting cross validation
2022-09-12 15:10:19,822:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:10:20,046:INFO:Calculating mean and std
2022-09-12 15:10:20,063:INFO:Creating metrics dataframe
2022-09-12 15:10:20,128:INFO:Uploading results into container
2022-09-12 15:10:20,128:INFO:Uploading model into container now
2022-09-12 15:10:20,128:INFO:create_model_container: 8
2022-09-12 15:10:20,128:INFO:master_model_container: 8
2022-09-12 15:10:20,128:INFO:display_container: 2
2022-09-12 15:10:20,128:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False)
2022-09-12 15:10:20,128:INFO:create_model() succesfully completed......................................
2022-09-12 15:10:20,795:INFO:SubProcess create_model() end ==================================
2022-09-12 15:10:20,795:INFO:Creating metrics dataframe
2022-09-12 15:10:20,883:INFO:Initializing Passive Aggressive Regressor
2022-09-12 15:10:20,883:INFO:Total runtime is 0.3075482130050659 minutes
2022-09-12 15:10:20,920:INFO:SubProcess create_model() called ==================================
2022-09-12 15:10:20,921:INFO:Initializing create_model()
2022-09-12 15:10:20,921:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665D93DC0>, return_train_score=False, kwargs={})
2022-09-12 15:10:20,921:INFO:Checking exceptions
2022-09-12 15:10:20,921:INFO:Importing libraries
2022-09-12 15:10:20,921:INFO:Copying training dataset
2022-09-12 15:10:20,921:INFO:Defining folds
2022-09-12 15:10:20,921:INFO:Declaring metric variables
2022-09-12 15:10:20,943:INFO:Importing untrained model
2022-09-12 15:10:20,969:INFO:Passive Aggressive Regressor Imported succesfully
2022-09-12 15:10:21,022:INFO:Starting cross validation
2022-09-12 15:10:21,024:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:10:21,237:INFO:Calculating mean and std
2022-09-12 15:10:21,255:INFO:Creating metrics dataframe
2022-09-12 15:10:21,323:INFO:Uploading results into container
2022-09-12 15:10:21,323:INFO:Uploading model into container now
2022-09-12 15:10:21,323:INFO:create_model_container: 9
2022-09-12 15:10:21,323:INFO:master_model_container: 9
2022-09-12 15:10:21,323:INFO:display_container: 2
2022-09-12 15:10:21,323:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=123, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-09-12 15:10:21,323:INFO:create_model() succesfully completed......................................
2022-09-12 15:10:22,058:INFO:SubProcess create_model() end ==================================
2022-09-12 15:10:22,058:INFO:Creating metrics dataframe
2022-09-12 15:10:22,144:INFO:Initializing Huber Regressor
2022-09-12 15:10:22,144:INFO:Total runtime is 0.3285637577374776 minutes
2022-09-12 15:10:22,178:INFO:SubProcess create_model() called ==================================
2022-09-12 15:10:22,179:INFO:Initializing create_model()
2022-09-12 15:10:22,179:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665D93DC0>, return_train_score=False, kwargs={})
2022-09-12 15:10:22,179:INFO:Checking exceptions
2022-09-12 15:10:22,179:INFO:Importing libraries
2022-09-12 15:10:22,179:INFO:Copying training dataset
2022-09-12 15:10:22,183:INFO:Defining folds
2022-09-12 15:10:22,183:INFO:Declaring metric variables
2022-09-12 15:10:22,206:INFO:Importing untrained model
2022-09-12 15:10:22,220:INFO:Huber Regressor Imported succesfully
2022-09-12 15:10:22,277:INFO:Starting cross validation
2022-09-12 15:10:22,286:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:10:22,694:INFO:Calculating mean and std
2022-09-12 15:10:22,694:INFO:Creating metrics dataframe
2022-09-12 15:10:22,756:INFO:Uploading results into container
2022-09-12 15:10:22,756:INFO:Uploading model into container now
2022-09-12 15:10:22,756:INFO:create_model_container: 10
2022-09-12 15:10:22,756:INFO:master_model_container: 10
2022-09-12 15:10:22,756:INFO:display_container: 2
2022-09-12 15:10:22,756:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-12 15:10:22,756:INFO:create_model() succesfully completed......................................
2022-09-12 15:10:23,440:INFO:SubProcess create_model() end ==================================
2022-09-12 15:10:23,440:INFO:Creating metrics dataframe
2022-09-12 15:10:23,513:INFO:Initializing K Neighbors Regressor
2022-09-12 15:10:23,513:INFO:Total runtime is 0.35138128995895385 minutes
2022-09-12 15:10:23,532:INFO:SubProcess create_model() called ==================================
2022-09-12 15:10:23,532:INFO:Initializing create_model()
2022-09-12 15:10:23,532:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665D93DC0>, return_train_score=False, kwargs={})
2022-09-12 15:10:23,536:INFO:Checking exceptions
2022-09-12 15:10:23,537:INFO:Importing libraries
2022-09-12 15:10:23,537:INFO:Copying training dataset
2022-09-12 15:10:23,538:INFO:Defining folds
2022-09-12 15:10:23,539:INFO:Declaring metric variables
2022-09-12 15:10:23,554:INFO:Importing untrained model
2022-09-12 15:10:23,571:INFO:K Neighbors Regressor Imported succesfully
2022-09-12 15:10:23,630:INFO:Starting cross validation
2022-09-12 15:10:23,649:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:10:23,889:INFO:Calculating mean and std
2022-09-12 15:10:23,891:INFO:Creating metrics dataframe
2022-09-12 15:10:23,960:INFO:Uploading results into container
2022-09-12 15:10:23,960:INFO:Uploading model into container now
2022-09-12 15:10:23,960:INFO:create_model_container: 11
2022-09-12 15:10:23,960:INFO:master_model_container: 11
2022-09-12 15:10:23,960:INFO:display_container: 2
2022-09-12 15:10:23,967:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2022-09-12 15:10:23,967:INFO:create_model() succesfully completed......................................
2022-09-12 15:10:24,586:INFO:SubProcess create_model() end ==================================
2022-09-12 15:10:24,586:INFO:Creating metrics dataframe
2022-09-12 15:10:24,649:INFO:Initializing Decision Tree Regressor
2022-09-12 15:10:24,650:INFO:Total runtime is 0.37032840251922605 minutes
2022-09-12 15:10:24,662:INFO:SubProcess create_model() called ==================================
2022-09-12 15:10:24,664:INFO:Initializing create_model()
2022-09-12 15:10:24,664:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665D93DC0>, return_train_score=False, kwargs={})
2022-09-12 15:10:24,664:INFO:Checking exceptions
2022-09-12 15:10:24,666:INFO:Importing libraries
2022-09-12 15:10:24,667:INFO:Copying training dataset
2022-09-12 15:10:24,668:INFO:Defining folds
2022-09-12 15:10:24,669:INFO:Declaring metric variables
2022-09-12 15:10:24,684:INFO:Importing untrained model
2022-09-12 15:10:24,697:INFO:Decision Tree Regressor Imported succesfully
2022-09-12 15:10:24,739:INFO:Starting cross validation
2022-09-12 15:10:24,748:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:10:24,894:INFO:Calculating mean and std
2022-09-12 15:10:24,894:INFO:Creating metrics dataframe
2022-09-12 15:10:24,959:INFO:Uploading results into container
2022-09-12 15:10:24,959:INFO:Uploading model into container now
2022-09-12 15:10:24,959:INFO:create_model_container: 12
2022-09-12 15:10:24,959:INFO:master_model_container: 12
2022-09-12 15:10:24,959:INFO:display_container: 2
2022-09-12 15:10:24,959:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=123, splitter='best')
2022-09-12 15:10:24,959:INFO:create_model() succesfully completed......................................
2022-09-12 15:10:25,533:INFO:SubProcess create_model() end ==================================
2022-09-12 15:10:25,533:INFO:Creating metrics dataframe
2022-09-12 15:10:25,610:INFO:Initializing Random Forest Regressor
2022-09-12 15:10:25,611:INFO:Total runtime is 0.3863519668579101 minutes
2022-09-12 15:10:25,631:INFO:SubProcess create_model() called ==================================
2022-09-12 15:10:25,633:INFO:Initializing create_model()
2022-09-12 15:10:25,634:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665D93DC0>, return_train_score=False, kwargs={})
2022-09-12 15:10:25,634:INFO:Checking exceptions
2022-09-12 15:10:25,634:INFO:Importing libraries
2022-09-12 15:10:25,634:INFO:Copying training dataset
2022-09-12 15:10:25,634:INFO:Defining folds
2022-09-12 15:10:25,634:INFO:Declaring metric variables
2022-09-12 15:10:25,652:INFO:Importing untrained model
2022-09-12 15:10:25,665:INFO:Random Forest Regressor Imported succesfully
2022-09-12 15:10:25,712:INFO:Starting cross validation
2022-09-12 15:10:25,712:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:10:26,942:INFO:Calculating mean and std
2022-09-12 15:10:26,943:INFO:Creating metrics dataframe
2022-09-12 15:10:26,997:INFO:Uploading results into container
2022-09-12 15:10:26,997:INFO:Uploading model into container now
2022-09-12 15:10:26,998:INFO:create_model_container: 13
2022-09-12 15:10:26,998:INFO:master_model_container: 13
2022-09-12 15:10:26,998:INFO:display_container: 2
2022-09-12 15:10:26,999:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=123, verbose=0, warm_start=False)
2022-09-12 15:10:26,999:INFO:create_model() succesfully completed......................................
2022-09-12 15:10:27,611:INFO:SubProcess create_model() end ==================================
2022-09-12 15:10:27,611:INFO:Creating metrics dataframe
2022-09-12 15:10:27,663:INFO:Initializing Extra Trees Regressor
2022-09-12 15:10:27,663:INFO:Total runtime is 0.42054857412974034 minutes
2022-09-12 15:10:27,674:INFO:SubProcess create_model() called ==================================
2022-09-12 15:10:27,675:INFO:Initializing create_model()
2022-09-12 15:10:27,676:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665D93DC0>, return_train_score=False, kwargs={})
2022-09-12 15:10:27,676:INFO:Checking exceptions
2022-09-12 15:10:27,677:INFO:Importing libraries
2022-09-12 15:10:27,677:INFO:Copying training dataset
2022-09-12 15:10:27,680:INFO:Defining folds
2022-09-12 15:10:27,681:INFO:Declaring metric variables
2022-09-12 15:10:27,702:INFO:Importing untrained model
2022-09-12 15:10:27,722:INFO:Extra Trees Regressor Imported succesfully
2022-09-12 15:10:27,770:INFO:Starting cross validation
2022-09-12 15:10:27,773:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:10:28,658:INFO:Calculating mean and std
2022-09-12 15:10:28,659:INFO:Creating metrics dataframe
2022-09-12 15:10:28,695:INFO:Uploading results into container
2022-09-12 15:10:28,695:INFO:Uploading model into container now
2022-09-12 15:10:28,696:INFO:create_model_container: 14
2022-09-12 15:10:28,696:INFO:master_model_container: 14
2022-09-12 15:10:28,696:INFO:display_container: 2
2022-09-12 15:10:28,697:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=123, verbose=0, warm_start=False)
2022-09-12 15:10:28,697:INFO:create_model() succesfully completed......................................
2022-09-12 15:10:29,327:INFO:SubProcess create_model() end ==================================
2022-09-12 15:10:29,327:INFO:Creating metrics dataframe
2022-09-12 15:10:29,380:INFO:Initializing AdaBoost Regressor
2022-09-12 15:10:29,381:INFO:Total runtime is 0.44917745590209956 minutes
2022-09-12 15:10:29,392:INFO:SubProcess create_model() called ==================================
2022-09-12 15:10:29,392:INFO:Initializing create_model()
2022-09-12 15:10:29,394:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665D93DC0>, return_train_score=False, kwargs={})
2022-09-12 15:10:29,394:INFO:Checking exceptions
2022-09-12 15:10:29,394:INFO:Importing libraries
2022-09-12 15:10:29,394:INFO:Copying training dataset
2022-09-12 15:10:29,396:INFO:Defining folds
2022-09-12 15:10:29,396:INFO:Declaring metric variables
2022-09-12 15:10:29,412:INFO:Importing untrained model
2022-09-12 15:10:29,426:INFO:AdaBoost Regressor Imported succesfully
2022-09-12 15:10:29,461:INFO:Starting cross validation
2022-09-12 15:10:29,464:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:10:30,019:INFO:Calculating mean and std
2022-09-12 15:10:30,021:INFO:Creating metrics dataframe
2022-09-12 15:10:30,059:INFO:Uploading results into container
2022-09-12 15:10:30,059:INFO:Uploading model into container now
2022-09-12 15:10:30,059:INFO:create_model_container: 15
2022-09-12 15:10:30,059:INFO:master_model_container: 15
2022-09-12 15:10:30,059:INFO:display_container: 2
2022-09-12 15:10:30,062:INFO:AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=123)
2022-09-12 15:10:30,062:INFO:create_model() succesfully completed......................................
2022-09-12 15:10:30,673:INFO:SubProcess create_model() end ==================================
2022-09-12 15:10:30,673:INFO:Creating metrics dataframe
2022-09-12 15:10:30,747:INFO:Initializing Gradient Boosting Regressor
2022-09-12 15:10:30,747:INFO:Total runtime is 0.4719457348187764 minutes
2022-09-12 15:10:30,762:INFO:SubProcess create_model() called ==================================
2022-09-12 15:10:30,764:INFO:Initializing create_model()
2022-09-12 15:10:30,764:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665D93DC0>, return_train_score=False, kwargs={})
2022-09-12 15:10:30,764:INFO:Checking exceptions
2022-09-12 15:10:30,764:INFO:Importing libraries
2022-09-12 15:10:30,764:INFO:Copying training dataset
2022-09-12 15:10:30,768:INFO:Defining folds
2022-09-12 15:10:30,769:INFO:Declaring metric variables
2022-09-12 15:10:30,786:INFO:Importing untrained model
2022-09-12 15:10:30,803:INFO:Gradient Boosting Regressor Imported succesfully
2022-09-12 15:10:30,853:INFO:Starting cross validation
2022-09-12 15:10:30,853:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:10:31,264:INFO:Calculating mean and std
2022-09-12 15:10:31,265:INFO:Creating metrics dataframe
2022-09-12 15:10:31,312:INFO:Uploading results into container
2022-09-12 15:10:31,313:INFO:Uploading model into container now
2022-09-12 15:10:31,313:INFO:create_model_container: 16
2022-09-12 15:10:31,313:INFO:master_model_container: 16
2022-09-12 15:10:31,313:INFO:display_container: 2
2022-09-12 15:10:31,314:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=123, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2022-09-12 15:10:31,314:INFO:create_model() succesfully completed......................................
2022-09-12 15:10:31,919:INFO:SubProcess create_model() end ==================================
2022-09-12 15:10:31,919:INFO:Creating metrics dataframe
2022-09-12 15:10:31,986:INFO:Initializing Extreme Gradient Boosting
2022-09-12 15:10:31,986:INFO:Total runtime is 0.49259890317916866 minutes
2022-09-12 15:10:32,007:INFO:SubProcess create_model() called ==================================
2022-09-12 15:10:32,008:INFO:Initializing create_model()
2022-09-12 15:10:32,009:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665D93DC0>, return_train_score=False, kwargs={})
2022-09-12 15:10:32,009:INFO:Checking exceptions
2022-09-12 15:10:32,009:INFO:Importing libraries
2022-09-12 15:10:32,009:INFO:Copying training dataset
2022-09-12 15:10:32,012:INFO:Defining folds
2022-09-12 15:10:32,012:INFO:Declaring metric variables
2022-09-12 15:10:32,033:INFO:Importing untrained model
2022-09-12 15:10:32,066:INFO:Extreme Gradient Boosting Imported succesfully
2022-09-12 15:10:32,123:INFO:Starting cross validation
2022-09-12 15:10:32,132:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:10:33,196:INFO:Calculating mean and std
2022-09-12 15:10:33,197:INFO:Creating metrics dataframe
2022-09-12 15:10:33,241:INFO:Uploading results into container
2022-09-12 15:10:33,242:INFO:Uploading model into container now
2022-09-12 15:10:33,242:INFO:create_model_container: 17
2022-09-12 15:10:33,242:INFO:master_model_container: 17
2022-09-12 15:10:33,242:INFO:display_container: 2
2022-09-12 15:10:33,245:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror',
             predictor=None, random_state=123, reg_alpha=None, ...)
2022-09-12 15:10:33,245:INFO:create_model() succesfully completed......................................
2022-09-12 15:10:33,859:INFO:SubProcess create_model() end ==================================
2022-09-12 15:10:33,859:INFO:Creating metrics dataframe
2022-09-12 15:10:33,908:INFO:Initializing Light Gradient Boosting Machine
2022-09-12 15:10:33,908:INFO:Total runtime is 0.52463618516922 minutes
2022-09-12 15:10:33,921:INFO:SubProcess create_model() called ==================================
2022-09-12 15:10:33,922:INFO:Initializing create_model()
2022-09-12 15:10:33,923:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665D93DC0>, return_train_score=False, kwargs={})
2022-09-12 15:10:33,923:INFO:Checking exceptions
2022-09-12 15:10:33,923:INFO:Importing libraries
2022-09-12 15:10:33,924:INFO:Copying training dataset
2022-09-12 15:10:33,925:INFO:Defining folds
2022-09-12 15:10:33,925:INFO:Declaring metric variables
2022-09-12 15:10:33,943:INFO:Importing untrained model
2022-09-12 15:10:33,956:INFO:Light Gradient Boosting Machine Imported succesfully
2022-09-12 15:10:33,987:INFO:Starting cross validation
2022-09-12 15:10:33,989:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:10:34,432:INFO:Calculating mean and std
2022-09-12 15:10:34,434:INFO:Creating metrics dataframe
2022-09-12 15:10:34,481:INFO:Uploading results into container
2022-09-12 15:10:34,481:INFO:Uploading model into container now
2022-09-12 15:10:34,482:INFO:create_model_container: 18
2022-09-12 15:10:34,482:INFO:master_model_container: 18
2022-09-12 15:10:34,482:INFO:display_container: 2
2022-09-12 15:10:34,485:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-09-12 15:10:34,485:INFO:create_model() succesfully completed......................................
2022-09-12 15:10:35,085:INFO:SubProcess create_model() end ==================================
2022-09-12 15:10:35,085:INFO:Creating metrics dataframe
2022-09-12 15:10:35,145:INFO:Initializing Dummy Regressor
2022-09-12 15:10:35,145:INFO:Total runtime is 0.5452512661616007 minutes
2022-09-12 15:10:35,163:INFO:SubProcess create_model() called ==================================
2022-09-12 15:10:35,164:INFO:Initializing create_model()
2022-09-12 15:10:35,164:INFO:create_model(estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665D93DC0>, return_train_score=False, kwargs={})
2022-09-12 15:10:35,164:INFO:Checking exceptions
2022-09-12 15:10:35,164:INFO:Importing libraries
2022-09-12 15:10:35,165:INFO:Copying training dataset
2022-09-12 15:10:35,167:INFO:Defining folds
2022-09-12 15:10:35,168:INFO:Declaring metric variables
2022-09-12 15:10:35,184:INFO:Importing untrained model
2022-09-12 15:10:35,205:INFO:Dummy Regressor Imported succesfully
2022-09-12 15:10:35,244:INFO:Starting cross validation
2022-09-12 15:10:35,246:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:10:35,351:INFO:Calculating mean and std
2022-09-12 15:10:35,353:INFO:Creating metrics dataframe
2022-09-12 15:10:35,394:INFO:Uploading results into container
2022-09-12 15:10:35,395:INFO:Uploading model into container now
2022-09-12 15:10:35,395:INFO:create_model_container: 19
2022-09-12 15:10:35,395:INFO:master_model_container: 19
2022-09-12 15:10:35,395:INFO:display_container: 2
2022-09-12 15:10:35,396:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2022-09-12 15:10:35,396:INFO:create_model() succesfully completed......................................
2022-09-12 15:10:36,019:INFO:SubProcess create_model() end ==================================
2022-09-12 15:10:36,020:INFO:Creating metrics dataframe
2022-09-12 15:10:36,140:INFO:Initializing create_model()
2022-09-12 15:10:36,140:INFO:create_model(estimator=HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-09-12 15:10:36,140:INFO:Checking exceptions
2022-09-12 15:10:36,140:INFO:Importing libraries
2022-09-12 15:10:36,140:INFO:Copying training dataset
2022-09-12 15:10:36,140:INFO:Defining folds
2022-09-12 15:10:36,140:INFO:Declaring metric variables
2022-09-12 15:10:36,140:INFO:Importing untrained model
2022-09-12 15:10:36,140:INFO:Declaring custom model
2022-09-12 15:10:36,140:INFO:Huber Regressor Imported succesfully
2022-09-12 15:10:36,140:INFO:Cross validation set to False
2022-09-12 15:10:36,140:INFO:Fitting Model
2022-09-12 15:10:36,210:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-12 15:10:36,210:INFO:create_models() succesfully completed......................................
2022-09-12 15:10:36,979:INFO:create_model_container: 19
2022-09-12 15:10:36,980:INFO:master_model_container: 19
2022-09-12 15:10:36,980:INFO:display_container: 2
2022-09-12 15:10:36,980:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-12 15:10:36,981:INFO:compare_models() succesfully completed......................................
2022-09-12 15:10:52,930:INFO:PyCaret Supervised Module
2022-09-12 15:10:52,931:INFO:ML Usecase: regression
2022-09-12 15:10:52,932:INFO:version 2.3.10
2022-09-12 15:10:52,932:INFO:Initializing setup()
2022-09-12 15:10:52,932:INFO:setup(target=mpy, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=['dosis_IC_ppm', 'CO2_gas'], numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-09-12 15:10:52,933:INFO:Checking environment
2022-09-12 15:10:52,933:INFO:python_version: 3.8.12
2022-09-12 15:10:52,934:INFO:python_build: ('default', 'Oct 12 2021 03:01:40')
2022-09-12 15:10:52,934:INFO:machine: AMD64
2022-09-12 15:10:52,934:INFO:platform: Windows-10-10.0.22000-SP0
2022-09-12 15:10:52,937:WARNING:cannot find psutil installation. memory not traceable. Install psutil using pip to enable memory logging.
2022-09-12 15:10:52,938:INFO:Checking libraries
2022-09-12 15:10:52,938:INFO:pd==1.4.2
2022-09-12 15:10:52,938:INFO:numpy==1.22.4
2022-09-12 15:10:52,938:INFO:sklearn==0.23.2
2022-09-12 15:10:52,938:INFO:lightgbm==3.3.1
2022-09-12 15:10:52,941:WARNING:catboost not found
2022-09-12 15:10:52,941:INFO:xgboost==1.6.1
2022-09-12 15:10:52,941:INFO:mlflow==1.21.0
2022-09-12 15:10:52,942:INFO:Checking Exceptions
2022-09-12 15:10:52,942:INFO:Declaring global variables
2022-09-12 15:10:52,942:INFO:USI: 6487
2022-09-12 15:10:52,942:INFO:pycaret_globals: {'dashboard_logger', 'display_container', 'fold_groups_param_full', '_all_metrics', 'gpu_param', '_all_models', 'seed', 'USI', 'logging_param', 'experiment__', 'y_train', 'iterative_imputation_iters_param', 'X', 'fold_generator', 'y_test', '_available_plots', 'target_param', 'n_jobs_param', 'prep_pipe', 'transform_target_method_param', '_internal_pipeline', 'pycaret_globals', 'X_test', 'fix_imbalance_param', 'master_model_container', 'stratify_param', '_all_models_internal', 'X_train', 'data_before_preprocess', 'log_plots_param', 'html_param', 'fix_imbalance_method_param', 'y', 'transform_target_param', 'create_model_container', 'exp_name_log', 'fold_groups_param', 'fold_param', '_gpu_n_jobs_param', 'imputation_classifier', '_ml_usecase', 'imputation_regressor', 'fold_shuffle_param'}
2022-09-12 15:10:52,943:INFO:Preparing display monitor
2022-09-12 15:10:52,943:INFO:Preparing display monitor
2022-09-12 15:10:52,977:INFO:Importing libraries
2022-09-12 15:10:52,977:INFO:Copying data for preprocessing
2022-09-12 15:10:53,001:INFO:Declaring preprocessing parameters
2022-09-12 15:10:53,002:INFO:Creating preprocessing pipeline
2022-09-12 15:10:53,011:INFO:Preprocessing pipeline created successfully
2022-09-12 15:10:53,011:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-09-12 15:10:53,011:INFO:Creating global containers
2022-09-12 15:10:53,011:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-09-12 15:10:54,546:WARNING:Couldn't import catboost.CatBoostRegressor
2022-09-12 15:10:54,842:WARNING:Couldn't import catboost.CatBoostRegressor
2022-09-12 15:10:54,842:INFO:Creating grid variables
2022-09-12 15:10:54,857:INFO:create_model_container: 0
2022-09-12 15:10:54,858:INFO:master_model_container: 0
2022-09-12 15:10:54,858:INFO:display_container: 1
2022-09-12 15:10:54,866:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=['dosis_IC_ppm',
                                                          'CO2_gas'],
                                      target='mpy', time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=N...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='mpy')),
                ('fix_perfect', Remove_100(target='mpy')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-09-12 15:10:54,867:INFO:setup() succesfully completed......................................
2022-09-12 15:10:57,408:INFO:Initializing get_config()
2022-09-12 15:10:57,408:INFO:get_config(variable=data_before_preprocess)
2022-09-12 15:10:57,415:INFO:Global variable: data_before_preprocess returned as       BPPD     BAPD  Caudal_gas_MSCFD  Presion_cabeza_psi  \
0   273.00  5187.00             120.0                 160   
1   306.90   251.10              33.0                 180   
2    30.00   970.00              51.0                 200   
3   311.64   324.36              28.0                 210   
4   412.48  4743.52              48.0                 200   
..     ...      ...               ...                 ...   
72   91.98  2974.02              22.0                 195   
73  295.80  4634.20              12.0                 156   
74  239.96  3188.04              50.7                 195   
75  992.00  3968.00              41.3                 170   
76  279.90  2830.10              45.0                 220   

    Temperatura_cabeza_F  Salinidad_ppm  CO2_gas  bicarbonatos_ppm  \
0                    220          76600        7               240   
1                    130          74000        0               281   
2                    192          73000       15               120   
3                    160          36200       15               220   
4                    150          82200       20               400   
..                   ...            ...      ...               ...   
72                   200          55000       10               370   
73                   200          60200        4               360   
74                   210          52800        5               360   
75                   210          69500        3               300   
76                   197          53200        7               300   

    dosis_IC_ppm  Fe_ppm       mpy  
0             50   45.90   8.41626  
1             50   77.11   0.10024  
2             90   54.00   7.17844  
3             40   56.21   1.50500  
4             40   54.80   0.71894  
..           ...     ...       ...  
72            70   34.90  10.20184  
73            40   71.82   3.36175  
74            80   40.90   0.76563  
75            50   48.90   3.65412  
76            80   32.00  10.41508  

[77 rows x 11 columns]
2022-09-12 15:10:57,416:INFO:get_config() succesfully completed......................................
2022-09-12 15:10:57,416:INFO:Initializing get_config()
2022-09-12 15:10:57,417:INFO:get_config(variable=prep_pipe)
2022-09-12 15:10:57,425:INFO:Global variable: prep_pipe returned as Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=['dosis_IC_ppm',
                                                          'CO2_gas'],
                                      target='mpy', time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=N...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='mpy')),
                ('fix_perfect', Remove_100(target='mpy')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-09-12 15:10:57,426:INFO:get_config() succesfully completed......................................
2022-09-12 15:11:28,417:INFO:Initializing compare_models()
2022-09-12 15:11:28,417:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2022-09-12 15:11:28,423:INFO:Checking exceptions
2022-09-12 15:11:28,424:INFO:Preparing display monitor
2022-09-12 15:11:28,424:INFO:Preparing display monitor
2022-09-12 15:11:28,482:INFO:Initializing Linear Regression
2022-09-12 15:11:28,482:INFO:Total runtime is 0.0 minutes
2022-09-12 15:11:28,498:INFO:SubProcess create_model() called ==================================
2022-09-12 15:11:28,498:INFO:Initializing create_model()
2022-09-12 15:11:28,498:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D656406460>, return_train_score=False, kwargs={})
2022-09-12 15:11:28,498:INFO:Checking exceptions
2022-09-12 15:11:28,498:INFO:Importing libraries
2022-09-12 15:11:28,498:INFO:Copying training dataset
2022-09-12 15:11:28,498:INFO:Defining folds
2022-09-12 15:11:28,498:INFO:Declaring metric variables
2022-09-12 15:11:28,504:INFO:Importing untrained model
2022-09-12 15:11:28,512:INFO:Linear Regression Imported succesfully
2022-09-12 15:11:28,519:INFO:Starting cross validation
2022-09-12 15:11:28,519:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:11:28,696:INFO:Calculating mean and std
2022-09-12 15:11:28,699:INFO:Creating metrics dataframe
2022-09-12 15:11:28,762:INFO:Uploading results into container
2022-09-12 15:11:28,762:INFO:Uploading model into container now
2022-09-12 15:11:28,762:INFO:create_model_container: 1
2022-09-12 15:11:28,762:INFO:master_model_container: 1
2022-09-12 15:11:28,762:INFO:display_container: 2
2022-09-12 15:11:28,763:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2022-09-12 15:11:28,763:INFO:create_model() succesfully completed......................................
2022-09-12 15:11:28,992:INFO:SubProcess create_model() end ==================================
2022-09-12 15:11:28,992:INFO:Creating metrics dataframe
2022-09-12 15:11:29,027:INFO:Initializing Lasso Regression
2022-09-12 15:11:29,027:INFO:Total runtime is 0.009083481629689534 minutes
2022-09-12 15:11:29,041:INFO:SubProcess create_model() called ==================================
2022-09-12 15:11:29,042:INFO:Initializing create_model()
2022-09-12 15:11:29,042:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D656406460>, return_train_score=False, kwargs={})
2022-09-12 15:11:29,042:INFO:Checking exceptions
2022-09-12 15:11:29,042:INFO:Importing libraries
2022-09-12 15:11:29,042:INFO:Copying training dataset
2022-09-12 15:11:29,043:INFO:Defining folds
2022-09-12 15:11:29,044:INFO:Declaring metric variables
2022-09-12 15:11:29,045:INFO:Importing untrained model
2022-09-12 15:11:29,058:INFO:Lasso Regression Imported succesfully
2022-09-12 15:11:29,077:INFO:Starting cross validation
2022-09-12 15:11:29,078:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:11:29,159:INFO:Calculating mean and std
2022-09-12 15:11:29,159:INFO:Creating metrics dataframe
2022-09-12 15:11:29,190:INFO:Uploading results into container
2022-09-12 15:11:29,190:INFO:Uploading model into container now
2022-09-12 15:11:29,190:INFO:create_model_container: 2
2022-09-12 15:11:29,190:INFO:master_model_container: 2
2022-09-12 15:11:29,190:INFO:display_container: 2
2022-09-12 15:11:29,190:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=123,
      selection='cyclic', tol=0.0001, warm_start=False)
2022-09-12 15:11:29,190:INFO:create_model() succesfully completed......................................
2022-09-12 15:11:29,316:INFO:SubProcess create_model() end ==================================
2022-09-12 15:11:29,316:INFO:Creating metrics dataframe
2022-09-12 15:11:29,358:INFO:Initializing Ridge Regression
2022-09-12 15:11:29,358:INFO:Total runtime is 0.014598015944163004 minutes
2022-09-12 15:11:29,374:INFO:SubProcess create_model() called ==================================
2022-09-12 15:11:29,374:INFO:Initializing create_model()
2022-09-12 15:11:29,374:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D656406460>, return_train_score=False, kwargs={})
2022-09-12 15:11:29,374:INFO:Checking exceptions
2022-09-12 15:11:29,374:INFO:Importing libraries
2022-09-12 15:11:29,374:INFO:Copying training dataset
2022-09-12 15:11:29,374:INFO:Defining folds
2022-09-12 15:11:29,378:INFO:Declaring metric variables
2022-09-12 15:11:29,387:INFO:Importing untrained model
2022-09-12 15:11:29,402:INFO:Ridge Regression Imported succesfully
2022-09-12 15:11:29,430:INFO:Starting cross validation
2022-09-12 15:11:29,430:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:11:29,525:INFO:Calculating mean and std
2022-09-12 15:11:29,525:INFO:Creating metrics dataframe
2022-09-12 15:11:29,556:INFO:Uploading results into container
2022-09-12 15:11:29,556:INFO:Uploading model into container now
2022-09-12 15:11:29,556:INFO:create_model_container: 3
2022-09-12 15:11:29,556:INFO:master_model_container: 3
2022-09-12 15:11:29,556:INFO:display_container: 2
2022-09-12 15:11:29,557:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=123, solver='auto', tol=0.001)
2022-09-12 15:11:29,557:INFO:create_model() succesfully completed......................................
2022-09-12 15:11:29,685:INFO:SubProcess create_model() end ==================================
2022-09-12 15:11:29,685:INFO:Creating metrics dataframe
2022-09-12 15:11:29,731:INFO:Initializing Elastic Net
2022-09-12 15:11:29,731:INFO:Total runtime is 0.02082165479660034 minutes
2022-09-12 15:11:29,747:INFO:SubProcess create_model() called ==================================
2022-09-12 15:11:29,747:INFO:Initializing create_model()
2022-09-12 15:11:29,747:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D656406460>, return_train_score=False, kwargs={})
2022-09-12 15:11:29,747:INFO:Checking exceptions
2022-09-12 15:11:29,747:INFO:Importing libraries
2022-09-12 15:11:29,747:INFO:Copying training dataset
2022-09-12 15:11:29,747:INFO:Defining folds
2022-09-12 15:11:29,753:INFO:Declaring metric variables
2022-09-12 15:11:29,759:INFO:Importing untrained model
2022-09-12 15:11:29,763:INFO:Elastic Net Imported succesfully
2022-09-12 15:11:29,781:INFO:Starting cross validation
2022-09-12 15:11:29,790:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:11:30,019:INFO:Calculating mean and std
2022-09-12 15:11:30,022:INFO:Creating metrics dataframe
2022-09-12 15:11:30,087:INFO:Uploading results into container
2022-09-12 15:11:30,087:INFO:Uploading model into container now
2022-09-12 15:11:30,087:INFO:create_model_container: 4
2022-09-12 15:11:30,088:INFO:master_model_container: 4
2022-09-12 15:11:30,088:INFO:display_container: 2
2022-09-12 15:11:30,088:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=123, selection='cyclic', tol=0.0001, warm_start=False)
2022-09-12 15:11:30,089:INFO:create_model() succesfully completed......................................
2022-09-12 15:11:30,293:INFO:SubProcess create_model() end ==================================
2022-09-12 15:11:30,293:INFO:Creating metrics dataframe
2022-09-12 15:11:30,349:INFO:Initializing Least Angle Regression
2022-09-12 15:11:30,349:INFO:Total runtime is 0.031121595700581865 minutes
2022-09-12 15:11:30,379:INFO:SubProcess create_model() called ==================================
2022-09-12 15:11:30,379:INFO:Initializing create_model()
2022-09-12 15:11:30,384:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D656406460>, return_train_score=False, kwargs={})
2022-09-12 15:11:30,384:INFO:Checking exceptions
2022-09-12 15:11:30,385:INFO:Importing libraries
2022-09-12 15:11:30,385:INFO:Copying training dataset
2022-09-12 15:11:30,388:INFO:Defining folds
2022-09-12 15:11:30,388:INFO:Declaring metric variables
2022-09-12 15:11:30,402:INFO:Importing untrained model
2022-09-12 15:11:30,421:INFO:Least Angle Regression Imported succesfully
2022-09-12 15:11:30,474:INFO:Starting cross validation
2022-09-12 15:11:30,477:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:11:30,651:INFO:Calculating mean and std
2022-09-12 15:11:30,653:INFO:Creating metrics dataframe
2022-09-12 15:11:30,711:INFO:Uploading results into container
2022-09-12 15:11:30,712:INFO:Uploading model into container now
2022-09-12 15:11:30,712:INFO:create_model_container: 5
2022-09-12 15:11:30,712:INFO:master_model_container: 5
2022-09-12 15:11:30,712:INFO:display_container: 2
2022-09-12 15:11:30,713:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize=True, precompute='auto',
     random_state=123, verbose=False)
2022-09-12 15:11:30,713:INFO:create_model() succesfully completed......................................
2022-09-12 15:11:30,931:INFO:SubProcess create_model() end ==================================
2022-09-12 15:11:30,931:INFO:Creating metrics dataframe
2022-09-12 15:11:31,012:INFO:Initializing Lasso Least Angle Regression
2022-09-12 15:11:31,013:INFO:Total runtime is 0.04218002557754516 minutes
2022-09-12 15:11:31,038:INFO:SubProcess create_model() called ==================================
2022-09-12 15:11:31,039:INFO:Initializing create_model()
2022-09-12 15:11:31,039:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D656406460>, return_train_score=False, kwargs={})
2022-09-12 15:11:31,039:INFO:Checking exceptions
2022-09-12 15:11:31,039:INFO:Importing libraries
2022-09-12 15:11:31,039:INFO:Copying training dataset
2022-09-12 15:11:31,041:INFO:Defining folds
2022-09-12 15:11:31,043:INFO:Declaring metric variables
2022-09-12 15:11:31,066:INFO:Importing untrained model
2022-09-12 15:11:31,132:INFO:Lasso Least Angle Regression Imported succesfully
2022-09-12 15:11:31,181:INFO:Starting cross validation
2022-09-12 15:11:31,182:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:11:31,434:INFO:Calculating mean and std
2022-09-12 15:11:31,438:INFO:Creating metrics dataframe
2022-09-12 15:11:31,511:INFO:Uploading results into container
2022-09-12 15:11:31,511:INFO:Uploading model into container now
2022-09-12 15:11:31,511:INFO:create_model_container: 6
2022-09-12 15:11:31,511:INFO:master_model_container: 6
2022-09-12 15:11:31,512:INFO:display_container: 2
2022-09-12 15:11:31,512:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize=True,
          positive=False, precompute='auto', random_state=123, verbose=False)
2022-09-12 15:11:31,514:INFO:create_model() succesfully completed......................................
2022-09-12 15:11:31,708:INFO:SubProcess create_model() end ==================================
2022-09-12 15:11:31,708:INFO:Creating metrics dataframe
2022-09-12 15:11:31,769:INFO:Initializing Orthogonal Matching Pursuit
2022-09-12 15:11:31,769:INFO:Total runtime is 0.05479035774866739 minutes
2022-09-12 15:11:31,792:INFO:SubProcess create_model() called ==================================
2022-09-12 15:11:31,792:INFO:Initializing create_model()
2022-09-12 15:11:31,792:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D656406460>, return_train_score=False, kwargs={})
2022-09-12 15:11:31,792:INFO:Checking exceptions
2022-09-12 15:11:31,797:INFO:Importing libraries
2022-09-12 15:11:31,797:INFO:Copying training dataset
2022-09-12 15:11:31,799:INFO:Defining folds
2022-09-12 15:11:31,800:INFO:Declaring metric variables
2022-09-12 15:11:31,824:INFO:Importing untrained model
2022-09-12 15:11:31,844:INFO:Orthogonal Matching Pursuit Imported succesfully
2022-09-12 15:11:31,900:INFO:Starting cross validation
2022-09-12 15:11:31,904:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:11:32,030:INFO:Calculating mean and std
2022-09-12 15:11:32,032:INFO:Creating metrics dataframe
2022-09-12 15:11:32,084:INFO:Uploading results into container
2022-09-12 15:11:32,084:INFO:Uploading model into container now
2022-09-12 15:11:32,085:INFO:create_model_container: 7
2022-09-12 15:11:32,085:INFO:master_model_container: 7
2022-09-12 15:11:32,085:INFO:display_container: 2
2022-09-12 15:11:32,085:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None)
2022-09-12 15:11:32,086:INFO:create_model() succesfully completed......................................
2022-09-12 15:11:32,279:INFO:SubProcess create_model() end ==================================
2022-09-12 15:11:32,279:INFO:Creating metrics dataframe
2022-09-12 15:11:32,321:INFO:Initializing Bayesian Ridge
2022-09-12 15:11:32,321:INFO:Total runtime is 0.06398382981618245 minutes
2022-09-12 15:11:32,339:INFO:SubProcess create_model() called ==================================
2022-09-12 15:11:32,340:INFO:Initializing create_model()
2022-09-12 15:11:32,340:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D656406460>, return_train_score=False, kwargs={})
2022-09-12 15:11:32,340:INFO:Checking exceptions
2022-09-12 15:11:32,340:INFO:Importing libraries
2022-09-12 15:11:32,341:INFO:Copying training dataset
2022-09-12 15:11:32,343:INFO:Defining folds
2022-09-12 15:11:32,343:INFO:Declaring metric variables
2022-09-12 15:11:32,354:INFO:Importing untrained model
2022-09-12 15:11:32,368:INFO:Bayesian Ridge Imported succesfully
2022-09-12 15:11:32,400:INFO:Starting cross validation
2022-09-12 15:11:32,404:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:11:32,686:INFO:Calculating mean and std
2022-09-12 15:11:32,687:INFO:Creating metrics dataframe
2022-09-12 15:11:32,749:INFO:Uploading results into container
2022-09-12 15:11:32,749:INFO:Uploading model into container now
2022-09-12 15:11:32,749:INFO:create_model_container: 8
2022-09-12 15:11:32,749:INFO:master_model_container: 8
2022-09-12 15:11:32,749:INFO:display_container: 2
2022-09-12 15:11:32,749:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False)
2022-09-12 15:11:32,749:INFO:create_model() succesfully completed......................................
2022-09-12 15:11:32,948:INFO:SubProcess create_model() end ==================================
2022-09-12 15:11:32,949:INFO:Creating metrics dataframe
2022-09-12 15:11:33,003:INFO:Initializing Passive Aggressive Regressor
2022-09-12 15:11:33,003:INFO:Total runtime is 0.07534921964009603 minutes
2022-09-12 15:11:33,018:INFO:SubProcess create_model() called ==================================
2022-09-12 15:11:33,021:INFO:Initializing create_model()
2022-09-12 15:11:33,022:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D656406460>, return_train_score=False, kwargs={})
2022-09-12 15:11:33,022:INFO:Checking exceptions
2022-09-12 15:11:33,022:INFO:Importing libraries
2022-09-12 15:11:33,022:INFO:Copying training dataset
2022-09-12 15:11:33,025:INFO:Defining folds
2022-09-12 15:11:33,025:INFO:Declaring metric variables
2022-09-12 15:11:33,044:INFO:Importing untrained model
2022-09-12 15:11:33,068:INFO:Passive Aggressive Regressor Imported succesfully
2022-09-12 15:11:33,112:INFO:Starting cross validation
2022-09-12 15:11:33,117:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:11:33,261:INFO:Calculating mean and std
2022-09-12 15:11:33,262:INFO:Creating metrics dataframe
2022-09-12 15:11:33,303:INFO:Uploading results into container
2022-09-12 15:11:33,303:INFO:Uploading model into container now
2022-09-12 15:11:33,304:INFO:create_model_container: 9
2022-09-12 15:11:33,304:INFO:master_model_container: 9
2022-09-12 15:11:33,304:INFO:display_container: 2
2022-09-12 15:11:33,304:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=123, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-09-12 15:11:33,304:INFO:create_model() succesfully completed......................................
2022-09-12 15:11:33,495:INFO:SubProcess create_model() end ==================================
2022-09-12 15:11:33,495:INFO:Creating metrics dataframe
2022-09-12 15:11:33,588:INFO:Initializing Huber Regressor
2022-09-12 15:11:33,588:INFO:Total runtime is 0.08509474595387777 minutes
2022-09-12 15:11:33,611:INFO:SubProcess create_model() called ==================================
2022-09-12 15:11:33,611:INFO:Initializing create_model()
2022-09-12 15:11:33,611:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D656406460>, return_train_score=False, kwargs={})
2022-09-12 15:11:33,611:INFO:Checking exceptions
2022-09-12 15:11:33,611:INFO:Importing libraries
2022-09-12 15:11:33,611:INFO:Copying training dataset
2022-09-12 15:11:33,611:INFO:Defining folds
2022-09-12 15:11:33,611:INFO:Declaring metric variables
2022-09-12 15:11:33,638:INFO:Importing untrained model
2022-09-12 15:11:33,668:INFO:Huber Regressor Imported succesfully
2022-09-12 15:11:33,729:INFO:Starting cross validation
2022-09-12 15:11:33,729:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:11:34,098:INFO:Calculating mean and std
2022-09-12 15:11:34,099:INFO:Creating metrics dataframe
2022-09-12 15:11:34,140:INFO:Uploading results into container
2022-09-12 15:11:34,140:INFO:Uploading model into container now
2022-09-12 15:11:34,140:INFO:create_model_container: 10
2022-09-12 15:11:34,141:INFO:master_model_container: 10
2022-09-12 15:11:34,141:INFO:display_container: 2
2022-09-12 15:11:34,142:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-12 15:11:34,142:INFO:create_model() succesfully completed......................................
2022-09-12 15:11:34,325:INFO:SubProcess create_model() end ==================================
2022-09-12 15:11:34,325:INFO:Creating metrics dataframe
2022-09-12 15:11:34,370:INFO:Initializing K Neighbors Regressor
2022-09-12 15:11:34,371:INFO:Total runtime is 0.09815641244252522 minutes
2022-09-12 15:11:34,385:INFO:SubProcess create_model() called ==================================
2022-09-12 15:11:34,386:INFO:Initializing create_model()
2022-09-12 15:11:34,387:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D656406460>, return_train_score=False, kwargs={})
2022-09-12 15:11:34,387:INFO:Checking exceptions
2022-09-12 15:11:34,388:INFO:Importing libraries
2022-09-12 15:11:34,388:INFO:Copying training dataset
2022-09-12 15:11:34,391:INFO:Defining folds
2022-09-12 15:11:34,391:INFO:Declaring metric variables
2022-09-12 15:11:34,409:INFO:Importing untrained model
2022-09-12 15:11:34,422:INFO:K Neighbors Regressor Imported succesfully
2022-09-12 15:11:34,448:INFO:Starting cross validation
2022-09-12 15:11:34,450:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:11:34,609:INFO:Calculating mean and std
2022-09-12 15:11:34,611:INFO:Creating metrics dataframe
2022-09-12 15:11:34,654:INFO:Uploading results into container
2022-09-12 15:11:34,655:INFO:Uploading model into container now
2022-09-12 15:11:34,655:INFO:create_model_container: 11
2022-09-12 15:11:34,655:INFO:master_model_container: 11
2022-09-12 15:11:34,655:INFO:display_container: 2
2022-09-12 15:11:34,656:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2022-09-12 15:11:34,656:INFO:create_model() succesfully completed......................................
2022-09-12 15:11:34,854:INFO:SubProcess create_model() end ==================================
2022-09-12 15:11:34,854:INFO:Creating metrics dataframe
2022-09-12 15:11:34,911:INFO:Initializing Decision Tree Regressor
2022-09-12 15:11:34,911:INFO:Total runtime is 0.10715163946151733 minutes
2022-09-12 15:11:34,934:INFO:SubProcess create_model() called ==================================
2022-09-12 15:11:34,935:INFO:Initializing create_model()
2022-09-12 15:11:34,936:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D656406460>, return_train_score=False, kwargs={})
2022-09-12 15:11:34,936:INFO:Checking exceptions
2022-09-12 15:11:34,938:INFO:Importing libraries
2022-09-12 15:11:34,938:INFO:Copying training dataset
2022-09-12 15:11:34,940:INFO:Defining folds
2022-09-12 15:11:34,940:INFO:Declaring metric variables
2022-09-12 15:11:34,960:INFO:Importing untrained model
2022-09-12 15:11:34,986:INFO:Decision Tree Regressor Imported succesfully
2022-09-12 15:11:35,051:INFO:Starting cross validation
2022-09-12 15:11:35,052:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:11:35,292:INFO:Calculating mean and std
2022-09-12 15:11:35,295:INFO:Creating metrics dataframe
2022-09-12 15:11:35,358:INFO:Uploading results into container
2022-09-12 15:11:35,358:INFO:Uploading model into container now
2022-09-12 15:11:35,358:INFO:create_model_container: 12
2022-09-12 15:11:35,358:INFO:master_model_container: 12
2022-09-12 15:11:35,359:INFO:display_container: 2
2022-09-12 15:11:35,359:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=123, splitter='best')
2022-09-12 15:11:35,360:INFO:create_model() succesfully completed......................................
2022-09-12 15:11:35,536:INFO:SubProcess create_model() end ==================================
2022-09-12 15:11:35,536:INFO:Creating metrics dataframe
2022-09-12 15:11:35,586:INFO:Initializing Random Forest Regressor
2022-09-12 15:11:35,586:INFO:Total runtime is 0.11840283075968425 minutes
2022-09-12 15:11:35,604:INFO:SubProcess create_model() called ==================================
2022-09-12 15:11:35,605:INFO:Initializing create_model()
2022-09-12 15:11:35,605:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D656406460>, return_train_score=False, kwargs={})
2022-09-12 15:11:35,606:INFO:Checking exceptions
2022-09-12 15:11:35,606:INFO:Importing libraries
2022-09-12 15:11:35,606:INFO:Copying training dataset
2022-09-12 15:11:35,608:INFO:Defining folds
2022-09-12 15:11:35,609:INFO:Declaring metric variables
2022-09-12 15:11:35,621:INFO:Importing untrained model
2022-09-12 15:11:35,635:INFO:Random Forest Regressor Imported succesfully
2022-09-12 15:11:35,673:INFO:Starting cross validation
2022-09-12 15:11:35,675:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:11:36,617:INFO:Calculating mean and std
2022-09-12 15:11:36,619:INFO:Creating metrics dataframe
2022-09-12 15:11:36,693:INFO:Uploading results into container
2022-09-12 15:11:36,694:INFO:Uploading model into container now
2022-09-12 15:11:36,694:INFO:create_model_container: 13
2022-09-12 15:11:36,695:INFO:master_model_container: 13
2022-09-12 15:11:36,695:INFO:display_container: 2
2022-09-12 15:11:36,697:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=123, verbose=0, warm_start=False)
2022-09-12 15:11:36,697:INFO:create_model() succesfully completed......................................
2022-09-12 15:11:36,917:INFO:SubProcess create_model() end ==================================
2022-09-12 15:11:36,917:INFO:Creating metrics dataframe
2022-09-12 15:11:36,984:INFO:Initializing Extra Trees Regressor
2022-09-12 15:11:36,985:INFO:Total runtime is 0.14171602328618368 minutes
2022-09-12 15:11:37,005:INFO:SubProcess create_model() called ==================================
2022-09-12 15:11:37,006:INFO:Initializing create_model()
2022-09-12 15:11:37,007:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D656406460>, return_train_score=False, kwargs={})
2022-09-12 15:11:37,007:INFO:Checking exceptions
2022-09-12 15:11:37,008:INFO:Importing libraries
2022-09-12 15:11:37,008:INFO:Copying training dataset
2022-09-12 15:11:37,011:INFO:Defining folds
2022-09-12 15:11:37,011:INFO:Declaring metric variables
2022-09-12 15:11:37,028:INFO:Importing untrained model
2022-09-12 15:11:37,055:INFO:Extra Trees Regressor Imported succesfully
2022-09-12 15:11:37,108:INFO:Starting cross validation
2022-09-12 15:11:37,109:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:11:38,183:INFO:Calculating mean and std
2022-09-12 15:11:38,183:INFO:Creating metrics dataframe
2022-09-12 15:11:38,260:INFO:Uploading results into container
2022-09-12 15:11:38,260:INFO:Uploading model into container now
2022-09-12 15:11:38,261:INFO:create_model_container: 14
2022-09-12 15:11:38,261:INFO:master_model_container: 14
2022-09-12 15:11:38,261:INFO:display_container: 2
2022-09-12 15:11:38,264:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=123, verbose=0, warm_start=False)
2022-09-12 15:11:38,264:INFO:create_model() succesfully completed......................................
2022-09-12 15:11:38,436:INFO:SubProcess create_model() end ==================================
2022-09-12 15:11:38,436:INFO:Creating metrics dataframe
2022-09-12 15:11:38,472:INFO:Initializing AdaBoost Regressor
2022-09-12 15:11:38,472:INFO:Total runtime is 0.16650685071945193 minutes
2022-09-12 15:11:38,505:INFO:SubProcess create_model() called ==================================
2022-09-12 15:11:38,505:INFO:Initializing create_model()
2022-09-12 15:11:38,505:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D656406460>, return_train_score=False, kwargs={})
2022-09-12 15:11:38,505:INFO:Checking exceptions
2022-09-12 15:11:38,505:INFO:Importing libraries
2022-09-12 15:11:38,505:INFO:Copying training dataset
2022-09-12 15:11:38,505:INFO:Defining folds
2022-09-12 15:11:38,514:INFO:Declaring metric variables
2022-09-12 15:11:38,534:INFO:Importing untrained model
2022-09-12 15:11:38,558:INFO:AdaBoost Regressor Imported succesfully
2022-09-12 15:11:38,620:INFO:Starting cross validation
2022-09-12 15:11:38,623:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:11:39,014:INFO:Calculating mean and std
2022-09-12 15:11:39,014:INFO:Creating metrics dataframe
2022-09-12 15:11:39,083:INFO:Uploading results into container
2022-09-12 15:11:39,084:INFO:Uploading model into container now
2022-09-12 15:11:39,084:INFO:create_model_container: 15
2022-09-12 15:11:39,084:INFO:master_model_container: 15
2022-09-12 15:11:39,084:INFO:display_container: 2
2022-09-12 15:11:39,085:INFO:AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=123)
2022-09-12 15:11:39,085:INFO:create_model() succesfully completed......................................
2022-09-12 15:11:39,269:INFO:SubProcess create_model() end ==================================
2022-09-12 15:11:39,270:INFO:Creating metrics dataframe
2022-09-12 15:11:39,320:INFO:Initializing Gradient Boosting Regressor
2022-09-12 15:11:39,320:INFO:Total runtime is 0.18062817255655927 minutes
2022-09-12 15:11:39,334:INFO:SubProcess create_model() called ==================================
2022-09-12 15:11:39,334:INFO:Initializing create_model()
2022-09-12 15:11:39,334:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D656406460>, return_train_score=False, kwargs={})
2022-09-12 15:11:39,334:INFO:Checking exceptions
2022-09-12 15:11:39,337:INFO:Importing libraries
2022-09-12 15:11:39,337:INFO:Copying training dataset
2022-09-12 15:11:39,339:INFO:Defining folds
2022-09-12 15:11:39,340:INFO:Declaring metric variables
2022-09-12 15:11:39,354:INFO:Importing untrained model
2022-09-12 15:11:39,372:INFO:Gradient Boosting Regressor Imported succesfully
2022-09-12 15:11:39,413:INFO:Starting cross validation
2022-09-12 15:11:39,413:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:11:39,655:INFO:Calculating mean and std
2022-09-12 15:11:39,655:INFO:Creating metrics dataframe
2022-09-12 15:11:39,699:INFO:Uploading results into container
2022-09-12 15:11:39,699:INFO:Uploading model into container now
2022-09-12 15:11:39,699:INFO:create_model_container: 16
2022-09-12 15:11:39,699:INFO:master_model_container: 16
2022-09-12 15:11:39,699:INFO:display_container: 2
2022-09-12 15:11:39,699:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=123, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2022-09-12 15:11:39,699:INFO:create_model() succesfully completed......................................
2022-09-12 15:11:39,889:INFO:SubProcess create_model() end ==================================
2022-09-12 15:11:39,889:INFO:Creating metrics dataframe
2022-09-12 15:11:39,938:INFO:Initializing Extreme Gradient Boosting
2022-09-12 15:11:39,939:INFO:Total runtime is 0.19095060825347904 minutes
2022-09-12 15:11:39,956:INFO:SubProcess create_model() called ==================================
2022-09-12 15:11:39,957:INFO:Initializing create_model()
2022-09-12 15:11:39,957:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D656406460>, return_train_score=False, kwargs={})
2022-09-12 15:11:39,957:INFO:Checking exceptions
2022-09-12 15:11:39,958:INFO:Importing libraries
2022-09-12 15:11:39,958:INFO:Copying training dataset
2022-09-12 15:11:39,961:INFO:Defining folds
2022-09-12 15:11:39,961:INFO:Declaring metric variables
2022-09-12 15:11:39,984:INFO:Importing untrained model
2022-09-12 15:11:40,006:INFO:Extreme Gradient Boosting Imported succesfully
2022-09-12 15:11:40,057:INFO:Starting cross validation
2022-09-12 15:11:40,065:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:11:40,631:INFO:Calculating mean and std
2022-09-12 15:11:40,633:INFO:Creating metrics dataframe
2022-09-12 15:11:40,669:INFO:Uploading results into container
2022-09-12 15:11:40,669:INFO:Uploading model into container now
2022-09-12 15:11:40,670:INFO:create_model_container: 17
2022-09-12 15:11:40,670:INFO:master_model_container: 17
2022-09-12 15:11:40,670:INFO:display_container: 2
2022-09-12 15:11:40,672:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror',
             predictor=None, random_state=123, reg_alpha=None, ...)
2022-09-12 15:11:40,672:INFO:create_model() succesfully completed......................................
2022-09-12 15:11:40,869:INFO:SubProcess create_model() end ==================================
2022-09-12 15:11:40,869:INFO:Creating metrics dataframe
2022-09-12 15:11:40,923:INFO:Initializing Light Gradient Boosting Machine
2022-09-12 15:11:40,924:INFO:Total runtime is 0.20735502243041995 minutes
2022-09-12 15:11:40,938:INFO:SubProcess create_model() called ==================================
2022-09-12 15:11:40,939:INFO:Initializing create_model()
2022-09-12 15:11:40,939:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D656406460>, return_train_score=False, kwargs={})
2022-09-12 15:11:40,940:INFO:Checking exceptions
2022-09-12 15:11:40,940:INFO:Importing libraries
2022-09-12 15:11:40,940:INFO:Copying training dataset
2022-09-12 15:11:40,943:INFO:Defining folds
2022-09-12 15:11:40,943:INFO:Declaring metric variables
2022-09-12 15:11:40,959:INFO:Importing untrained model
2022-09-12 15:11:40,978:INFO:Light Gradient Boosting Machine Imported succesfully
2022-09-12 15:11:41,022:INFO:Starting cross validation
2022-09-12 15:11:41,024:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:11:41,175:INFO:Calculating mean and std
2022-09-12 15:11:41,177:INFO:Creating metrics dataframe
2022-09-12 15:11:41,231:INFO:Uploading results into container
2022-09-12 15:11:41,231:INFO:Uploading model into container now
2022-09-12 15:11:41,232:INFO:create_model_container: 18
2022-09-12 15:11:41,232:INFO:master_model_container: 18
2022-09-12 15:11:41,232:INFO:display_container: 2
2022-09-12 15:11:41,234:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-09-12 15:11:41,234:INFO:create_model() succesfully completed......................................
2022-09-12 15:11:41,423:INFO:SubProcess create_model() end ==================================
2022-09-12 15:11:41,423:INFO:Creating metrics dataframe
2022-09-12 15:11:41,483:INFO:Initializing Dummy Regressor
2022-09-12 15:11:41,484:INFO:Total runtime is 0.2166918794314067 minutes
2022-09-12 15:11:41,500:INFO:SubProcess create_model() called ==================================
2022-09-12 15:11:41,501:INFO:Initializing create_model()
2022-09-12 15:11:41,501:INFO:create_model(estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D656406460>, return_train_score=False, kwargs={})
2022-09-12 15:11:41,501:INFO:Checking exceptions
2022-09-12 15:11:41,502:INFO:Importing libraries
2022-09-12 15:11:41,502:INFO:Copying training dataset
2022-09-12 15:11:41,504:INFO:Defining folds
2022-09-12 15:11:41,504:INFO:Declaring metric variables
2022-09-12 15:11:41,519:INFO:Importing untrained model
2022-09-12 15:11:41,539:INFO:Dummy Regressor Imported succesfully
2022-09-12 15:11:41,578:INFO:Starting cross validation
2022-09-12 15:11:41,580:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:11:41,782:INFO:Calculating mean and std
2022-09-12 15:11:41,786:INFO:Creating metrics dataframe
2022-09-12 15:11:41,861:INFO:Uploading results into container
2022-09-12 15:11:41,861:INFO:Uploading model into container now
2022-09-12 15:11:41,862:INFO:create_model_container: 19
2022-09-12 15:11:41,862:INFO:master_model_container: 19
2022-09-12 15:11:41,862:INFO:display_container: 2
2022-09-12 15:11:41,863:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2022-09-12 15:11:41,863:INFO:create_model() succesfully completed......................................
2022-09-12 15:11:42,037:INFO:SubProcess create_model() end ==================================
2022-09-12 15:11:42,037:INFO:Creating metrics dataframe
2022-09-12 15:11:42,138:INFO:Initializing create_model()
2022-09-12 15:11:42,138:INFO:create_model(estimator=HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-09-12 15:11:42,139:INFO:Checking exceptions
2022-09-12 15:11:42,139:INFO:Importing libraries
2022-09-12 15:11:42,139:INFO:Copying training dataset
2022-09-12 15:11:42,140:INFO:Defining folds
2022-09-12 15:11:42,140:INFO:Declaring metric variables
2022-09-12 15:11:42,141:INFO:Importing untrained model
2022-09-12 15:11:42,141:INFO:Declaring custom model
2022-09-12 15:11:42,142:INFO:Huber Regressor Imported succesfully
2022-09-12 15:11:42,143:INFO:Cross validation set to False
2022-09-12 15:11:42,143:INFO:Fitting Model
2022-09-12 15:11:42,223:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-12 15:11:42,223:INFO:create_models() succesfully completed......................................
2022-09-12 15:11:42,447:INFO:create_model_container: 19
2022-09-12 15:11:42,448:INFO:master_model_container: 19
2022-09-12 15:11:42,448:INFO:display_container: 2
2022-09-12 15:11:42,449:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-12 15:11:42,449:INFO:compare_models() succesfully completed......................................
2022-09-12 15:12:44,298:INFO:PyCaret Supervised Module
2022-09-12 15:12:44,298:INFO:ML Usecase: regression
2022-09-12 15:12:44,299:INFO:version 2.3.10
2022-09-12 15:12:44,299:INFO:Initializing setup()
2022-09-12 15:12:44,299:INFO:setup(target=mpy, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=['dosis_IC_ppm', 'CO2_gas'], numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-09-12 15:12:44,300:INFO:Checking environment
2022-09-12 15:12:44,300:INFO:python_version: 3.8.12
2022-09-12 15:12:44,300:INFO:python_build: ('default', 'Oct 12 2021 03:01:40')
2022-09-12 15:12:44,300:INFO:machine: AMD64
2022-09-12 15:12:44,300:INFO:platform: Windows-10-10.0.22000-SP0
2022-09-12 15:12:44,302:WARNING:cannot find psutil installation. memory not traceable. Install psutil using pip to enable memory logging.
2022-09-12 15:12:44,302:INFO:Checking libraries
2022-09-12 15:12:44,302:INFO:pd==1.4.2
2022-09-12 15:12:44,302:INFO:numpy==1.22.4
2022-09-12 15:12:44,303:INFO:sklearn==0.23.2
2022-09-12 15:12:44,303:INFO:lightgbm==3.3.1
2022-09-12 15:12:44,304:WARNING:catboost not found
2022-09-12 15:12:44,304:INFO:xgboost==1.6.1
2022-09-12 15:12:44,305:INFO:mlflow==1.21.0
2022-09-12 15:12:44,305:INFO:Checking Exceptions
2022-09-12 15:12:44,305:INFO:Declaring global variables
2022-09-12 15:12:44,305:INFO:USI: a9cb
2022-09-12 15:12:44,305:INFO:pycaret_globals: {'dashboard_logger', 'display_container', 'fold_groups_param_full', '_all_metrics', 'gpu_param', '_all_models', 'seed', 'USI', 'logging_param', 'experiment__', 'y_train', 'iterative_imputation_iters_param', 'X', 'fold_generator', 'y_test', '_available_plots', 'target_param', 'n_jobs_param', 'prep_pipe', 'transform_target_method_param', '_internal_pipeline', 'pycaret_globals', 'X_test', 'fix_imbalance_param', 'master_model_container', 'stratify_param', '_all_models_internal', 'X_train', 'data_before_preprocess', 'log_plots_param', 'html_param', 'fix_imbalance_method_param', 'y', 'transform_target_param', 'create_model_container', 'exp_name_log', 'fold_groups_param', 'fold_param', '_gpu_n_jobs_param', 'imputation_classifier', '_ml_usecase', 'imputation_regressor', 'fold_shuffle_param'}
2022-09-12 15:12:44,305:INFO:Preparing display monitor
2022-09-12 15:12:44,305:INFO:Preparing display monitor
2022-09-12 15:12:44,324:INFO:Importing libraries
2022-09-12 15:12:44,324:INFO:Copying data for preprocessing
2022-09-12 15:12:44,339:INFO:Declaring preprocessing parameters
2022-09-12 15:12:44,341:INFO:Creating preprocessing pipeline
2022-09-12 15:12:44,347:INFO:Preprocessing pipeline created successfully
2022-09-12 15:12:44,348:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-09-12 15:12:44,348:INFO:Creating global containers
2022-09-12 15:12:44,348:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-09-12 15:12:47,109:WARNING:Couldn't import catboost.CatBoostRegressor
2022-09-12 15:12:47,429:WARNING:Couldn't import catboost.CatBoostRegressor
2022-09-12 15:12:47,429:INFO:Creating grid variables
2022-09-12 15:12:47,460:INFO:create_model_container: 0
2022-09-12 15:12:47,460:INFO:master_model_container: 0
2022-09-12 15:12:47,461:INFO:display_container: 1
2022-09-12 15:12:47,474:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=['dosis_IC_ppm',
                                                          'CO2_gas'],
                                      target='mpy', time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=N...
                ('rem_outliers',
                 Outlier(contamination=0.05, methods=['pca'], random_state=123,
                         target='mpy')),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='mpy')),
                ('fix_perfect', Remove_100(target='mpy')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-09-12 15:12:47,474:INFO:setup() succesfully completed......................................
2022-09-12 15:12:58,978:INFO:Initializing compare_models()
2022-09-12 15:12:58,978:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2022-09-12 15:12:58,978:INFO:Checking exceptions
2022-09-12 15:12:58,978:INFO:Preparing display monitor
2022-09-12 15:12:58,978:INFO:Preparing display monitor
2022-09-12 15:12:59,027:INFO:Initializing Linear Regression
2022-09-12 15:12:59,027:INFO:Total runtime is 0.0 minutes
2022-09-12 15:12:59,042:INFO:SubProcess create_model() called ==================================
2022-09-12 15:12:59,047:INFO:Initializing create_model()
2022-09-12 15:12:59,047:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65E6FA730>, return_train_score=False, kwargs={})
2022-09-12 15:12:59,048:INFO:Checking exceptions
2022-09-12 15:12:59,048:INFO:Importing libraries
2022-09-12 15:12:59,048:INFO:Copying training dataset
2022-09-12 15:12:59,048:INFO:Defining folds
2022-09-12 15:12:59,049:INFO:Declaring metric variables
2022-09-12 15:12:59,060:INFO:Importing untrained model
2022-09-12 15:12:59,098:INFO:Linear Regression Imported succesfully
2022-09-12 15:12:59,163:INFO:Starting cross validation
2022-09-12 15:12:59,165:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:12:59,483:INFO:Calculating mean and std
2022-09-12 15:12:59,485:INFO:Creating metrics dataframe
2022-09-12 15:12:59,535:INFO:Uploading results into container
2022-09-12 15:12:59,535:INFO:Uploading model into container now
2022-09-12 15:12:59,535:INFO:create_model_container: 1
2022-09-12 15:12:59,535:INFO:master_model_container: 1
2022-09-12 15:12:59,535:INFO:display_container: 2
2022-09-12 15:12:59,535:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2022-09-12 15:12:59,535:INFO:create_model() succesfully completed......................................
2022-09-12 15:12:59,710:INFO:SubProcess create_model() end ==================================
2022-09-12 15:12:59,710:INFO:Creating metrics dataframe
2022-09-12 15:12:59,792:INFO:Initializing Lasso Regression
2022-09-12 15:12:59,793:INFO:Total runtime is 0.012773557504018148 minutes
2022-09-12 15:12:59,814:INFO:SubProcess create_model() called ==================================
2022-09-12 15:12:59,814:INFO:Initializing create_model()
2022-09-12 15:12:59,814:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65E6FA730>, return_train_score=False, kwargs={})
2022-09-12 15:12:59,814:INFO:Checking exceptions
2022-09-12 15:12:59,814:INFO:Importing libraries
2022-09-12 15:12:59,814:INFO:Copying training dataset
2022-09-12 15:12:59,814:INFO:Defining folds
2022-09-12 15:12:59,814:INFO:Declaring metric variables
2022-09-12 15:12:59,836:INFO:Importing untrained model
2022-09-12 15:12:59,853:INFO:Lasso Regression Imported succesfully
2022-09-12 15:12:59,890:INFO:Starting cross validation
2022-09-12 15:12:59,890:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:13:00,094:INFO:Calculating mean and std
2022-09-12 15:13:00,094:INFO:Creating metrics dataframe
2022-09-12 15:13:00,181:INFO:Uploading results into container
2022-09-12 15:13:00,182:INFO:Uploading model into container now
2022-09-12 15:13:00,182:INFO:create_model_container: 2
2022-09-12 15:13:00,182:INFO:master_model_container: 2
2022-09-12 15:13:00,182:INFO:display_container: 2
2022-09-12 15:13:00,182:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=123,
      selection='cyclic', tol=0.0001, warm_start=False)
2022-09-12 15:13:00,183:INFO:create_model() succesfully completed......................................
2022-09-12 15:13:00,366:INFO:SubProcess create_model() end ==================================
2022-09-12 15:13:00,366:INFO:Creating metrics dataframe
2022-09-12 15:13:00,409:INFO:Initializing Ridge Regression
2022-09-12 15:13:00,409:INFO:Total runtime is 0.023032021522521973 minutes
2022-09-12 15:13:00,424:INFO:SubProcess create_model() called ==================================
2022-09-12 15:13:00,424:INFO:Initializing create_model()
2022-09-12 15:13:00,425:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65E6FA730>, return_train_score=False, kwargs={})
2022-09-12 15:13:00,425:INFO:Checking exceptions
2022-09-12 15:13:00,425:INFO:Importing libraries
2022-09-12 15:13:00,425:INFO:Copying training dataset
2022-09-12 15:13:00,426:INFO:Defining folds
2022-09-12 15:13:00,426:INFO:Declaring metric variables
2022-09-12 15:13:00,438:INFO:Importing untrained model
2022-09-12 15:13:00,452:INFO:Ridge Regression Imported succesfully
2022-09-12 15:13:00,474:INFO:Starting cross validation
2022-09-12 15:13:00,475:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:13:00,736:INFO:Calculating mean and std
2022-09-12 15:13:00,740:INFO:Creating metrics dataframe
2022-09-12 15:13:00,842:INFO:Uploading results into container
2022-09-12 15:13:00,848:INFO:Uploading model into container now
2022-09-12 15:13:00,848:INFO:create_model_container: 3
2022-09-12 15:13:00,848:INFO:master_model_container: 3
2022-09-12 15:13:00,849:INFO:display_container: 2
2022-09-12 15:13:00,850:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=123, solver='auto', tol=0.001)
2022-09-12 15:13:00,850:INFO:create_model() succesfully completed......................................
2022-09-12 15:13:01,055:INFO:SubProcess create_model() end ==================================
2022-09-12 15:13:01,055:INFO:Creating metrics dataframe
2022-09-12 15:13:01,143:INFO:Initializing Elastic Net
2022-09-12 15:13:01,144:INFO:Total runtime is 0.035279913743337 minutes
2022-09-12 15:13:01,163:INFO:SubProcess create_model() called ==================================
2022-09-12 15:13:01,164:INFO:Initializing create_model()
2022-09-12 15:13:01,166:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65E6FA730>, return_train_score=False, kwargs={})
2022-09-12 15:13:01,166:INFO:Checking exceptions
2022-09-12 15:13:01,166:INFO:Importing libraries
2022-09-12 15:13:01,166:INFO:Copying training dataset
2022-09-12 15:13:01,166:INFO:Defining folds
2022-09-12 15:13:01,166:INFO:Declaring metric variables
2022-09-12 15:13:01,187:INFO:Importing untrained model
2022-09-12 15:13:01,203:INFO:Elastic Net Imported succesfully
2022-09-12 15:13:01,258:INFO:Starting cross validation
2022-09-12 15:13:01,261:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:13:01,399:INFO:Calculating mean and std
2022-09-12 15:13:01,399:INFO:Creating metrics dataframe
2022-09-12 15:13:01,457:INFO:Uploading results into container
2022-09-12 15:13:01,457:INFO:Uploading model into container now
2022-09-12 15:13:01,457:INFO:create_model_container: 4
2022-09-12 15:13:01,458:INFO:master_model_container: 4
2022-09-12 15:13:01,458:INFO:display_container: 2
2022-09-12 15:13:01,459:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=123, selection='cyclic', tol=0.0001, warm_start=False)
2022-09-12 15:13:01,460:INFO:create_model() succesfully completed......................................
2022-09-12 15:13:01,664:INFO:SubProcess create_model() end ==================================
2022-09-12 15:13:01,664:INFO:Creating metrics dataframe
2022-09-12 15:13:01,721:INFO:Initializing Least Angle Regression
2022-09-12 15:13:01,722:INFO:Total runtime is 0.044919439156850184 minutes
2022-09-12 15:13:01,737:INFO:SubProcess create_model() called ==================================
2022-09-12 15:13:01,737:INFO:Initializing create_model()
2022-09-12 15:13:01,745:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65E6FA730>, return_train_score=False, kwargs={})
2022-09-12 15:13:01,746:INFO:Checking exceptions
2022-09-12 15:13:01,746:INFO:Importing libraries
2022-09-12 15:13:01,746:INFO:Copying training dataset
2022-09-12 15:13:01,746:INFO:Defining folds
2022-09-12 15:13:01,746:INFO:Declaring metric variables
2022-09-12 15:13:01,764:INFO:Importing untrained model
2022-09-12 15:13:01,798:INFO:Least Angle Regression Imported succesfully
2022-09-12 15:13:01,863:INFO:Starting cross validation
2022-09-12 15:13:01,863:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:13:02,087:INFO:Calculating mean and std
2022-09-12 15:13:02,095:INFO:Creating metrics dataframe
2022-09-12 15:13:02,167:INFO:Uploading results into container
2022-09-12 15:13:02,167:INFO:Uploading model into container now
2022-09-12 15:13:02,167:INFO:create_model_container: 5
2022-09-12 15:13:02,167:INFO:master_model_container: 5
2022-09-12 15:13:02,167:INFO:display_container: 2
2022-09-12 15:13:02,171:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize=True, precompute='auto',
     random_state=123, verbose=False)
2022-09-12 15:13:02,171:INFO:create_model() succesfully completed......................................
2022-09-12 15:13:02,370:INFO:SubProcess create_model() end ==================================
2022-09-12 15:13:02,370:INFO:Creating metrics dataframe
2022-09-12 15:13:02,438:INFO:Initializing Lasso Least Angle Regression
2022-09-12 15:13:02,438:INFO:Total runtime is 0.056850878397623705 minutes
2022-09-12 15:13:02,462:INFO:SubProcess create_model() called ==================================
2022-09-12 15:13:02,462:INFO:Initializing create_model()
2022-09-12 15:13:02,462:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65E6FA730>, return_train_score=False, kwargs={})
2022-09-12 15:13:02,462:INFO:Checking exceptions
2022-09-12 15:13:02,462:INFO:Importing libraries
2022-09-12 15:13:02,462:INFO:Copying training dataset
2022-09-12 15:13:02,469:INFO:Defining folds
2022-09-12 15:13:02,470:INFO:Declaring metric variables
2022-09-12 15:13:02,490:INFO:Importing untrained model
2022-09-12 15:13:02,520:INFO:Lasso Least Angle Regression Imported succesfully
2022-09-12 15:13:02,579:INFO:Starting cross validation
2022-09-12 15:13:02,582:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:13:02,697:INFO:Calculating mean and std
2022-09-12 15:13:02,699:INFO:Creating metrics dataframe
2022-09-12 15:13:02,739:INFO:Uploading results into container
2022-09-12 15:13:02,739:INFO:Uploading model into container now
2022-09-12 15:13:02,739:INFO:create_model_container: 6
2022-09-12 15:13:02,740:INFO:master_model_container: 6
2022-09-12 15:13:02,740:INFO:display_container: 2
2022-09-12 15:13:02,740:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize=True,
          positive=False, precompute='auto', random_state=123, verbose=False)
2022-09-12 15:13:02,740:INFO:create_model() succesfully completed......................................
2022-09-12 15:13:02,913:INFO:SubProcess create_model() end ==================================
2022-09-12 15:13:02,913:INFO:Creating metrics dataframe
2022-09-12 15:13:02,997:INFO:Initializing Orthogonal Matching Pursuit
2022-09-12 15:13:02,997:INFO:Total runtime is 0.06616321007410686 minutes
2022-09-12 15:13:03,015:INFO:SubProcess create_model() called ==================================
2022-09-12 15:13:03,015:INFO:Initializing create_model()
2022-09-12 15:13:03,015:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65E6FA730>, return_train_score=False, kwargs={})
2022-09-12 15:13:03,015:INFO:Checking exceptions
2022-09-12 15:13:03,015:INFO:Importing libraries
2022-09-12 15:13:03,015:INFO:Copying training dataset
2022-09-12 15:13:03,015:INFO:Defining folds
2022-09-12 15:13:03,015:INFO:Declaring metric variables
2022-09-12 15:13:03,046:INFO:Importing untrained model
2022-09-12 15:13:03,065:INFO:Orthogonal Matching Pursuit Imported succesfully
2022-09-12 15:13:03,118:INFO:Starting cross validation
2022-09-12 15:13:03,124:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:13:03,336:INFO:Calculating mean and std
2022-09-12 15:13:03,336:INFO:Creating metrics dataframe
2022-09-12 15:13:03,408:INFO:Uploading results into container
2022-09-12 15:13:03,409:INFO:Uploading model into container now
2022-09-12 15:13:03,409:INFO:create_model_container: 7
2022-09-12 15:13:03,409:INFO:master_model_container: 7
2022-09-12 15:13:03,409:INFO:display_container: 2
2022-09-12 15:13:03,409:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None)
2022-09-12 15:13:03,409:INFO:create_model() succesfully completed......................................
2022-09-12 15:13:03,577:INFO:SubProcess create_model() end ==================================
2022-09-12 15:13:03,577:INFO:Creating metrics dataframe
2022-09-12 15:13:03,621:INFO:Initializing Bayesian Ridge
2022-09-12 15:13:03,621:INFO:Total runtime is 0.07657283941904705 minutes
2022-09-12 15:13:03,640:INFO:SubProcess create_model() called ==================================
2022-09-12 15:13:03,640:INFO:Initializing create_model()
2022-09-12 15:13:03,640:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65E6FA730>, return_train_score=False, kwargs={})
2022-09-12 15:13:03,640:INFO:Checking exceptions
2022-09-12 15:13:03,640:INFO:Importing libraries
2022-09-12 15:13:03,640:INFO:Copying training dataset
2022-09-12 15:13:03,640:INFO:Defining folds
2022-09-12 15:13:03,640:INFO:Declaring metric variables
2022-09-12 15:13:03,664:INFO:Importing untrained model
2022-09-12 15:13:03,682:INFO:Bayesian Ridge Imported succesfully
2022-09-12 15:13:03,733:INFO:Starting cross validation
2022-09-12 15:13:03,735:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:13:03,861:INFO:Calculating mean and std
2022-09-12 15:13:03,862:INFO:Creating metrics dataframe
2022-09-12 15:13:03,905:INFO:Uploading results into container
2022-09-12 15:13:03,905:INFO:Uploading model into container now
2022-09-12 15:13:03,905:INFO:create_model_container: 8
2022-09-12 15:13:03,906:INFO:master_model_container: 8
2022-09-12 15:13:03,906:INFO:display_container: 2
2022-09-12 15:13:03,907:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False)
2022-09-12 15:13:03,907:INFO:create_model() succesfully completed......................................
2022-09-12 15:13:04,086:INFO:SubProcess create_model() end ==================================
2022-09-12 15:13:04,087:INFO:Creating metrics dataframe
2022-09-12 15:13:04,139:INFO:Initializing Passive Aggressive Regressor
2022-09-12 15:13:04,139:INFO:Total runtime is 0.08520473241806031 minutes
2022-09-12 15:13:04,160:INFO:SubProcess create_model() called ==================================
2022-09-12 15:13:04,164:INFO:Initializing create_model()
2022-09-12 15:13:04,165:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65E6FA730>, return_train_score=False, kwargs={})
2022-09-12 15:13:04,165:INFO:Checking exceptions
2022-09-12 15:13:04,165:INFO:Importing libraries
2022-09-12 15:13:04,166:INFO:Copying training dataset
2022-09-12 15:13:04,168:INFO:Defining folds
2022-09-12 15:13:04,169:INFO:Declaring metric variables
2022-09-12 15:13:04,189:INFO:Importing untrained model
2022-09-12 15:13:04,215:INFO:Passive Aggressive Regressor Imported succesfully
2022-09-12 15:13:04,269:INFO:Starting cross validation
2022-09-12 15:13:04,273:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:13:04,453:INFO:Calculating mean and std
2022-09-12 15:13:04,456:INFO:Creating metrics dataframe
2022-09-12 15:13:04,544:INFO:Uploading results into container
2022-09-12 15:13:04,544:INFO:Uploading model into container now
2022-09-12 15:13:04,544:INFO:create_model_container: 9
2022-09-12 15:13:04,544:INFO:master_model_container: 9
2022-09-12 15:13:04,544:INFO:display_container: 2
2022-09-12 15:13:04,544:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=123, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-09-12 15:13:04,544:INFO:create_model() succesfully completed......................................
2022-09-12 15:13:04,732:INFO:SubProcess create_model() end ==================================
2022-09-12 15:13:04,732:INFO:Creating metrics dataframe
2022-09-12 15:13:04,816:INFO:Initializing Huber Regressor
2022-09-12 15:13:04,816:INFO:Total runtime is 0.0964792013168335 minutes
2022-09-12 15:13:04,842:INFO:SubProcess create_model() called ==================================
2022-09-12 15:13:04,843:INFO:Initializing create_model()
2022-09-12 15:13:04,843:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65E6FA730>, return_train_score=False, kwargs={})
2022-09-12 15:13:04,843:INFO:Checking exceptions
2022-09-12 15:13:04,844:INFO:Importing libraries
2022-09-12 15:13:04,844:INFO:Copying training dataset
2022-09-12 15:13:04,846:INFO:Defining folds
2022-09-12 15:13:04,847:INFO:Declaring metric variables
2022-09-12 15:13:04,872:INFO:Importing untrained model
2022-09-12 15:13:04,900:INFO:Huber Regressor Imported succesfully
2022-09-12 15:13:04,966:INFO:Starting cross validation
2022-09-12 15:13:04,968:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:13:05,112:INFO:Calculating mean and std
2022-09-12 15:13:05,113:INFO:Creating metrics dataframe
2022-09-12 15:13:05,157:INFO:Uploading results into container
2022-09-12 15:13:05,157:INFO:Uploading model into container now
2022-09-12 15:13:05,157:INFO:create_model_container: 10
2022-09-12 15:13:05,157:INFO:master_model_container: 10
2022-09-12 15:13:05,157:INFO:display_container: 2
2022-09-12 15:13:05,158:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-12 15:13:05,158:INFO:create_model() succesfully completed......................................
2022-09-12 15:13:05,338:INFO:SubProcess create_model() end ==================================
2022-09-12 15:13:05,338:INFO:Creating metrics dataframe
2022-09-12 15:13:05,391:INFO:Initializing K Neighbors Regressor
2022-09-12 15:13:05,391:INFO:Total runtime is 0.10607486963272096 minutes
2022-09-12 15:13:05,414:INFO:SubProcess create_model() called ==================================
2022-09-12 15:13:05,415:INFO:Initializing create_model()
2022-09-12 15:13:05,416:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65E6FA730>, return_train_score=False, kwargs={})
2022-09-12 15:13:05,416:INFO:Checking exceptions
2022-09-12 15:13:05,416:INFO:Importing libraries
2022-09-12 15:13:05,416:INFO:Copying training dataset
2022-09-12 15:13:05,419:INFO:Defining folds
2022-09-12 15:13:05,420:INFO:Declaring metric variables
2022-09-12 15:13:05,441:INFO:Importing untrained model
2022-09-12 15:13:05,463:INFO:K Neighbors Regressor Imported succesfully
2022-09-12 15:13:05,518:INFO:Starting cross validation
2022-09-12 15:13:05,521:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:13:05,730:INFO:Calculating mean and std
2022-09-12 15:13:05,733:INFO:Creating metrics dataframe
2022-09-12 15:13:05,802:INFO:Uploading results into container
2022-09-12 15:13:05,802:INFO:Uploading model into container now
2022-09-12 15:13:05,803:INFO:create_model_container: 11
2022-09-12 15:13:05,803:INFO:master_model_container: 11
2022-09-12 15:13:05,803:INFO:display_container: 2
2022-09-12 15:13:05,804:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2022-09-12 15:13:05,805:INFO:create_model() succesfully completed......................................
2022-09-12 15:13:05,989:INFO:SubProcess create_model() end ==================================
2022-09-12 15:13:05,989:INFO:Creating metrics dataframe
2022-09-12 15:13:06,034:INFO:Initializing Decision Tree Regressor
2022-09-12 15:13:06,034:INFO:Total runtime is 0.11679360071818035 minutes
2022-09-12 15:13:06,051:INFO:SubProcess create_model() called ==================================
2022-09-12 15:13:06,052:INFO:Initializing create_model()
2022-09-12 15:13:06,052:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65E6FA730>, return_train_score=False, kwargs={})
2022-09-12 15:13:06,053:INFO:Checking exceptions
2022-09-12 15:13:06,053:INFO:Importing libraries
2022-09-12 15:13:06,053:INFO:Copying training dataset
2022-09-12 15:13:06,055:INFO:Defining folds
2022-09-12 15:13:06,055:INFO:Declaring metric variables
2022-09-12 15:13:06,074:INFO:Importing untrained model
2022-09-12 15:13:06,088:INFO:Decision Tree Regressor Imported succesfully
2022-09-12 15:13:06,142:INFO:Starting cross validation
2022-09-12 15:13:06,145:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:13:06,278:INFO:Calculating mean and std
2022-09-12 15:13:06,279:INFO:Creating metrics dataframe
2022-09-12 15:13:06,321:INFO:Uploading results into container
2022-09-12 15:13:06,322:INFO:Uploading model into container now
2022-09-12 15:13:06,322:INFO:create_model_container: 12
2022-09-12 15:13:06,322:INFO:master_model_container: 12
2022-09-12 15:13:06,322:INFO:display_container: 2
2022-09-12 15:13:06,323:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=123, splitter='best')
2022-09-12 15:13:06,323:INFO:create_model() succesfully completed......................................
2022-09-12 15:13:06,494:INFO:SubProcess create_model() end ==================================
2022-09-12 15:13:06,494:INFO:Creating metrics dataframe
2022-09-12 15:13:06,542:INFO:Initializing Random Forest Regressor
2022-09-12 15:13:06,542:INFO:Total runtime is 0.12525031566619874 minutes
2022-09-12 15:13:06,556:INFO:SubProcess create_model() called ==================================
2022-09-12 15:13:06,556:INFO:Initializing create_model()
2022-09-12 15:13:06,557:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65E6FA730>, return_train_score=False, kwargs={})
2022-09-12 15:13:06,557:INFO:Checking exceptions
2022-09-12 15:13:06,557:INFO:Importing libraries
2022-09-12 15:13:06,558:INFO:Copying training dataset
2022-09-12 15:13:06,560:INFO:Defining folds
2022-09-12 15:13:06,560:INFO:Declaring metric variables
2022-09-12 15:13:06,581:INFO:Importing untrained model
2022-09-12 15:13:06,597:INFO:Random Forest Regressor Imported succesfully
2022-09-12 15:13:06,643:INFO:Starting cross validation
2022-09-12 15:13:06,644:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:13:07,761:INFO:Calculating mean and std
2022-09-12 15:13:07,763:INFO:Creating metrics dataframe
2022-09-12 15:13:07,804:INFO:Uploading results into container
2022-09-12 15:13:07,804:INFO:Uploading model into container now
2022-09-12 15:13:07,804:INFO:create_model_container: 13
2022-09-12 15:13:07,804:INFO:master_model_container: 13
2022-09-12 15:13:07,804:INFO:display_container: 2
2022-09-12 15:13:07,805:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=123, verbose=0, warm_start=False)
2022-09-12 15:13:07,805:INFO:create_model() succesfully completed......................................
2022-09-12 15:13:07,992:INFO:SubProcess create_model() end ==================================
2022-09-12 15:13:07,992:INFO:Creating metrics dataframe
2022-09-12 15:13:08,038:INFO:Initializing Extra Trees Regressor
2022-09-12 15:13:08,038:INFO:Total runtime is 0.1501871665318807 minutes
2022-09-12 15:13:08,057:INFO:SubProcess create_model() called ==================================
2022-09-12 15:13:08,058:INFO:Initializing create_model()
2022-09-12 15:13:08,059:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65E6FA730>, return_train_score=False, kwargs={})
2022-09-12 15:13:08,060:INFO:Checking exceptions
2022-09-12 15:13:08,061:INFO:Importing libraries
2022-09-12 15:13:08,061:INFO:Copying training dataset
2022-09-12 15:13:08,063:INFO:Defining folds
2022-09-12 15:13:08,063:INFO:Declaring metric variables
2022-09-12 15:13:08,079:INFO:Importing untrained model
2022-09-12 15:13:08,099:INFO:Extra Trees Regressor Imported succesfully
2022-09-12 15:13:08,137:INFO:Starting cross validation
2022-09-12 15:13:08,137:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:13:09,014:INFO:Calculating mean and std
2022-09-12 15:13:09,014:INFO:Creating metrics dataframe
2022-09-12 15:13:09,045:INFO:Uploading results into container
2022-09-12 15:13:09,045:INFO:Uploading model into container now
2022-09-12 15:13:09,045:INFO:create_model_container: 14
2022-09-12 15:13:09,045:INFO:master_model_container: 14
2022-09-12 15:13:09,045:INFO:display_container: 2
2022-09-12 15:13:09,045:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=123, verbose=0, warm_start=False)
2022-09-12 15:13:09,045:INFO:create_model() succesfully completed......................................
2022-09-12 15:13:09,214:INFO:SubProcess create_model() end ==================================
2022-09-12 15:13:09,214:INFO:Creating metrics dataframe
2022-09-12 15:13:09,283:INFO:Initializing AdaBoost Regressor
2022-09-12 15:13:09,283:INFO:Total runtime is 0.1709303100903829 minutes
2022-09-12 15:13:09,309:INFO:SubProcess create_model() called ==================================
2022-09-12 15:13:09,309:INFO:Initializing create_model()
2022-09-12 15:13:09,309:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65E6FA730>, return_train_score=False, kwargs={})
2022-09-12 15:13:09,313:INFO:Checking exceptions
2022-09-12 15:13:09,313:INFO:Importing libraries
2022-09-12 15:13:09,313:INFO:Copying training dataset
2022-09-12 15:13:09,314:INFO:Defining folds
2022-09-12 15:13:09,315:INFO:Declaring metric variables
2022-09-12 15:13:09,334:INFO:Importing untrained model
2022-09-12 15:13:09,356:INFO:AdaBoost Regressor Imported succesfully
2022-09-12 15:13:09,407:INFO:Starting cross validation
2022-09-12 15:13:09,407:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:13:09,778:INFO:Calculating mean and std
2022-09-12 15:13:09,780:INFO:Creating metrics dataframe
2022-09-12 15:13:09,823:INFO:Uploading results into container
2022-09-12 15:13:09,823:INFO:Uploading model into container now
2022-09-12 15:13:09,823:INFO:create_model_container: 15
2022-09-12 15:13:09,823:INFO:master_model_container: 15
2022-09-12 15:13:09,823:INFO:display_container: 2
2022-09-12 15:13:09,823:INFO:AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=123)
2022-09-12 15:13:09,823:INFO:create_model() succesfully completed......................................
2022-09-12 15:13:10,043:INFO:SubProcess create_model() end ==================================
2022-09-12 15:13:10,044:INFO:Creating metrics dataframe
2022-09-12 15:13:10,104:INFO:Initializing Gradient Boosting Regressor
2022-09-12 15:13:10,104:INFO:Total runtime is 0.1846245010693868 minutes
2022-09-12 15:13:10,127:INFO:SubProcess create_model() called ==================================
2022-09-12 15:13:10,127:INFO:Initializing create_model()
2022-09-12 15:13:10,128:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65E6FA730>, return_train_score=False, kwargs={})
2022-09-12 15:13:10,128:INFO:Checking exceptions
2022-09-12 15:13:10,129:INFO:Importing libraries
2022-09-12 15:13:10,129:INFO:Copying training dataset
2022-09-12 15:13:10,130:INFO:Defining folds
2022-09-12 15:13:10,130:INFO:Declaring metric variables
2022-09-12 15:13:10,146:INFO:Importing untrained model
2022-09-12 15:13:10,160:INFO:Gradient Boosting Regressor Imported succesfully
2022-09-12 15:13:10,217:INFO:Starting cross validation
2022-09-12 15:13:10,218:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:13:10,580:INFO:Calculating mean and std
2022-09-12 15:13:10,582:INFO:Creating metrics dataframe
2022-09-12 15:13:10,628:INFO:Uploading results into container
2022-09-12 15:13:10,629:INFO:Uploading model into container now
2022-09-12 15:13:10,629:INFO:create_model_container: 16
2022-09-12 15:13:10,629:INFO:master_model_container: 16
2022-09-12 15:13:10,630:INFO:display_container: 2
2022-09-12 15:13:10,631:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=123, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2022-09-12 15:13:10,631:INFO:create_model() succesfully completed......................................
2022-09-12 15:13:10,818:INFO:SubProcess create_model() end ==================================
2022-09-12 15:13:10,818:INFO:Creating metrics dataframe
2022-09-12 15:13:10,892:INFO:Initializing Extreme Gradient Boosting
2022-09-12 15:13:10,892:INFO:Total runtime is 0.1977541963259379 minutes
2022-09-12 15:13:10,916:INFO:SubProcess create_model() called ==================================
2022-09-12 15:13:10,918:INFO:Initializing create_model()
2022-09-12 15:13:10,918:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65E6FA730>, return_train_score=False, kwargs={})
2022-09-12 15:13:10,918:INFO:Checking exceptions
2022-09-12 15:13:10,918:INFO:Importing libraries
2022-09-12 15:13:10,919:INFO:Copying training dataset
2022-09-12 15:13:10,921:INFO:Defining folds
2022-09-12 15:13:10,922:INFO:Declaring metric variables
2022-09-12 15:13:10,947:INFO:Importing untrained model
2022-09-12 15:13:10,973:INFO:Extreme Gradient Boosting Imported succesfully
2022-09-12 15:13:11,039:INFO:Starting cross validation
2022-09-12 15:13:11,042:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:13:11,422:INFO:Calculating mean and std
2022-09-12 15:13:11,422:INFO:Creating metrics dataframe
2022-09-12 15:13:11,460:INFO:Uploading results into container
2022-09-12 15:13:11,461:INFO:Uploading model into container now
2022-09-12 15:13:11,461:INFO:create_model_container: 17
2022-09-12 15:13:11,461:INFO:master_model_container: 17
2022-09-12 15:13:11,461:INFO:display_container: 2
2022-09-12 15:13:11,463:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror',
             predictor=None, random_state=123, reg_alpha=None, ...)
2022-09-12 15:13:11,463:INFO:create_model() succesfully completed......................................
2022-09-12 15:13:11,644:INFO:SubProcess create_model() end ==================================
2022-09-12 15:13:11,644:INFO:Creating metrics dataframe
2022-09-12 15:13:11,697:INFO:Initializing Light Gradient Boosting Machine
2022-09-12 15:13:11,697:INFO:Total runtime is 0.21117268800735473 minutes
2022-09-12 15:13:11,713:INFO:SubProcess create_model() called ==================================
2022-09-12 15:13:11,715:INFO:Initializing create_model()
2022-09-12 15:13:11,715:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65E6FA730>, return_train_score=False, kwargs={})
2022-09-12 15:13:11,715:INFO:Checking exceptions
2022-09-12 15:13:11,715:INFO:Importing libraries
2022-09-12 15:13:11,716:INFO:Copying training dataset
2022-09-12 15:13:11,717:INFO:Defining folds
2022-09-12 15:13:11,718:INFO:Declaring metric variables
2022-09-12 15:13:11,735:INFO:Importing untrained model
2022-09-12 15:13:11,751:INFO:Light Gradient Boosting Machine Imported succesfully
2022-09-12 15:13:11,784:INFO:Starting cross validation
2022-09-12 15:13:11,786:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:13:12,060:INFO:Calculating mean and std
2022-09-12 15:13:12,063:INFO:Creating metrics dataframe
2022-09-12 15:13:12,116:INFO:Uploading results into container
2022-09-12 15:13:12,117:INFO:Uploading model into container now
2022-09-12 15:13:12,117:INFO:create_model_container: 18
2022-09-12 15:13:12,117:INFO:master_model_container: 18
2022-09-12 15:13:12,117:INFO:display_container: 2
2022-09-12 15:13:12,118:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-09-12 15:13:12,119:INFO:create_model() succesfully completed......................................
2022-09-12 15:13:12,299:INFO:SubProcess create_model() end ==================================
2022-09-12 15:13:12,299:INFO:Creating metrics dataframe
2022-09-12 15:13:12,351:INFO:Initializing Dummy Regressor
2022-09-12 15:13:12,351:INFO:Total runtime is 0.22207666238149007 minutes
2022-09-12 15:13:12,372:INFO:SubProcess create_model() called ==================================
2022-09-12 15:13:12,374:INFO:Initializing create_model()
2022-09-12 15:13:12,374:INFO:create_model(estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65E6FA730>, return_train_score=False, kwargs={})
2022-09-12 15:13:12,374:INFO:Checking exceptions
2022-09-12 15:13:12,374:INFO:Importing libraries
2022-09-12 15:13:12,374:INFO:Copying training dataset
2022-09-12 15:13:12,376:INFO:Defining folds
2022-09-12 15:13:12,376:INFO:Declaring metric variables
2022-09-12 15:13:12,405:INFO:Importing untrained model
2022-09-12 15:13:12,433:INFO:Dummy Regressor Imported succesfully
2022-09-12 15:13:12,490:INFO:Starting cross validation
2022-09-12 15:13:12,492:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:13:12,596:INFO:Calculating mean and std
2022-09-12 15:13:12,598:INFO:Creating metrics dataframe
2022-09-12 15:13:12,643:INFO:Uploading results into container
2022-09-12 15:13:12,643:INFO:Uploading model into container now
2022-09-12 15:13:12,643:INFO:create_model_container: 19
2022-09-12 15:13:12,643:INFO:master_model_container: 19
2022-09-12 15:13:12,644:INFO:display_container: 2
2022-09-12 15:13:12,644:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2022-09-12 15:13:12,644:INFO:create_model() succesfully completed......................................
2022-09-12 15:13:12,825:INFO:SubProcess create_model() end ==================================
2022-09-12 15:13:12,825:INFO:Creating metrics dataframe
2022-09-12 15:13:12,936:INFO:Initializing create_model()
2022-09-12 15:13:12,937:INFO:create_model(estimator=HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-09-12 15:13:12,937:INFO:Checking exceptions
2022-09-12 15:13:12,939:INFO:Importing libraries
2022-09-12 15:13:12,939:INFO:Copying training dataset
2022-09-12 15:13:12,939:INFO:Defining folds
2022-09-12 15:13:12,940:INFO:Declaring metric variables
2022-09-12 15:13:12,940:INFO:Importing untrained model
2022-09-12 15:13:12,940:INFO:Declaring custom model
2022-09-12 15:13:12,941:INFO:Huber Regressor Imported succesfully
2022-09-12 15:13:12,942:INFO:Cross validation set to False
2022-09-12 15:13:12,942:INFO:Fitting Model
2022-09-12 15:13:12,968:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-12 15:13:12,968:INFO:create_models() succesfully completed......................................
2022-09-12 15:13:13,187:INFO:create_model_container: 19
2022-09-12 15:13:13,187:INFO:master_model_container: 19
2022-09-12 15:13:13,188:INFO:display_container: 2
2022-09-12 15:13:13,189:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-12 15:13:13,189:INFO:compare_models() succesfully completed......................................
2022-09-12 15:14:09,848:INFO:PyCaret Supervised Module
2022-09-12 15:14:09,848:INFO:ML Usecase: regression
2022-09-12 15:14:09,848:INFO:version 2.3.10
2022-09-12 15:14:09,848:INFO:Initializing setup()
2022-09-12 15:14:09,848:INFO:setup(target=mpy, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=['dosis_IC_ppm', 'CO2_gas'], numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-09-12 15:14:09,848:INFO:Checking environment
2022-09-12 15:14:09,848:INFO:python_version: 3.8.12
2022-09-12 15:14:09,848:INFO:python_build: ('default', 'Oct 12 2021 03:01:40')
2022-09-12 15:14:09,848:INFO:machine: AMD64
2022-09-12 15:14:09,848:INFO:platform: Windows-10-10.0.22000-SP0
2022-09-12 15:14:09,852:WARNING:cannot find psutil installation. memory not traceable. Install psutil using pip to enable memory logging.
2022-09-12 15:14:09,853:INFO:Checking libraries
2022-09-12 15:14:09,853:INFO:pd==1.4.2
2022-09-12 15:14:09,853:INFO:numpy==1.22.4
2022-09-12 15:14:09,853:INFO:sklearn==0.23.2
2022-09-12 15:14:09,853:INFO:lightgbm==3.3.1
2022-09-12 15:14:09,855:WARNING:catboost not found
2022-09-12 15:14:09,855:INFO:xgboost==1.6.1
2022-09-12 15:14:09,855:INFO:mlflow==1.21.0
2022-09-12 15:14:09,856:INFO:Checking Exceptions
2022-09-12 15:14:09,856:INFO:Declaring global variables
2022-09-12 15:14:09,856:INFO:USI: 723e
2022-09-12 15:14:09,856:INFO:pycaret_globals: {'dashboard_logger', 'display_container', 'fold_groups_param_full', '_all_metrics', 'gpu_param', '_all_models', 'seed', 'USI', 'logging_param', 'experiment__', 'y_train', 'iterative_imputation_iters_param', 'X', 'fold_generator', 'y_test', '_available_plots', 'target_param', 'n_jobs_param', 'prep_pipe', 'transform_target_method_param', '_internal_pipeline', 'pycaret_globals', 'X_test', 'fix_imbalance_param', 'master_model_container', 'stratify_param', '_all_models_internal', 'X_train', 'data_before_preprocess', 'log_plots_param', 'html_param', 'fix_imbalance_method_param', 'y', 'transform_target_param', 'create_model_container', 'exp_name_log', 'fold_groups_param', 'fold_param', '_gpu_n_jobs_param', 'imputation_classifier', '_ml_usecase', 'imputation_regressor', 'fold_shuffle_param'}
2022-09-12 15:14:09,856:INFO:Preparing display monitor
2022-09-12 15:14:09,857:INFO:Preparing display monitor
2022-09-12 15:14:09,880:INFO:Importing libraries
2022-09-12 15:14:09,880:INFO:Copying data for preprocessing
2022-09-12 15:14:09,894:INFO:Declaring preprocessing parameters
2022-09-12 15:14:09,898:INFO:Creating preprocessing pipeline
2022-09-12 15:14:09,908:INFO:Preprocessing pipeline created successfully
2022-09-12 15:14:09,909:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-09-12 15:14:09,909:INFO:Creating global containers
2022-09-12 15:14:09,909:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-09-12 15:14:11,812:WARNING:Couldn't import catboost.CatBoostRegressor
2022-09-12 15:14:11,981:WARNING:Couldn't import catboost.CatBoostRegressor
2022-09-12 15:14:11,981:INFO:Creating grid variables
2022-09-12 15:14:11,994:INFO:create_model_container: 0
2022-09-12 15:14:11,994:INFO:master_model_container: 0
2022-09-12 15:14:11,994:INFO:display_container: 1
2022-09-12 15:14:12,003:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=['dosis_IC_ppm',
                                                          'CO2_gas'],
                                      target='mpy', time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=N...
                                                  target='mpy')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='mpy')),
                ('fix_perfect', Remove_100(target='mpy')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-09-12 15:14:12,004:INFO:setup() succesfully completed......................................
2022-09-12 15:14:21,585:INFO:Initializing compare_models()
2022-09-12 15:14:21,586:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2022-09-12 15:14:21,586:INFO:Checking exceptions
2022-09-12 15:14:21,586:INFO:Preparing display monitor
2022-09-12 15:14:21,587:INFO:Preparing display monitor
2022-09-12 15:14:21,635:INFO:Initializing Linear Regression
2022-09-12 15:14:21,635:INFO:Total runtime is 0.0 minutes
2022-09-12 15:14:21,651:INFO:SubProcess create_model() called ==================================
2022-09-12 15:14:21,651:INFO:Initializing create_model()
2022-09-12 15:14:21,652:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65EEBCD30>, return_train_score=False, kwargs={})
2022-09-12 15:14:21,652:INFO:Checking exceptions
2022-09-12 15:14:21,652:INFO:Importing libraries
2022-09-12 15:14:21,652:INFO:Copying training dataset
2022-09-12 15:14:21,654:INFO:Defining folds
2022-09-12 15:14:21,654:INFO:Declaring metric variables
2022-09-12 15:14:21,678:INFO:Importing untrained model
2022-09-12 15:14:21,698:INFO:Linear Regression Imported succesfully
2022-09-12 15:14:21,742:INFO:Starting cross validation
2022-09-12 15:14:21,743:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:14:22,012:INFO:Calculating mean and std
2022-09-12 15:14:22,014:INFO:Creating metrics dataframe
2022-09-12 15:14:22,085:INFO:Uploading results into container
2022-09-12 15:14:22,086:INFO:Uploading model into container now
2022-09-12 15:14:22,086:INFO:create_model_container: 1
2022-09-12 15:14:22,086:INFO:master_model_container: 1
2022-09-12 15:14:22,086:INFO:display_container: 2
2022-09-12 15:14:22,087:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2022-09-12 15:14:22,087:INFO:create_model() succesfully completed......................................
2022-09-12 15:14:22,322:INFO:SubProcess create_model() end ==================================
2022-09-12 15:14:22,322:INFO:Creating metrics dataframe
2022-09-12 15:14:22,395:INFO:Initializing Lasso Regression
2022-09-12 15:14:22,395:INFO:Total runtime is 0.012678082784016926 minutes
2022-09-12 15:14:22,413:INFO:SubProcess create_model() called ==================================
2022-09-12 15:14:22,414:INFO:Initializing create_model()
2022-09-12 15:14:22,414:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65EEBCD30>, return_train_score=False, kwargs={})
2022-09-12 15:14:22,414:INFO:Checking exceptions
2022-09-12 15:14:22,414:INFO:Importing libraries
2022-09-12 15:14:22,415:INFO:Copying training dataset
2022-09-12 15:14:22,416:INFO:Defining folds
2022-09-12 15:14:22,417:INFO:Declaring metric variables
2022-09-12 15:14:22,431:INFO:Importing untrained model
2022-09-12 15:14:22,450:INFO:Lasso Regression Imported succesfully
2022-09-12 15:14:22,484:INFO:Starting cross validation
2022-09-12 15:14:22,485:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:14:22,617:INFO:Calculating mean and std
2022-09-12 15:14:22,619:INFO:Creating metrics dataframe
2022-09-12 15:14:22,663:INFO:Uploading results into container
2022-09-12 15:14:22,663:INFO:Uploading model into container now
2022-09-12 15:14:22,664:INFO:create_model_container: 2
2022-09-12 15:14:22,664:INFO:master_model_container: 2
2022-09-12 15:14:22,664:INFO:display_container: 2
2022-09-12 15:14:22,665:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=123,
      selection='cyclic', tol=0.0001, warm_start=False)
2022-09-12 15:14:22,665:INFO:create_model() succesfully completed......................................
2022-09-12 15:14:22,803:INFO:SubProcess create_model() end ==================================
2022-09-12 15:14:22,803:INFO:Creating metrics dataframe
2022-09-12 15:14:22,835:INFO:Initializing Ridge Regression
2022-09-12 15:14:22,835:INFO:Total runtime is 0.020004856586456298 minutes
2022-09-12 15:14:22,858:INFO:SubProcess create_model() called ==================================
2022-09-12 15:14:22,858:INFO:Initializing create_model()
2022-09-12 15:14:22,858:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65EEBCD30>, return_train_score=False, kwargs={})
2022-09-12 15:14:22,858:INFO:Checking exceptions
2022-09-12 15:14:22,858:INFO:Importing libraries
2022-09-12 15:14:22,858:INFO:Copying training dataset
2022-09-12 15:14:22,862:INFO:Defining folds
2022-09-12 15:14:22,862:INFO:Declaring metric variables
2022-09-12 15:14:22,877:INFO:Importing untrained model
2022-09-12 15:14:22,877:INFO:Ridge Regression Imported succesfully
2022-09-12 15:14:22,908:INFO:Starting cross validation
2022-09-12 15:14:22,909:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:14:23,015:INFO:Calculating mean and std
2022-09-12 15:14:23,018:INFO:Creating metrics dataframe
2022-09-12 15:14:23,087:INFO:Uploading results into container
2022-09-12 15:14:23,087:INFO:Uploading model into container now
2022-09-12 15:14:23,088:INFO:create_model_container: 3
2022-09-12 15:14:23,088:INFO:master_model_container: 3
2022-09-12 15:14:23,088:INFO:display_container: 2
2022-09-12 15:14:23,089:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=123, solver='auto', tol=0.001)
2022-09-12 15:14:23,089:INFO:create_model() succesfully completed......................................
2022-09-12 15:14:23,286:INFO:SubProcess create_model() end ==================================
2022-09-12 15:14:23,286:INFO:Creating metrics dataframe
2022-09-12 15:14:23,321:INFO:Initializing Elastic Net
2022-09-12 15:14:23,321:INFO:Total runtime is 0.028110782305399575 minutes
2022-09-12 15:14:23,346:INFO:SubProcess create_model() called ==================================
2022-09-12 15:14:23,347:INFO:Initializing create_model()
2022-09-12 15:14:23,347:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65EEBCD30>, return_train_score=False, kwargs={})
2022-09-12 15:14:23,348:INFO:Checking exceptions
2022-09-12 15:14:23,348:INFO:Importing libraries
2022-09-12 15:14:23,348:INFO:Copying training dataset
2022-09-12 15:14:23,348:INFO:Defining folds
2022-09-12 15:14:23,348:INFO:Declaring metric variables
2022-09-12 15:14:23,373:INFO:Importing untrained model
2022-09-12 15:14:23,381:INFO:Elastic Net Imported succesfully
2022-09-12 15:14:23,418:INFO:Starting cross validation
2022-09-12 15:14:23,418:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:14:23,596:INFO:Calculating mean and std
2022-09-12 15:14:23,597:INFO:Creating metrics dataframe
2022-09-12 15:14:23,641:INFO:Uploading results into container
2022-09-12 15:14:23,641:INFO:Uploading model into container now
2022-09-12 15:14:23,641:INFO:create_model_container: 4
2022-09-12 15:14:23,641:INFO:master_model_container: 4
2022-09-12 15:14:23,641:INFO:display_container: 2
2022-09-12 15:14:23,641:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=123, selection='cyclic', tol=0.0001, warm_start=False)
2022-09-12 15:14:23,641:INFO:create_model() succesfully completed......................................
2022-09-12 15:14:23,814:INFO:SubProcess create_model() end ==================================
2022-09-12 15:14:23,814:INFO:Creating metrics dataframe
2022-09-12 15:14:23,861:INFO:Initializing Least Angle Regression
2022-09-12 15:14:23,861:INFO:Total runtime is 0.0370976448059082 minutes
2022-09-12 15:14:23,879:INFO:SubProcess create_model() called ==================================
2022-09-12 15:14:23,879:INFO:Initializing create_model()
2022-09-12 15:14:23,879:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65EEBCD30>, return_train_score=False, kwargs={})
2022-09-12 15:14:23,879:INFO:Checking exceptions
2022-09-12 15:14:23,879:INFO:Importing libraries
2022-09-12 15:14:23,879:INFO:Copying training dataset
2022-09-12 15:14:23,879:INFO:Defining folds
2022-09-12 15:14:23,879:INFO:Declaring metric variables
2022-09-12 15:14:23,895:INFO:Importing untrained model
2022-09-12 15:14:23,909:INFO:Least Angle Regression Imported succesfully
2022-09-12 15:14:23,962:INFO:Starting cross validation
2022-09-12 15:14:23,963:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:14:24,107:INFO:Calculating mean and std
2022-09-12 15:14:24,107:INFO:Creating metrics dataframe
2022-09-12 15:14:24,174:INFO:Uploading results into container
2022-09-12 15:14:24,174:INFO:Uploading model into container now
2022-09-12 15:14:24,174:INFO:create_model_container: 5
2022-09-12 15:14:24,174:INFO:master_model_container: 5
2022-09-12 15:14:24,176:INFO:display_container: 2
2022-09-12 15:14:24,177:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize=True, precompute='auto',
     random_state=123, verbose=False)
2022-09-12 15:14:24,177:INFO:create_model() succesfully completed......................................
2022-09-12 15:14:24,387:INFO:SubProcess create_model() end ==================================
2022-09-12 15:14:24,403:INFO:Creating metrics dataframe
2022-09-12 15:14:24,468:INFO:Initializing Lasso Least Angle Regression
2022-09-12 15:14:24,468:INFO:Total runtime is 0.04722307920455932 minutes
2022-09-12 15:14:24,485:INFO:SubProcess create_model() called ==================================
2022-09-12 15:14:24,486:INFO:Initializing create_model()
2022-09-12 15:14:24,487:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65EEBCD30>, return_train_score=False, kwargs={})
2022-09-12 15:14:24,487:INFO:Checking exceptions
2022-09-12 15:14:24,488:INFO:Importing libraries
2022-09-12 15:14:24,488:INFO:Copying training dataset
2022-09-12 15:14:24,489:INFO:Defining folds
2022-09-12 15:14:24,490:INFO:Declaring metric variables
2022-09-12 15:14:24,515:INFO:Importing untrained model
2022-09-12 15:14:24,529:INFO:Lasso Least Angle Regression Imported succesfully
2022-09-12 15:14:24,566:INFO:Starting cross validation
2022-09-12 15:14:24,567:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:14:24,784:INFO:Calculating mean and std
2022-09-12 15:14:24,787:INFO:Creating metrics dataframe
2022-09-12 15:14:24,863:INFO:Uploading results into container
2022-09-12 15:14:24,863:INFO:Uploading model into container now
2022-09-12 15:14:24,864:INFO:create_model_container: 6
2022-09-12 15:14:24,864:INFO:master_model_container: 6
2022-09-12 15:14:24,864:INFO:display_container: 2
2022-09-12 15:14:24,865:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize=True,
          positive=False, precompute='auto', random_state=123, verbose=False)
2022-09-12 15:14:24,866:INFO:create_model() succesfully completed......................................
2022-09-12 15:14:25,072:INFO:SubProcess create_model() end ==================================
2022-09-12 15:14:25,072:INFO:Creating metrics dataframe
2022-09-12 15:14:25,126:INFO:Initializing Orthogonal Matching Pursuit
2022-09-12 15:14:25,126:INFO:Total runtime is 0.05819452206293742 minutes
2022-09-12 15:14:25,142:INFO:SubProcess create_model() called ==================================
2022-09-12 15:14:25,143:INFO:Initializing create_model()
2022-09-12 15:14:25,143:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65EEBCD30>, return_train_score=False, kwargs={})
2022-09-12 15:14:25,143:INFO:Checking exceptions
2022-09-12 15:14:25,143:INFO:Importing libraries
2022-09-12 15:14:25,144:INFO:Copying training dataset
2022-09-12 15:14:25,145:INFO:Defining folds
2022-09-12 15:14:25,146:INFO:Declaring metric variables
2022-09-12 15:14:25,167:INFO:Importing untrained model
2022-09-12 15:14:25,180:INFO:Orthogonal Matching Pursuit Imported succesfully
2022-09-12 15:14:25,253:INFO:Starting cross validation
2022-09-12 15:14:25,255:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:14:25,414:INFO:Calculating mean and std
2022-09-12 15:14:25,416:INFO:Creating metrics dataframe
2022-09-12 15:14:25,471:INFO:Uploading results into container
2022-09-12 15:14:25,471:INFO:Uploading model into container now
2022-09-12 15:14:25,471:INFO:create_model_container: 7
2022-09-12 15:14:25,471:INFO:master_model_container: 7
2022-09-12 15:14:25,472:INFO:display_container: 2
2022-09-12 15:14:25,472:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None)
2022-09-12 15:14:25,472:INFO:create_model() succesfully completed......................................
2022-09-12 15:14:25,656:INFO:SubProcess create_model() end ==================================
2022-09-12 15:14:25,656:INFO:Creating metrics dataframe
2022-09-12 15:14:25,700:INFO:Initializing Bayesian Ridge
2022-09-12 15:14:25,701:INFO:Total runtime is 0.06776262919108073 minutes
2022-09-12 15:14:25,717:INFO:SubProcess create_model() called ==================================
2022-09-12 15:14:25,718:INFO:Initializing create_model()
2022-09-12 15:14:25,718:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65EEBCD30>, return_train_score=False, kwargs={})
2022-09-12 15:14:25,719:INFO:Checking exceptions
2022-09-12 15:14:25,719:INFO:Importing libraries
2022-09-12 15:14:25,720:INFO:Copying training dataset
2022-09-12 15:14:25,721:INFO:Defining folds
2022-09-12 15:14:25,721:INFO:Declaring metric variables
2022-09-12 15:14:25,737:INFO:Importing untrained model
2022-09-12 15:14:25,754:INFO:Bayesian Ridge Imported succesfully
2022-09-12 15:14:25,799:INFO:Starting cross validation
2022-09-12 15:14:25,800:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:14:25,984:INFO:Calculating mean and std
2022-09-12 15:14:25,988:INFO:Creating metrics dataframe
2022-09-12 15:14:26,043:INFO:Uploading results into container
2022-09-12 15:14:26,043:INFO:Uploading model into container now
2022-09-12 15:14:26,043:INFO:create_model_container: 8
2022-09-12 15:14:26,044:INFO:master_model_container: 8
2022-09-12 15:14:26,044:INFO:display_container: 2
2022-09-12 15:14:26,044:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False)
2022-09-12 15:14:26,045:INFO:create_model() succesfully completed......................................
2022-09-12 15:14:26,229:INFO:SubProcess create_model() end ==================================
2022-09-12 15:14:26,230:INFO:Creating metrics dataframe
2022-09-12 15:14:26,279:INFO:Initializing Passive Aggressive Regressor
2022-09-12 15:14:26,279:INFO:Total runtime is 0.07741108735402424 minutes
2022-09-12 15:14:26,295:INFO:SubProcess create_model() called ==================================
2022-09-12 15:14:26,295:INFO:Initializing create_model()
2022-09-12 15:14:26,295:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65EEBCD30>, return_train_score=False, kwargs={})
2022-09-12 15:14:26,296:INFO:Checking exceptions
2022-09-12 15:14:26,296:INFO:Importing libraries
2022-09-12 15:14:26,296:INFO:Copying training dataset
2022-09-12 15:14:26,298:INFO:Defining folds
2022-09-12 15:14:26,299:INFO:Declaring metric variables
2022-09-12 15:14:26,313:INFO:Importing untrained model
2022-09-12 15:14:26,328:INFO:Passive Aggressive Regressor Imported succesfully
2022-09-12 15:14:26,366:INFO:Starting cross validation
2022-09-12 15:14:26,368:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:14:26,533:INFO:Calculating mean and std
2022-09-12 15:14:26,535:INFO:Creating metrics dataframe
2022-09-12 15:14:26,593:INFO:Uploading results into container
2022-09-12 15:14:26,593:INFO:Uploading model into container now
2022-09-12 15:14:26,594:INFO:create_model_container: 9
2022-09-12 15:14:26,594:INFO:master_model_container: 9
2022-09-12 15:14:26,594:INFO:display_container: 2
2022-09-12 15:14:26,595:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=123, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-09-12 15:14:26,595:INFO:create_model() succesfully completed......................................
2022-09-12 15:14:26,787:INFO:SubProcess create_model() end ==================================
2022-09-12 15:14:26,787:INFO:Creating metrics dataframe
2022-09-12 15:14:26,835:INFO:Initializing Huber Regressor
2022-09-12 15:14:26,835:INFO:Total runtime is 0.08666880925496419 minutes
2022-09-12 15:14:26,846:INFO:SubProcess create_model() called ==================================
2022-09-12 15:14:26,847:INFO:Initializing create_model()
2022-09-12 15:14:26,847:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65EEBCD30>, return_train_score=False, kwargs={})
2022-09-12 15:14:26,847:INFO:Checking exceptions
2022-09-12 15:14:26,848:INFO:Importing libraries
2022-09-12 15:14:26,848:INFO:Copying training dataset
2022-09-12 15:14:26,851:INFO:Defining folds
2022-09-12 15:14:26,851:INFO:Declaring metric variables
2022-09-12 15:14:26,871:INFO:Importing untrained model
2022-09-12 15:14:26,886:INFO:Huber Regressor Imported succesfully
2022-09-12 15:14:26,934:INFO:Starting cross validation
2022-09-12 15:14:26,936:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:14:27,125:INFO:Calculating mean and std
2022-09-12 15:14:27,127:INFO:Creating metrics dataframe
2022-09-12 15:14:27,177:INFO:Uploading results into container
2022-09-12 15:14:27,178:INFO:Uploading model into container now
2022-09-12 15:14:27,178:INFO:create_model_container: 10
2022-09-12 15:14:27,178:INFO:master_model_container: 10
2022-09-12 15:14:27,178:INFO:display_container: 2
2022-09-12 15:14:27,179:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-12 15:14:27,179:INFO:create_model() succesfully completed......................................
2022-09-12 15:14:27,349:INFO:SubProcess create_model() end ==================================
2022-09-12 15:14:27,350:INFO:Creating metrics dataframe
2022-09-12 15:14:27,392:INFO:Initializing K Neighbors Regressor
2022-09-12 15:14:27,392:INFO:Total runtime is 0.09595120747884114 minutes
2022-09-12 15:14:27,404:INFO:SubProcess create_model() called ==================================
2022-09-12 15:14:27,405:INFO:Initializing create_model()
2022-09-12 15:14:27,405:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65EEBCD30>, return_train_score=False, kwargs={})
2022-09-12 15:14:27,406:INFO:Checking exceptions
2022-09-12 15:14:27,406:INFO:Importing libraries
2022-09-12 15:14:27,406:INFO:Copying training dataset
2022-09-12 15:14:27,408:INFO:Defining folds
2022-09-12 15:14:27,409:INFO:Declaring metric variables
2022-09-12 15:14:27,422:INFO:Importing untrained model
2022-09-12 15:14:27,438:INFO:K Neighbors Regressor Imported succesfully
2022-09-12 15:14:27,484:INFO:Starting cross validation
2022-09-12 15:14:27,486:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:14:27,643:INFO:Calculating mean and std
2022-09-12 15:14:27,645:INFO:Creating metrics dataframe
2022-09-12 15:14:27,706:INFO:Uploading results into container
2022-09-12 15:14:27,706:INFO:Uploading model into container now
2022-09-12 15:14:27,707:INFO:create_model_container: 11
2022-09-12 15:14:27,707:INFO:master_model_container: 11
2022-09-12 15:14:27,707:INFO:display_container: 2
2022-09-12 15:14:27,708:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2022-09-12 15:14:27,708:INFO:create_model() succesfully completed......................................
2022-09-12 15:14:27,937:INFO:SubProcess create_model() end ==================================
2022-09-12 15:14:27,937:INFO:Creating metrics dataframe
2022-09-12 15:14:28,003:INFO:Initializing Decision Tree Regressor
2022-09-12 15:14:28,003:INFO:Total runtime is 0.10613073507944742 minutes
2022-09-12 15:14:28,023:INFO:SubProcess create_model() called ==================================
2022-09-12 15:14:28,023:INFO:Initializing create_model()
2022-09-12 15:14:28,023:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65EEBCD30>, return_train_score=False, kwargs={})
2022-09-12 15:14:28,023:INFO:Checking exceptions
2022-09-12 15:14:28,023:INFO:Importing libraries
2022-09-12 15:14:28,023:INFO:Copying training dataset
2022-09-12 15:14:28,023:INFO:Defining folds
2022-09-12 15:14:28,023:INFO:Declaring metric variables
2022-09-12 15:14:28,051:INFO:Importing untrained model
2022-09-12 15:14:28,079:INFO:Decision Tree Regressor Imported succesfully
2022-09-12 15:14:28,130:INFO:Starting cross validation
2022-09-12 15:14:28,131:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:14:28,333:INFO:Calculating mean and std
2022-09-12 15:14:28,338:INFO:Creating metrics dataframe
2022-09-12 15:14:28,398:INFO:Uploading results into container
2022-09-12 15:14:28,398:INFO:Uploading model into container now
2022-09-12 15:14:28,398:INFO:create_model_container: 12
2022-09-12 15:14:28,398:INFO:master_model_container: 12
2022-09-12 15:14:28,398:INFO:display_container: 2
2022-09-12 15:14:28,403:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=123, splitter='best')
2022-09-12 15:14:28,403:INFO:create_model() succesfully completed......................................
2022-09-12 15:14:28,608:INFO:SubProcess create_model() end ==================================
2022-09-12 15:14:28,608:INFO:Creating metrics dataframe
2022-09-12 15:14:28,692:INFO:Initializing Random Forest Regressor
2022-09-12 15:14:28,692:INFO:Total runtime is 0.1176186998685201 minutes
2022-09-12 15:14:28,709:INFO:SubProcess create_model() called ==================================
2022-09-12 15:14:28,709:INFO:Initializing create_model()
2022-09-12 15:14:28,709:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65EEBCD30>, return_train_score=False, kwargs={})
2022-09-12 15:14:28,709:INFO:Checking exceptions
2022-09-12 15:14:28,709:INFO:Importing libraries
2022-09-12 15:14:28,709:INFO:Copying training dataset
2022-09-12 15:14:28,719:INFO:Defining folds
2022-09-12 15:14:28,719:INFO:Declaring metric variables
2022-09-12 15:14:28,741:INFO:Importing untrained model
2022-09-12 15:14:28,756:INFO:Random Forest Regressor Imported succesfully
2022-09-12 15:14:28,806:INFO:Starting cross validation
2022-09-12 15:14:28,809:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:14:30,414:INFO:Calculating mean and std
2022-09-12 15:14:30,416:INFO:Creating metrics dataframe
2022-09-12 15:14:30,469:INFO:Uploading results into container
2022-09-12 15:14:30,470:INFO:Uploading model into container now
2022-09-12 15:14:30,470:INFO:create_model_container: 13
2022-09-12 15:14:30,471:INFO:master_model_container: 13
2022-09-12 15:14:30,471:INFO:display_container: 2
2022-09-12 15:14:30,473:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=123, verbose=0, warm_start=False)
2022-09-12 15:14:30,473:INFO:create_model() succesfully completed......................................
2022-09-12 15:14:30,662:INFO:SubProcess create_model() end ==================================
2022-09-12 15:14:30,662:INFO:Creating metrics dataframe
2022-09-12 15:14:30,736:INFO:Initializing Extra Trees Regressor
2022-09-12 15:14:30,736:INFO:Total runtime is 0.15168596506118776 minutes
2022-09-12 15:14:30,762:INFO:SubProcess create_model() called ==================================
2022-09-12 15:14:30,762:INFO:Initializing create_model()
2022-09-12 15:14:30,763:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65EEBCD30>, return_train_score=False, kwargs={})
2022-09-12 15:14:30,763:INFO:Checking exceptions
2022-09-12 15:14:30,763:INFO:Importing libraries
2022-09-12 15:14:30,763:INFO:Copying training dataset
2022-09-12 15:14:30,763:INFO:Defining folds
2022-09-12 15:14:30,763:INFO:Declaring metric variables
2022-09-12 15:14:30,780:INFO:Importing untrained model
2022-09-12 15:14:30,808:INFO:Extra Trees Regressor Imported succesfully
2022-09-12 15:14:30,848:INFO:Starting cross validation
2022-09-12 15:14:30,848:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:14:32,146:INFO:Calculating mean and std
2022-09-12 15:14:32,146:INFO:Creating metrics dataframe
2022-09-12 15:14:32,209:INFO:Uploading results into container
2022-09-12 15:14:32,209:INFO:Uploading model into container now
2022-09-12 15:14:32,209:INFO:create_model_container: 14
2022-09-12 15:14:32,209:INFO:master_model_container: 14
2022-09-12 15:14:32,209:INFO:display_container: 2
2022-09-12 15:14:32,209:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=123, verbose=0, warm_start=False)
2022-09-12 15:14:32,209:INFO:create_model() succesfully completed......................................
2022-09-12 15:14:32,425:INFO:SubProcess create_model() end ==================================
2022-09-12 15:14:32,425:INFO:Creating metrics dataframe
2022-09-12 15:14:32,531:INFO:Initializing AdaBoost Regressor
2022-09-12 15:14:32,531:INFO:Total runtime is 0.18160727818806968 minutes
2022-09-12 15:14:32,542:INFO:SubProcess create_model() called ==================================
2022-09-12 15:14:32,550:INFO:Initializing create_model()
2022-09-12 15:14:32,550:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65EEBCD30>, return_train_score=False, kwargs={})
2022-09-12 15:14:32,550:INFO:Checking exceptions
2022-09-12 15:14:32,551:INFO:Importing libraries
2022-09-12 15:14:32,551:INFO:Copying training dataset
2022-09-12 15:14:32,553:INFO:Defining folds
2022-09-12 15:14:32,554:INFO:Declaring metric variables
2022-09-12 15:14:32,570:INFO:Importing untrained model
2022-09-12 15:14:32,591:INFO:AdaBoost Regressor Imported succesfully
2022-09-12 15:14:32,643:INFO:Starting cross validation
2022-09-12 15:14:32,643:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:14:33,217:INFO:Calculating mean and std
2022-09-12 15:14:33,218:INFO:Creating metrics dataframe
2022-09-12 15:14:33,261:INFO:Uploading results into container
2022-09-12 15:14:33,262:INFO:Uploading model into container now
2022-09-12 15:14:33,262:INFO:create_model_container: 15
2022-09-12 15:14:33,262:INFO:master_model_container: 15
2022-09-12 15:14:33,262:INFO:display_container: 2
2022-09-12 15:14:33,263:INFO:AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=123)
2022-09-12 15:14:33,263:INFO:create_model() succesfully completed......................................
2022-09-12 15:14:33,440:INFO:SubProcess create_model() end ==================================
2022-09-12 15:14:33,440:INFO:Creating metrics dataframe
2022-09-12 15:14:33,502:INFO:Initializing Gradient Boosting Regressor
2022-09-12 15:14:33,503:INFO:Total runtime is 0.1977961262067159 minutes
2022-09-12 15:14:33,518:INFO:SubProcess create_model() called ==================================
2022-09-12 15:14:33,519:INFO:Initializing create_model()
2022-09-12 15:14:33,519:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65EEBCD30>, return_train_score=False, kwargs={})
2022-09-12 15:14:33,519:INFO:Checking exceptions
2022-09-12 15:14:33,519:INFO:Importing libraries
2022-09-12 15:14:33,519:INFO:Copying training dataset
2022-09-12 15:14:33,523:INFO:Defining folds
2022-09-12 15:14:33,523:INFO:Declaring metric variables
2022-09-12 15:14:33,543:INFO:Importing untrained model
2022-09-12 15:14:33,561:INFO:Gradient Boosting Regressor Imported succesfully
2022-09-12 15:14:33,605:INFO:Starting cross validation
2022-09-12 15:14:33,607:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:14:33,838:INFO:Calculating mean and std
2022-09-12 15:14:33,838:INFO:Creating metrics dataframe
2022-09-12 15:14:33,873:INFO:Uploading results into container
2022-09-12 15:14:33,873:INFO:Uploading model into container now
2022-09-12 15:14:33,873:INFO:create_model_container: 16
2022-09-12 15:14:33,873:INFO:master_model_container: 16
2022-09-12 15:14:33,873:INFO:display_container: 2
2022-09-12 15:14:33,873:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=123, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2022-09-12 15:14:33,873:INFO:create_model() succesfully completed......................................
2022-09-12 15:14:34,050:INFO:SubProcess create_model() end ==================================
2022-09-12 15:14:34,050:INFO:Creating metrics dataframe
2022-09-12 15:14:34,100:INFO:Initializing Extreme Gradient Boosting
2022-09-12 15:14:34,100:INFO:Total runtime is 0.20774946212768555 minutes
2022-09-12 15:14:34,117:INFO:SubProcess create_model() called ==================================
2022-09-12 15:14:34,118:INFO:Initializing create_model()
2022-09-12 15:14:34,118:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65EEBCD30>, return_train_score=False, kwargs={})
2022-09-12 15:14:34,118:INFO:Checking exceptions
2022-09-12 15:14:34,118:INFO:Importing libraries
2022-09-12 15:14:34,118:INFO:Copying training dataset
2022-09-12 15:14:34,118:INFO:Defining folds
2022-09-12 15:14:34,118:INFO:Declaring metric variables
2022-09-12 15:14:34,132:INFO:Importing untrained model
2022-09-12 15:14:34,144:INFO:Extreme Gradient Boosting Imported succesfully
2022-09-12 15:14:34,186:INFO:Starting cross validation
2022-09-12 15:14:34,187:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:14:34,712:INFO:Calculating mean and std
2022-09-12 15:14:34,716:INFO:Creating metrics dataframe
2022-09-12 15:14:34,768:INFO:Uploading results into container
2022-09-12 15:14:34,769:INFO:Uploading model into container now
2022-09-12 15:14:34,769:INFO:create_model_container: 17
2022-09-12 15:14:34,769:INFO:master_model_container: 17
2022-09-12 15:14:34,769:INFO:display_container: 2
2022-09-12 15:14:34,772:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror',
             predictor=None, random_state=123, reg_alpha=None, ...)
2022-09-12 15:14:34,772:INFO:create_model() succesfully completed......................................
2022-09-12 15:14:34,949:INFO:SubProcess create_model() end ==================================
2022-09-12 15:14:34,949:INFO:Creating metrics dataframe
2022-09-12 15:14:35,024:INFO:Initializing Light Gradient Boosting Machine
2022-09-12 15:14:35,024:INFO:Total runtime is 0.22315789858500162 minutes
2022-09-12 15:14:35,045:INFO:SubProcess create_model() called ==================================
2022-09-12 15:14:35,045:INFO:Initializing create_model()
2022-09-12 15:14:35,045:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65EEBCD30>, return_train_score=False, kwargs={})
2022-09-12 15:14:35,045:INFO:Checking exceptions
2022-09-12 15:14:35,045:INFO:Importing libraries
2022-09-12 15:14:35,045:INFO:Copying training dataset
2022-09-12 15:14:35,045:INFO:Defining folds
2022-09-12 15:14:35,045:INFO:Declaring metric variables
2022-09-12 15:14:35,073:INFO:Importing untrained model
2022-09-12 15:14:35,102:INFO:Light Gradient Boosting Machine Imported succesfully
2022-09-12 15:14:35,162:INFO:Starting cross validation
2022-09-12 15:14:35,163:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:14:35,291:INFO:Calculating mean and std
2022-09-12 15:14:35,291:INFO:Creating metrics dataframe
2022-09-12 15:14:35,335:INFO:Uploading results into container
2022-09-12 15:14:35,335:INFO:Uploading model into container now
2022-09-12 15:14:35,335:INFO:create_model_container: 18
2022-09-12 15:14:35,335:INFO:master_model_container: 18
2022-09-12 15:14:35,335:INFO:display_container: 2
2022-09-12 15:14:35,335:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-09-12 15:14:35,335:INFO:create_model() succesfully completed......................................
2022-09-12 15:14:35,526:INFO:SubProcess create_model() end ==================================
2022-09-12 15:14:35,526:INFO:Creating metrics dataframe
2022-09-12 15:14:35,603:INFO:Initializing Dummy Regressor
2022-09-12 15:14:35,603:INFO:Total runtime is 0.2328004757563273 minutes
2022-09-12 15:14:35,628:INFO:SubProcess create_model() called ==================================
2022-09-12 15:14:35,629:INFO:Initializing create_model()
2022-09-12 15:14:35,629:INFO:create_model(estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65EEBCD30>, return_train_score=False, kwargs={})
2022-09-12 15:14:35,630:INFO:Checking exceptions
2022-09-12 15:14:35,630:INFO:Importing libraries
2022-09-12 15:14:35,630:INFO:Copying training dataset
2022-09-12 15:14:35,633:INFO:Defining folds
2022-09-12 15:14:35,633:INFO:Declaring metric variables
2022-09-12 15:14:35,658:INFO:Importing untrained model
2022-09-12 15:14:35,697:INFO:Dummy Regressor Imported succesfully
2022-09-12 15:14:35,748:INFO:Starting cross validation
2022-09-12 15:14:35,755:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:14:35,962:INFO:Calculating mean and std
2022-09-12 15:14:35,966:INFO:Creating metrics dataframe
2022-09-12 15:14:36,050:INFO:Uploading results into container
2022-09-12 15:14:36,051:INFO:Uploading model into container now
2022-09-12 15:14:36,051:INFO:create_model_container: 19
2022-09-12 15:14:36,051:INFO:master_model_container: 19
2022-09-12 15:14:36,052:INFO:display_container: 2
2022-09-12 15:14:36,052:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2022-09-12 15:14:36,052:INFO:create_model() succesfully completed......................................
2022-09-12 15:14:36,229:INFO:SubProcess create_model() end ==================================
2022-09-12 15:14:36,229:INFO:Creating metrics dataframe
2022-09-12 15:14:36,356:INFO:Initializing create_model()
2022-09-12 15:14:36,356:INFO:create_model(estimator=HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-09-12 15:14:36,357:INFO:Checking exceptions
2022-09-12 15:14:36,357:INFO:Importing libraries
2022-09-12 15:14:36,357:INFO:Copying training dataset
2022-09-12 15:14:36,358:INFO:Defining folds
2022-09-12 15:14:36,359:INFO:Declaring metric variables
2022-09-12 15:14:36,359:INFO:Importing untrained model
2022-09-12 15:14:36,359:INFO:Declaring custom model
2022-09-12 15:14:36,361:INFO:Huber Regressor Imported succesfully
2022-09-12 15:14:36,362:INFO:Cross validation set to False
2022-09-12 15:14:36,362:INFO:Fitting Model
2022-09-12 15:14:36,397:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-12 15:14:36,398:INFO:create_models() succesfully completed......................................
2022-09-12 15:14:36,623:INFO:create_model_container: 19
2022-09-12 15:14:36,624:INFO:master_model_container: 19
2022-09-12 15:14:36,624:INFO:display_container: 2
2022-09-12 15:14:36,624:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-12 15:14:36,625:INFO:compare_models() succesfully completed......................................
2022-09-12 15:16:04,861:INFO:Initializing get_config()
2022-09-12 15:16:04,861:INFO:get_config(variable=data_before_preprocess)
2022-09-12 15:16:04,867:INFO:Global variable: data_before_preprocess returned as       BPPD     BAPD  Caudal_gas_MSCFD  Presion_cabeza_psi  \
0   273.00  5187.00             120.0                 160   
1   306.90   251.10              33.0                 180   
2    30.00   970.00              51.0                 200   
3   311.64   324.36              28.0                 210   
4   412.48  4743.52              48.0                 200   
..     ...      ...               ...                 ...   
72   91.98  2974.02              22.0                 195   
73  295.80  4634.20              12.0                 156   
74  239.96  3188.04              50.7                 195   
75  992.00  3968.00              41.3                 170   
76  279.90  2830.10              45.0                 220   

    Temperatura_cabeza_F  Salinidad_ppm  CO2_gas  bicarbonatos_ppm  \
0                    220          76600        7               240   
1                    130          74000        0               281   
2                    192          73000       15               120   
3                    160          36200       15               220   
4                    150          82200       20               400   
..                   ...            ...      ...               ...   
72                   200          55000       10               370   
73                   200          60200        4               360   
74                   210          52800        5               360   
75                   210          69500        3               300   
76                   197          53200        7               300   

    dosis_IC_ppm  Fe_ppm       mpy  
0             50   45.90   8.41626  
1             50   77.11   0.10024  
2             90   54.00   7.17844  
3             40   56.21   1.50500  
4             40   54.80   0.71894  
..           ...     ...       ...  
72            70   34.90  10.20184  
73            40   71.82   3.36175  
74            80   40.90   0.76563  
75            50   48.90   3.65412  
76            80   32.00  10.41508  

[77 rows x 11 columns]
2022-09-12 15:16:04,867:INFO:get_config() succesfully completed......................................
2022-09-12 15:16:04,867:INFO:Initializing get_config()
2022-09-12 15:16:04,867:INFO:get_config(variable=prep_pipe)
2022-09-12 15:16:04,885:INFO:Global variable: prep_pipe returned as Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=['dosis_IC_ppm',
                                                          'CO2_gas'],
                                      target='mpy', time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=N...
                                                  target='mpy')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='mpy')),
                ('fix_perfect', Remove_100(target='mpy')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-09-12 15:16:04,885:INFO:get_config() succesfully completed......................................
2022-09-12 15:17:00,140:INFO:Initializing create_model()
2022-09-12 15:17:00,141:INFO:create_model(estimator=huber, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-09-12 15:17:00,141:INFO:Checking exceptions
2022-09-12 15:17:00,141:INFO:Preparing display monitor
2022-09-12 15:17:00,171:INFO:Importing libraries
2022-09-12 15:17:00,172:INFO:Copying training dataset
2022-09-12 15:17:00,173:INFO:Defining folds
2022-09-12 15:17:00,173:INFO:Declaring metric variables
2022-09-12 15:17:00,182:INFO:Importing untrained model
2022-09-12 15:17:00,195:INFO:Huber Regressor Imported succesfully
2022-09-12 15:17:00,232:INFO:Starting cross validation
2022-09-12 15:17:00,233:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:17:00,529:INFO:Calculating mean and std
2022-09-12 15:17:00,532:INFO:Creating metrics dataframe
2022-09-12 15:17:00,557:INFO:Finalizing model
2022-09-12 15:17:00,605:INFO:Uploading results into container
2022-09-12 15:17:00,605:INFO:Uploading model into container now
2022-09-12 15:17:00,624:INFO:create_model_container: 20
2022-09-12 15:17:00,624:INFO:master_model_container: 20
2022-09-12 15:17:00,624:INFO:display_container: 3
2022-09-12 15:17:00,625:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-12 15:17:00,625:INFO:create_model() succesfully completed......................................
2022-09-12 15:17:30,778:INFO:Initializing tune_model()
2022-09-12 15:17:30,778:INFO:tune_model(estimator=HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, return_train_score=False, kwargs={})
2022-09-12 15:17:30,779:INFO:Checking exceptions
2022-09-12 15:17:30,779:INFO:Preparing display monitor
2022-09-12 15:17:30,814:INFO:Copying training dataset
2022-09-12 15:17:30,819:INFO:Checking base model
2022-09-12 15:17:30,819:INFO:Base model : Huber Regressor
2022-09-12 15:17:30,835:INFO:Declaring metric variables
2022-09-12 15:17:30,851:INFO:Defining Hyperparameters
2022-09-12 15:17:31,120:INFO:Tuning with n_jobs=-1
2022-09-12 15:17:31,120:INFO:Initializing RandomizedSearchCV
2022-09-12 15:17:31,874:INFO:best_params: {'actual_estimator__fit_intercept': True, 'actual_estimator__epsilon': 1.4, 'actual_estimator__alpha': 0.5}
2022-09-12 15:17:31,875:INFO:Hyperparameter search completed
2022-09-12 15:17:31,875:INFO:SubProcess create_model() called ==================================
2022-09-12 15:17:31,877:INFO:Initializing create_model()
2022-09-12 15:17:31,877:INFO:create_model(estimator=HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D65B83C190>, return_train_score=False, kwargs={'fit_intercept': True, 'epsilon': 1.4, 'alpha': 0.5})
2022-09-12 15:17:31,877:INFO:Checking exceptions
2022-09-12 15:17:31,878:INFO:Importing libraries
2022-09-12 15:17:31,878:INFO:Copying training dataset
2022-09-12 15:17:31,880:INFO:Defining folds
2022-09-12 15:17:31,881:INFO:Declaring metric variables
2022-09-12 15:17:31,901:INFO:Importing untrained model
2022-09-12 15:17:31,901:INFO:Declaring custom model
2022-09-12 15:17:31,919:INFO:Huber Regressor Imported succesfully
2022-09-12 15:17:31,948:INFO:Starting cross validation
2022-09-12 15:17:31,949:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:17:32,048:INFO:Calculating mean and std
2022-09-12 15:17:32,048:INFO:Creating metrics dataframe
2022-09-12 15:17:32,065:INFO:Finalizing model
2022-09-12 15:17:32,109:INFO:Uploading results into container
2022-09-12 15:17:32,109:INFO:Uploading model into container now
2022-09-12 15:17:32,109:INFO:create_model_container: 21
2022-09-12 15:17:32,109:INFO:master_model_container: 21
2022-09-12 15:17:32,109:INFO:display_container: 4
2022-09-12 15:17:32,109:INFO:HuberRegressor(alpha=0.5, epsilon=1.4, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-12 15:17:32,109:INFO:create_model() succesfully completed......................................
2022-09-12 15:17:32,257:INFO:SubProcess create_model() end ==================================
2022-09-12 15:17:32,257:INFO:choose_better activated
2022-09-12 15:17:32,258:INFO:SubProcess create_model() called ==================================
2022-09-12 15:17:32,258:INFO:Initializing create_model()
2022-09-12 15:17:32,258:INFO:create_model(estimator=HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-09-12 15:17:32,258:INFO:Checking exceptions
2022-09-12 15:17:32,258:INFO:Importing libraries
2022-09-12 15:17:32,258:INFO:Copying training dataset
2022-09-12 15:17:32,258:INFO:Defining folds
2022-09-12 15:17:32,258:INFO:Declaring metric variables
2022-09-12 15:17:32,258:INFO:Importing untrained model
2022-09-12 15:17:32,258:INFO:Declaring custom model
2022-09-12 15:17:32,258:INFO:Huber Regressor Imported succesfully
2022-09-12 15:17:32,258:INFO:Starting cross validation
2022-09-12 15:17:32,258:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:17:32,425:INFO:Calculating mean and std
2022-09-12 15:17:32,425:INFO:Creating metrics dataframe
2022-09-12 15:17:32,433:INFO:Finalizing model
2022-09-12 15:17:32,524:INFO:Uploading results into container
2022-09-12 15:17:32,524:INFO:Uploading model into container now
2022-09-12 15:17:32,524:INFO:create_model_container: 22
2022-09-12 15:17:32,540:INFO:master_model_container: 22
2022-09-12 15:17:32,540:INFO:display_container: 5
2022-09-12 15:17:32,541:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-12 15:17:32,541:INFO:create_model() succesfully completed......................................
2022-09-12 15:17:32,696:INFO:SubProcess create_model() end ==================================
2022-09-12 15:17:32,697:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False) result for R2 is -1.5036
2022-09-12 15:17:32,698:INFO:HuberRegressor(alpha=0.5, epsilon=1.4, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False) result for R2 is -1.4785
2022-09-12 15:17:32,698:INFO:HuberRegressor(alpha=0.5, epsilon=1.4, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False) is best model
2022-09-12 15:17:32,698:INFO:choose_better completed
2022-09-12 15:17:32,749:INFO:create_model_container: 22
2022-09-12 15:17:32,749:INFO:master_model_container: 22
2022-09-12 15:17:32,749:INFO:display_container: 4
2022-09-12 15:17:32,749:INFO:HuberRegressor(alpha=0.5, epsilon=1.4, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-12 15:17:32,749:INFO:tune_model() succesfully completed......................................
2022-09-12 15:17:46,885:INFO:Initializing evaluate_model()
2022-09-12 15:17:46,885:INFO:evaluate_model(estimator=HuberRegressor(alpha=0.5, epsilon=1.4, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2022-09-12 15:17:46,951:INFO:Initializing plot_model()
2022-09-12 15:17:46,953:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=HuberRegressor(alpha=0.5, epsilon=1.4, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=parameter, plot_kwargs={}, save=False, scale=1, system=True)
2022-09-12 15:17:46,953:INFO:Checking exceptions
2022-09-12 15:17:46,953:INFO:Preparing display monitor
2022-09-12 15:17:46,971:INFO:Preloading libraries
2022-09-12 15:17:46,973:INFO:Copying training dataset
2022-09-12 15:17:46,975:INFO:Copying test dataset
2022-09-12 15:17:46,975:INFO:Plot type: parameter
2022-09-12 15:17:47,002:INFO:Visual Rendered Successfully
2022-09-12 15:17:47,343:INFO:plot_model() succesfully completed......................................
2022-09-12 15:17:52,745:INFO:Initializing plot_model()
2022-09-12 15:17:52,751:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=HuberRegressor(alpha=0.5, epsilon=1.4, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=feature, plot_kwargs={}, save=False, scale=1, system=True)
2022-09-12 15:17:52,751:INFO:Checking exceptions
2022-09-12 15:17:52,751:INFO:Preparing display monitor
2022-09-12 15:17:52,763:INFO:Preloading libraries
2022-09-12 15:17:52,767:INFO:Copying training dataset
2022-09-12 15:17:52,767:INFO:Copying test dataset
2022-09-12 15:17:52,768:INFO:Plot type: feature
2022-09-12 15:17:53,189:INFO:Visual Rendered Successfully
2022-09-12 15:17:53,385:INFO:plot_model() succesfully completed......................................
2022-09-12 15:17:57,864:INFO:Initializing plot_model()
2022-09-12 15:17:57,864:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=HuberRegressor(alpha=0.5, epsilon=1.4, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=feature_all, plot_kwargs={}, save=False, scale=1, system=True)
2022-09-12 15:17:57,865:INFO:Checking exceptions
2022-09-12 15:17:57,865:INFO:Preparing display monitor
2022-09-12 15:17:57,885:INFO:Preloading libraries
2022-09-12 15:17:57,889:INFO:Copying training dataset
2022-09-12 15:17:57,890:INFO:Copying test dataset
2022-09-12 15:17:57,891:INFO:Plot type: feature_all
2022-09-12 15:17:58,196:INFO:Visual Rendered Successfully
2022-09-12 15:17:58,385:INFO:plot_model() succesfully completed......................................
2022-09-12 15:18:02,563:INFO:Initializing get_config()
2022-09-12 15:18:02,563:INFO:get_config(variable=X_test)
2022-09-12 15:18:02,643:INFO:Global variable: X_test returned as         BPPD      BAPD  Caudal_gas_MSCFD  Presion_cabeza_psi  \
53 -0.389840  0.296706         -0.372258           -1.233341   
64 -0.586969  1.048568         -0.769322            3.473560   
70  0.760682  1.772433         -0.588922            0.727868   
4   0.220756  2.115484         -0.605556            0.727868   
60  0.293590 -1.038299          2.039318           -1.429462   
23 -0.632727 -0.037733         -0.597239           -0.448858   
29 -0.202019 -0.203241          0.126359           -0.841100   
61 -0.354439  0.361996          1.024618            0.629807   
8  -0.216770  1.865262         -0.672094            0.237565   
74 -0.344736  1.070667         -0.583099            0.629807   
9  -0.619944  0.134289         -0.622190           -1.233341   
75  2.120330  1.594566         -0.661281            0.139505   
44  0.803950 -0.916520         -0.339405            4.650285   
24  3.148260  0.244717          1.656726           -1.233341   
76 -0.213820  0.830238         -0.630508            1.120109   
63 -0.474408  1.038130          0.625392           -0.644979   
71  1.471318  0.529249         -0.630508            1.022049   
43 -0.090245 -0.217413         -0.738631           -1.037220   
51  0.082727  2.234449          2.696378            0.629807   
1  -0.125318 -0.902078         -0.730314            0.335626   
37 -0.022590 -0.892231          1.074521           -0.056616   
45 -0.162194  0.054592          0.508951           -0.586142   
58 -0.231848  0.588090          0.849957           -0.644979   
31  5.041704 -0.774018          2.496765           -0.448858   

    Temperatura_cabeza_F  Salinidad_ppm   CO2_gas  bicarbonatos_ppm  \
53             -0.043085      -0.388329 -0.099685          0.347638   
64              0.886247      -1.694124  0.428646          2.202917   
70              1.151770       0.820741 -0.839348         -0.643976   
4              -0.706893       1.942758  0.956977         -0.100187   
60             -0.388265      -1.258859  0.111647         -0.963852   
23              0.886247      -0.001426  0.111647         -0.739939   
29              0.833142      -1.408784  0.217313          1.307265   
61              0.886247      -1.423293  1.273975          1.147327   
8               1.151770       1.086737 -0.416684         -0.388076   
74              0.886247       0.520892 -0.628016         -0.228138   
9               0.514514       0.820741 -0.416684         -0.675964   
75              0.886247       1.328551 -0.839348         -0.420063   
44             -0.786550       0.675653 -0.628016         -0.132175   
24              0.886247       1.159281 -0.628016         -1.027827   
76              0.541067       0.540237 -0.416684         -0.420063   
63              0.886247      -1.694124  0.111647          2.042979   
71              0.939352       0.627290 -0.628016         -0.580001   
43              0.886247       0.288751 -0.628016         -0.516026   
51              0.886247      -1.597399  0.639978          1.147327   
1              -1.237940       1.546183 -1.156347         -0.480839   
37              0.965904       1.231825 -0.839348          1.339253   
45             -0.016533      -1.249187  0.322980          0.283663   
58              0.036572      -1.602235  3.070301          1.435215   
31              0.089677       0.772379 -1.156347         -0.164163   

    dosis_IC_ppm    Fe_ppm  
53     -0.360922 -1.122963  
64     -1.008262 -1.760997  
70     -0.037253  0.085942  
4      -0.684592  1.104557  
60      1.257427  0.835912  
23     -0.360922 -0.580075  
29      1.904766 -1.671449  
61     -1.008262 -1.738610  
8      -0.684592  1.096722  
74      0.610087  0.326604  
9      -0.684592  0.947847  
75     -0.360922  0.774347  
44      2.875776 -0.899092  
24     -0.360922  0.483314  
76      0.610087 -0.171510  
63     -0.684592 -1.682642  
71     -0.360922  0.220265  
43     -0.522757 -0.255462  
51     -0.846427 -1.609884  
1      -0.360922  2.353200  
37     -0.360922  0.297501  
45     -1.008262 -1.609884  
58     -1.008262  0.835912  
31     -0.360922  0.333880  
2022-09-12 15:18:02,643:INFO:get_config() succesfully completed......................................
2022-09-12 15:18:02,643:INFO:Initializing get_config()
2022-09-12 15:18:02,645:INFO:get_config(variable=y_test)
2022-09-12 15:18:02,646:INFO:Global variable: y_test returned as 53     0.80521
64     1.69926
70     2.71055
4      0.71894
60     2.31148
23     0.29920
29     2.93174
61     0.74967
8      4.92600
74     0.76563
9      1.61922
75     3.65412
44     2.39477
24     2.86979
76    10.41508
63    12.22338
71     0.51089
43     2.36558
51     2.95179
1      0.10024
37     0.93964
45     1.76552
58     3.46174
31     2.45052
Name: mpy, dtype: float32
2022-09-12 15:18:02,646:INFO:get_config() succesfully completed......................................
2022-09-12 15:20:58,473:INFO:Initializing get_config()
2022-09-12 15:20:58,473:INFO:get_config(variable=X_train)
2022-09-12 15:20:58,510:INFO:Global variable: X_train returned as         BPPD      BAPD  Caudal_gas_MSCFD  Presion_cabeza_psi  \
14 -0.851445 -0.943101         -0.840101            1.512351   
72 -0.829791  0.926909         -0.821804            0.629807   
16  0.024479 -0.756789         -0.356040           -0.252737   
26 -0.228177  0.066098         -0.006717           -0.056616   
19  2.353187  1.460871          1.107790            1.708472   
69 -0.011839  0.611519         -0.738631           -1.233341   
6  -0.551109  1.188187         -0.680411            0.237565   
62 -0.269871  0.714101          0.841639            0.237565   
50  0.463120  1.572790          3.661175           -0.644979   
67 -0.132634 -0.138467         -0.842597           -0.644979   
15 -0.285080 -0.934494         -0.539018           -0.252737   
18 -0.465230 -0.524784         -0.455846           -0.448858   
13 -0.257415 -0.960986         -0.780218            0.688643   
22 -0.716640  0.543691         -0.181378           -1.272566   
10 -0.010266  0.231014          1.082839            2.689076   
59  0.623996  0.967534          1.989415           -0.448858   
11 -0.191104  0.877304          0.899860            0.237565   
0  -0.236437  2.413370         -0.006717           -0.056616   
5  -0.065989 -0.449419         -0.755266            1.022049   
42  0.006779 -0.927804         -0.522384            1.512351   
3  -0.109781 -0.852869         -0.771900            0.923988   
40 -0.720246  0.248881          0.592123           -1.037220   
12 -0.866765 -0.763573         -0.917452            0.433686   
54 -0.576116 -0.763151         -0.813486           -1.233341   
34 -0.062187 -0.884117         -0.588922           -0.939160   
27  0.189682  0.740835         -0.588922           -1.429462   
30  0.908054 -0.945913         -0.505749            0.727868   
21 -0.643544 -0.920819         -0.455846           -0.448858   
33 -0.523346 -0.462497         -0.572287           -0.782263   
38  4.910426 -0.933178          3.170460           -0.056616   
52  0.263499  3.407137          0.492316            2.002653   
28 -0.740306 -0.817027         -0.855072           -0.644979   
35  2.473681 -0.578251          0.800053           -0.154676   
41  0.280020  0.864723          1.407210           -1.429462   
7  -0.505219  1.366860         -0.721997            0.237565   
48  1.321979 -0.050052          1.257500           -1.233341   
56 -0.721164 -0.907599         -0.638825           -1.664807   
73 -0.161702  2.042053         -0.904976           -0.135064   
20 -0.078314  0.511624          0.708564            0.139505   
65 -0.652984  0.056425         -0.638825            1.649636   
39 -0.020034 -0.308375          0.184579            0.531747   
2  -1.032952 -0.419192         -0.580604            0.727868   
55 -0.381448 -1.045728         -0.788535           -0.644979   
49 -0.374106  0.184667          0.301020            1.316230   
68  0.153561 -0.773837         -0.672094           -1.037220   
36  0.805326 -0.544679          0.059821           -0.154676   
25 -0.534668 -0.785468         -0.206330           -1.135281   
46 -0.760235  0.754135          0.858274            1.708472   
32  1.663792 -0.775677          0.974715            0.237565   
47 -0.952710 -0.497432         -0.705363           -1.272566   
57 -0.077134 -0.206666         -0.430895            0.139505   
17 -0.526525 -0.919274          0.301020           -0.448858   
66 -0.317072 -0.959508         -0.805169           -0.056616   

    Temperatura_cabeza_F  Salinidad_ppm   CO2_gas  bicarbonatos_ppm  \
14              1.125218      -0.243240  0.111647          0.027763   
72              0.620724       0.627290 -0.099685         -0.196150   
16             -1.901749       0.758498 -0.945015         -0.675964   
26              1.151770      -1.452310  1.485308          0.987390   
19              1.151770       1.401095 -0.945015         -0.484038   
69              0.912799       0.578927 -0.416684          0.091738   
6               1.151770       0.844923 -0.628016         -0.548013   
62              0.594171       1.178626  0.428646         -0.548013   
50             -1.503464      -1.645762  1.168309          2.138942   
67              0.806590      -1.452310  0.956977          1.339253   
15             -1.397254      -0.388329 -0.839348         -0.516026   
18             -1.237940      -1.321731  0.956977          1.339253   
13             -0.919312      -0.339966 -0.628016         -0.739939   
22              1.151770      -0.581780 -0.628016         -0.420063   
10              0.833142      -0.823594  2.541970          1.595153   
59              0.222438      -1.718306  2.013639          1.595153   
11              0.939352      -0.098152  2.013639          0.187701   
0               1.151770       1.671927 -0.416684         -0.611988   
5               0.753485       1.062555  2.013639         -0.675964   
42             -0.972417      -0.424601 -0.945015          1.243290   
3              -0.441370      -0.281931  0.428646         -0.675964   
40             -0.228951      -1.790850 -0.416684          2.202917   
12             -0.441370      -0.339966  0.111647         -0.164163   
54              0.620724       1.256007 -0.416684         -0.771926   
34             -0.866207       0.907794 -0.945015         -0.548013   
27              0.673828      -1.524855  2.541970          2.746706   
30             -0.706893      -0.581780 -1.156347         -0.739939   
21             -1.609673      -0.562435  2.013639          1.883041   
33             -0.972417       0.046937 -0.099685         -0.899876   
38              0.355200      -0.528581 -0.945015          0.795464   
52              1.072113      -0.098152 -0.099685          1.115340   
28             -1.503464      -1.355585 -0.628016         -0.803914   
35             -0.706893       1.014193 -0.628016         -0.995839   
41              1.151770       0.869104 -1.050681         -0.739939   
7               1.151770       0.724016 -0.205351         -0.388076   
48              0.089677      -0.339966 -0.628016          0.891427   
56              0.222438       0.385476  0.428646         -0.675964   
73              0.620724       0.878777 -0.733682         -0.228138   
20              1.151770      -1.645762  0.428646          0.571551   
65              0.089677       1.594546  0.005981         -0.739939   
39              0.089677      -1.031554 -0.945015         -0.036212   
2               0.408305       1.497821  0.428646         -0.995839   
55             -0.441370       1.110918 -0.628016         -0.739939   
49              0.275543       0.337113 -0.099685         -0.452051   
68              0.673828      -0.001426  0.956977         -0.580001   
36             -0.175847       0.806233 -0.839348         -0.611988   
25              0.089677      -0.654324 -0.099685         -1.059814   
46              0.965904      -1.500673 -0.522350          1.467203   
32              0.089677      -0.083643 -0.099685         -0.675964   
47             -0.706893       0.361295 -0.628016         -0.771926   
57             -2.565557       0.724016 -0.628016         -0.771926   
17             -2.353138       1.207644 -1.156347         -0.675964   
66             -0.706893       0.965830 -0.945015         -1.059814   

    dosis_IC_ppm    Fe_ppm  
14     -0.037253 -0.875585  
72      0.286417 -0.009203  
16     -0.684592  0.052362  
26      1.904766 -0.345850  
19     -0.684592  0.792816  
69     -0.037253 -0.613656  
6      -0.360922  0.744124  
62      0.610087  0.432943  
50     -0.684592 -1.699432  
67     -1.008262 -1.644864  
15      4.494125  0.835912  
18     -0.360922 -1.312135  
13      0.610087 -1.061399  
22     -1.008262  0.835912  
10     -0.684592 -1.150947  
59     -0.684592 -1.716223  
11     -0.684592 -0.384188  
0      -0.360922  0.606444  
5       0.156949  2.347044  
42     -0.360922 -1.011028  
3      -0.684592  1.183472  
40     -0.846427 -1.692157  
12      0.286417  0.600847  
54     -0.360922  0.606444  
34     -0.684592 -0.510115  
27      0.610087 -1.517817  
30     -0.037253 -0.862153  
21      1.904766 -1.145351  
33     -0.522757 -0.294639  
38     -0.360922  0.835912  
52     -1.493767 -1.637868  
28      1.257427 -0.868869  
35     -0.522757  0.509059  
41     -0.037253  0.309814  
7      -0.684592  0.807928  
48      0.610087  0.035571  
56      0.286417 -0.093155  
73     -0.684592  2.057130  
20     -0.037253  0.835912  
65     -0.037253  1.031799  
39      0.610087  0.640024  
2       0.933757  1.059783  
55     -0.360922  1.199703  
49      1.257427 -0.305833  
68      1.904766  0.136313  
36     -0.684592  0.125120  
25     -0.684592  0.548796  
46     -1.008262 -1.635069  
32      0.124582  0.384251  
47     -0.360922  0.584056  
57     -0.684592  0.556072  
17     -0.684592  0.676963  
66      1.257427  1.015009  
2022-09-12 15:20:58,510:INFO:get_config() succesfully completed......................................
2022-09-12 15:20:58,510:INFO:Initializing get_config()
2022-09-12 15:20:58,515:INFO:get_config(variable=y_train)
2022-09-12 15:20:58,520:INFO:Global variable: y_train returned as 14     1.34146
72    10.20184
16     0.24041
26    11.15037
19     2.71603
69     1.76688
6      2.25250
62     0.20165
50     2.72426
67     2.30117
15     1.61804
18     0.88574
13     2.80693
22     0.16025
10     2.78461
59     0.33370
11     2.00468
0      8.41626
5      0.48729
42     0.78899
3      1.50500
40     0.79389
12     0.58622
54     0.60004
34     1.02908
27     8.15268
30     0.81167
21     0.12755
33     2.33242
38     0.87631
52    23.08255
28     0.27399
35     0.97687
41     2.92591
7      0.12195
48     0.71377
56     2.50552
73     3.36175
20     2.67822
65     1.92347
39     1.91647
2      7.17844
55     0.40741
49     0.40471
68     0.21302
36     1.83186
25     1.00565
46     0.81710
32     0.67619
47     0.18788
57     0.79912
17     0.18527
66     0.14099
Name: mpy, dtype: float32
2022-09-12 15:20:58,520:INFO:get_config() succesfully completed......................................
2022-09-12 15:20:58,522:INFO:Initializing get_config()
2022-09-12 15:20:58,522:INFO:get_config(variable=X_test)
2022-09-12 15:20:58,522:INFO:Global variable: X_test returned as         BPPD      BAPD  Caudal_gas_MSCFD  Presion_cabeza_psi  \
53 -0.389840  0.296706         -0.372258           -1.233341   
64 -0.586969  1.048568         -0.769322            3.473560   
70  0.760682  1.772433         -0.588922            0.727868   
4   0.220756  2.115484         -0.605556            0.727868   
60  0.293590 -1.038299          2.039318           -1.429462   
23 -0.632727 -0.037733         -0.597239           -0.448858   
29 -0.202019 -0.203241          0.126359           -0.841100   
61 -0.354439  0.361996          1.024618            0.629807   
8  -0.216770  1.865262         -0.672094            0.237565   
74 -0.344736  1.070667         -0.583099            0.629807   
9  -0.619944  0.134289         -0.622190           -1.233341   
75  2.120330  1.594566         -0.661281            0.139505   
44  0.803950 -0.916520         -0.339405            4.650285   
24  3.148260  0.244717          1.656726           -1.233341   
76 -0.213820  0.830238         -0.630508            1.120109   
63 -0.474408  1.038130          0.625392           -0.644979   
71  1.471318  0.529249         -0.630508            1.022049   
43 -0.090245 -0.217413         -0.738631           -1.037220   
51  0.082727  2.234449          2.696378            0.629807   
1  -0.125318 -0.902078         -0.730314            0.335626   
37 -0.022590 -0.892231          1.074521           -0.056616   
45 -0.162194  0.054592          0.508951           -0.586142   
58 -0.231848  0.588090          0.849957           -0.644979   
31  5.041704 -0.774018          2.496765           -0.448858   

    Temperatura_cabeza_F  Salinidad_ppm   CO2_gas  bicarbonatos_ppm  \
53             -0.043085      -0.388329 -0.099685          0.347638   
64              0.886247      -1.694124  0.428646          2.202917   
70              1.151770       0.820741 -0.839348         -0.643976   
4              -0.706893       1.942758  0.956977         -0.100187   
60             -0.388265      -1.258859  0.111647         -0.963852   
23              0.886247      -0.001426  0.111647         -0.739939   
29              0.833142      -1.408784  0.217313          1.307265   
61              0.886247      -1.423293  1.273975          1.147327   
8               1.151770       1.086737 -0.416684         -0.388076   
74              0.886247       0.520892 -0.628016         -0.228138   
9               0.514514       0.820741 -0.416684         -0.675964   
75              0.886247       1.328551 -0.839348         -0.420063   
44             -0.786550       0.675653 -0.628016         -0.132175   
24              0.886247       1.159281 -0.628016         -1.027827   
76              0.541067       0.540237 -0.416684         -0.420063   
63              0.886247      -1.694124  0.111647          2.042979   
71              0.939352       0.627290 -0.628016         -0.580001   
43              0.886247       0.288751 -0.628016         -0.516026   
51              0.886247      -1.597399  0.639978          1.147327   
1              -1.237940       1.546183 -1.156347         -0.480839   
37              0.965904       1.231825 -0.839348          1.339253   
45             -0.016533      -1.249187  0.322980          0.283663   
58              0.036572      -1.602235  3.070301          1.435215   
31              0.089677       0.772379 -1.156347         -0.164163   

    dosis_IC_ppm    Fe_ppm  
53     -0.360922 -1.122963  
64     -1.008262 -1.760997  
70     -0.037253  0.085942  
4      -0.684592  1.104557  
60      1.257427  0.835912  
23     -0.360922 -0.580075  
29      1.904766 -1.671449  
61     -1.008262 -1.738610  
8      -0.684592  1.096722  
74      0.610087  0.326604  
9      -0.684592  0.947847  
75     -0.360922  0.774347  
44      2.875776 -0.899092  
24     -0.360922  0.483314  
76      0.610087 -0.171510  
63     -0.684592 -1.682642  
71     -0.360922  0.220265  
43     -0.522757 -0.255462  
51     -0.846427 -1.609884  
1      -0.360922  2.353200  
37     -0.360922  0.297501  
45     -1.008262 -1.609884  
58     -1.008262  0.835912  
31     -0.360922  0.333880  
2022-09-12 15:20:58,538:INFO:get_config() succesfully completed......................................
2022-09-12 15:20:58,538:INFO:Initializing get_config()
2022-09-12 15:20:58,538:INFO:get_config(variable=y_test)
2022-09-12 15:20:58,539:INFO:Global variable: y_test returned as 53     0.80521
64     1.69926
70     2.71055
4      0.71894
60     2.31148
23     0.29920
29     2.93174
61     0.74967
8      4.92600
74     0.76563
9      1.61922
75     3.65412
44     2.39477
24     2.86979
76    10.41508
63    12.22338
71     0.51089
43     2.36558
51     2.95179
1      0.10024
37     0.93964
45     1.76552
58     3.46174
31     2.45052
Name: mpy, dtype: float32
2022-09-12 15:20:58,539:INFO:get_config() succesfully completed......................................
2022-09-12 15:21:21,130:INFO:Initializing get_config()
2022-09-12 15:21:21,130:INFO:get_config(variable=X_train)
2022-09-12 15:21:21,146:INFO:Global variable: X_train returned as         BPPD      BAPD  Caudal_gas_MSCFD  Presion_cabeza_psi  \
14 -0.851445 -0.943101         -0.840101            1.512351   
72 -0.829791  0.926909         -0.821804            0.629807   
16  0.024479 -0.756789         -0.356040           -0.252737   
26 -0.228177  0.066098         -0.006717           -0.056616   
19  2.353187  1.460871          1.107790            1.708472   
69 -0.011839  0.611519         -0.738631           -1.233341   
6  -0.551109  1.188187         -0.680411            0.237565   
62 -0.269871  0.714101          0.841639            0.237565   
50  0.463120  1.572790          3.661175           -0.644979   
67 -0.132634 -0.138467         -0.842597           -0.644979   
15 -0.285080 -0.934494         -0.539018           -0.252737   
18 -0.465230 -0.524784         -0.455846           -0.448858   
13 -0.257415 -0.960986         -0.780218            0.688643   
22 -0.716640  0.543691         -0.181378           -1.272566   
10 -0.010266  0.231014          1.082839            2.689076   
59  0.623996  0.967534          1.989415           -0.448858   
11 -0.191104  0.877304          0.899860            0.237565   
0  -0.236437  2.413370         -0.006717           -0.056616   
5  -0.065989 -0.449419         -0.755266            1.022049   
42  0.006779 -0.927804         -0.522384            1.512351   
3  -0.109781 -0.852869         -0.771900            0.923988   
40 -0.720246  0.248881          0.592123           -1.037220   
12 -0.866765 -0.763573         -0.917452            0.433686   
54 -0.576116 -0.763151         -0.813486           -1.233341   
34 -0.062187 -0.884117         -0.588922           -0.939160   
27  0.189682  0.740835         -0.588922           -1.429462   
30  0.908054 -0.945913         -0.505749            0.727868   
21 -0.643544 -0.920819         -0.455846           -0.448858   
33 -0.523346 -0.462497         -0.572287           -0.782263   
38  4.910426 -0.933178          3.170460           -0.056616   
52  0.263499  3.407137          0.492316            2.002653   
28 -0.740306 -0.817027         -0.855072           -0.644979   
35  2.473681 -0.578251          0.800053           -0.154676   
41  0.280020  0.864723          1.407210           -1.429462   
7  -0.505219  1.366860         -0.721997            0.237565   
48  1.321979 -0.050052          1.257500           -1.233341   
56 -0.721164 -0.907599         -0.638825           -1.664807   
73 -0.161702  2.042053         -0.904976           -0.135064   
20 -0.078314  0.511624          0.708564            0.139505   
65 -0.652984  0.056425         -0.638825            1.649636   
39 -0.020034 -0.308375          0.184579            0.531747   
2  -1.032952 -0.419192         -0.580604            0.727868   
55 -0.381448 -1.045728         -0.788535           -0.644979   
49 -0.374106  0.184667          0.301020            1.316230   
68  0.153561 -0.773837         -0.672094           -1.037220   
36  0.805326 -0.544679          0.059821           -0.154676   
25 -0.534668 -0.785468         -0.206330           -1.135281   
46 -0.760235  0.754135          0.858274            1.708472   
32  1.663792 -0.775677          0.974715            0.237565   
47 -0.952710 -0.497432         -0.705363           -1.272566   
57 -0.077134 -0.206666         -0.430895            0.139505   
17 -0.526525 -0.919274          0.301020           -0.448858   
66 -0.317072 -0.959508         -0.805169           -0.056616   

    Temperatura_cabeza_F  Salinidad_ppm   CO2_gas  bicarbonatos_ppm  \
14              1.125218      -0.243240  0.111647          0.027763   
72              0.620724       0.627290 -0.099685         -0.196150   
16             -1.901749       0.758498 -0.945015         -0.675964   
26              1.151770      -1.452310  1.485308          0.987390   
19              1.151770       1.401095 -0.945015         -0.484038   
69              0.912799       0.578927 -0.416684          0.091738   
6               1.151770       0.844923 -0.628016         -0.548013   
62              0.594171       1.178626  0.428646         -0.548013   
50             -1.503464      -1.645762  1.168309          2.138942   
67              0.806590      -1.452310  0.956977          1.339253   
15             -1.397254      -0.388329 -0.839348         -0.516026   
18             -1.237940      -1.321731  0.956977          1.339253   
13             -0.919312      -0.339966 -0.628016         -0.739939   
22              1.151770      -0.581780 -0.628016         -0.420063   
10              0.833142      -0.823594  2.541970          1.595153   
59              0.222438      -1.718306  2.013639          1.595153   
11              0.939352      -0.098152  2.013639          0.187701   
0               1.151770       1.671927 -0.416684         -0.611988   
5               0.753485       1.062555  2.013639         -0.675964   
42             -0.972417      -0.424601 -0.945015          1.243290   
3              -0.441370      -0.281931  0.428646         -0.675964   
40             -0.228951      -1.790850 -0.416684          2.202917   
12             -0.441370      -0.339966  0.111647         -0.164163   
54              0.620724       1.256007 -0.416684         -0.771926   
34             -0.866207       0.907794 -0.945015         -0.548013   
27              0.673828      -1.524855  2.541970          2.746706   
30             -0.706893      -0.581780 -1.156347         -0.739939   
21             -1.609673      -0.562435  2.013639          1.883041   
33             -0.972417       0.046937 -0.099685         -0.899876   
38              0.355200      -0.528581 -0.945015          0.795464   
52              1.072113      -0.098152 -0.099685          1.115340   
28             -1.503464      -1.355585 -0.628016         -0.803914   
35             -0.706893       1.014193 -0.628016         -0.995839   
41              1.151770       0.869104 -1.050681         -0.739939   
7               1.151770       0.724016 -0.205351         -0.388076   
48              0.089677      -0.339966 -0.628016          0.891427   
56              0.222438       0.385476  0.428646         -0.675964   
73              0.620724       0.878777 -0.733682         -0.228138   
20              1.151770      -1.645762  0.428646          0.571551   
65              0.089677       1.594546  0.005981         -0.739939   
39              0.089677      -1.031554 -0.945015         -0.036212   
2               0.408305       1.497821  0.428646         -0.995839   
55             -0.441370       1.110918 -0.628016         -0.739939   
49              0.275543       0.337113 -0.099685         -0.452051   
68              0.673828      -0.001426  0.956977         -0.580001   
36             -0.175847       0.806233 -0.839348         -0.611988   
25              0.089677      -0.654324 -0.099685         -1.059814   
46              0.965904      -1.500673 -0.522350          1.467203   
32              0.089677      -0.083643 -0.099685         -0.675964   
47             -0.706893       0.361295 -0.628016         -0.771926   
57             -2.565557       0.724016 -0.628016         -0.771926   
17             -2.353138       1.207644 -1.156347         -0.675964   
66             -0.706893       0.965830 -0.945015         -1.059814   

    dosis_IC_ppm    Fe_ppm  
14     -0.037253 -0.875585  
72      0.286417 -0.009203  
16     -0.684592  0.052362  
26      1.904766 -0.345850  
19     -0.684592  0.792816  
69     -0.037253 -0.613656  
6      -0.360922  0.744124  
62      0.610087  0.432943  
50     -0.684592 -1.699432  
67     -1.008262 -1.644864  
15      4.494125  0.835912  
18     -0.360922 -1.312135  
13      0.610087 -1.061399  
22     -1.008262  0.835912  
10     -0.684592 -1.150947  
59     -0.684592 -1.716223  
11     -0.684592 -0.384188  
0      -0.360922  0.606444  
5       0.156949  2.347044  
42     -0.360922 -1.011028  
3      -0.684592  1.183472  
40     -0.846427 -1.692157  
12      0.286417  0.600847  
54     -0.360922  0.606444  
34     -0.684592 -0.510115  
27      0.610087 -1.517817  
30     -0.037253 -0.862153  
21      1.904766 -1.145351  
33     -0.522757 -0.294639  
38     -0.360922  0.835912  
52     -1.493767 -1.637868  
28      1.257427 -0.868869  
35     -0.522757  0.509059  
41     -0.037253  0.309814  
7      -0.684592  0.807928  
48      0.610087  0.035571  
56      0.286417 -0.093155  
73     -0.684592  2.057130  
20     -0.037253  0.835912  
65     -0.037253  1.031799  
39      0.610087  0.640024  
2       0.933757  1.059783  
55     -0.360922  1.199703  
49      1.257427 -0.305833  
68      1.904766  0.136313  
36     -0.684592  0.125120  
25     -0.684592  0.548796  
46     -1.008262 -1.635069  
32      0.124582  0.384251  
47     -0.360922  0.584056  
57     -0.684592  0.556072  
17     -0.684592  0.676963  
66      1.257427  1.015009  
2022-09-12 15:21:21,146:INFO:get_config() succesfully completed......................................
2022-09-12 15:21:21,146:INFO:Initializing get_config()
2022-09-12 15:21:21,146:INFO:get_config(variable=y_train)
2022-09-12 15:21:21,148:INFO:Global variable: y_train returned as 14     1.34146
72    10.20184
16     0.24041
26    11.15037
19     2.71603
69     1.76688
6      2.25250
62     0.20165
50     2.72426
67     2.30117
15     1.61804
18     0.88574
13     2.80693
22     0.16025
10     2.78461
59     0.33370
11     2.00468
0      8.41626
5      0.48729
42     0.78899
3      1.50500
40     0.79389
12     0.58622
54     0.60004
34     1.02908
27     8.15268
30     0.81167
21     0.12755
33     2.33242
38     0.87631
52    23.08255
28     0.27399
35     0.97687
41     2.92591
7      0.12195
48     0.71377
56     2.50552
73     3.36175
20     2.67822
65     1.92347
39     1.91647
2      7.17844
55     0.40741
49     0.40471
68     0.21302
36     1.83186
25     1.00565
46     0.81710
32     0.67619
47     0.18788
57     0.79912
17     0.18527
66     0.14099
Name: mpy, dtype: float32
2022-09-12 15:21:21,148:INFO:get_config() succesfully completed......................................
2022-09-12 15:21:21,152:INFO:Initializing get_config()
2022-09-12 15:21:21,153:INFO:get_config(variable=X_test)
2022-09-12 15:21:21,166:INFO:Global variable: X_test returned as         BPPD      BAPD  Caudal_gas_MSCFD  Presion_cabeza_psi  \
53 -0.389840  0.296706         -0.372258           -1.233341   
64 -0.586969  1.048568         -0.769322            3.473560   
70  0.760682  1.772433         -0.588922            0.727868   
4   0.220756  2.115484         -0.605556            0.727868   
60  0.293590 -1.038299          2.039318           -1.429462   
23 -0.632727 -0.037733         -0.597239           -0.448858   
29 -0.202019 -0.203241          0.126359           -0.841100   
61 -0.354439  0.361996          1.024618            0.629807   
8  -0.216770  1.865262         -0.672094            0.237565   
74 -0.344736  1.070667         -0.583099            0.629807   
9  -0.619944  0.134289         -0.622190           -1.233341   
75  2.120330  1.594566         -0.661281            0.139505   
44  0.803950 -0.916520         -0.339405            4.650285   
24  3.148260  0.244717          1.656726           -1.233341   
76 -0.213820  0.830238         -0.630508            1.120109   
63 -0.474408  1.038130          0.625392           -0.644979   
71  1.471318  0.529249         -0.630508            1.022049   
43 -0.090245 -0.217413         -0.738631           -1.037220   
51  0.082727  2.234449          2.696378            0.629807   
1  -0.125318 -0.902078         -0.730314            0.335626   
37 -0.022590 -0.892231          1.074521           -0.056616   
45 -0.162194  0.054592          0.508951           -0.586142   
58 -0.231848  0.588090          0.849957           -0.644979   
31  5.041704 -0.774018          2.496765           -0.448858   

    Temperatura_cabeza_F  Salinidad_ppm   CO2_gas  bicarbonatos_ppm  \
53             -0.043085      -0.388329 -0.099685          0.347638   
64              0.886247      -1.694124  0.428646          2.202917   
70              1.151770       0.820741 -0.839348         -0.643976   
4              -0.706893       1.942758  0.956977         -0.100187   
60             -0.388265      -1.258859  0.111647         -0.963852   
23              0.886247      -0.001426  0.111647         -0.739939   
29              0.833142      -1.408784  0.217313          1.307265   
61              0.886247      -1.423293  1.273975          1.147327   
8               1.151770       1.086737 -0.416684         -0.388076   
74              0.886247       0.520892 -0.628016         -0.228138   
9               0.514514       0.820741 -0.416684         -0.675964   
75              0.886247       1.328551 -0.839348         -0.420063   
44             -0.786550       0.675653 -0.628016         -0.132175   
24              0.886247       1.159281 -0.628016         -1.027827   
76              0.541067       0.540237 -0.416684         -0.420063   
63              0.886247      -1.694124  0.111647          2.042979   
71              0.939352       0.627290 -0.628016         -0.580001   
43              0.886247       0.288751 -0.628016         -0.516026   
51              0.886247      -1.597399  0.639978          1.147327   
1              -1.237940       1.546183 -1.156347         -0.480839   
37              0.965904       1.231825 -0.839348          1.339253   
45             -0.016533      -1.249187  0.322980          0.283663   
58              0.036572      -1.602235  3.070301          1.435215   
31              0.089677       0.772379 -1.156347         -0.164163   

    dosis_IC_ppm    Fe_ppm  
53     -0.360922 -1.122963  
64     -1.008262 -1.760997  
70     -0.037253  0.085942  
4      -0.684592  1.104557  
60      1.257427  0.835912  
23     -0.360922 -0.580075  
29      1.904766 -1.671449  
61     -1.008262 -1.738610  
8      -0.684592  1.096722  
74      0.610087  0.326604  
9      -0.684592  0.947847  
75     -0.360922  0.774347  
44      2.875776 -0.899092  
24     -0.360922  0.483314  
76      0.610087 -0.171510  
63     -0.684592 -1.682642  
71     -0.360922  0.220265  
43     -0.522757 -0.255462  
51     -0.846427 -1.609884  
1      -0.360922  2.353200  
37     -0.360922  0.297501  
45     -1.008262 -1.609884  
58     -1.008262  0.835912  
31     -0.360922  0.333880  
2022-09-12 15:21:21,166:INFO:get_config() succesfully completed......................................
2022-09-12 15:21:21,166:INFO:Initializing get_config()
2022-09-12 15:21:21,166:INFO:get_config(variable=y_test)
2022-09-12 15:21:21,171:INFO:Global variable: y_test returned as 53     0.80521
64     1.69926
70     2.71055
4      0.71894
60     2.31148
23     0.29920
29     2.93174
61     0.74967
8      4.92600
74     0.76563
9      1.61922
75     3.65412
44     2.39477
24     2.86979
76    10.41508
63    12.22338
71     0.51089
43     2.36558
51     2.95179
1      0.10024
37     0.93964
45     1.76552
58     3.46174
31     2.45052
Name: mpy, dtype: float32
2022-09-12 15:21:21,171:INFO:get_config() succesfully completed......................................
2022-09-12 15:21:48,686:INFO:Initializing get_config()
2022-09-12 15:21:48,686:INFO:get_config(variable=X_train)
2022-09-12 15:21:48,704:INFO:Global variable: X_train returned as         BPPD      BAPD  Caudal_gas_MSCFD  Presion_cabeza_psi  \
14 -0.851445 -0.943101         -0.840101            1.512351   
72 -0.829791  0.926909         -0.821804            0.629807   
16  0.024479 -0.756789         -0.356040           -0.252737   
26 -0.228177  0.066098         -0.006717           -0.056616   
19  2.353187  1.460871          1.107790            1.708472   
69 -0.011839  0.611519         -0.738631           -1.233341   
6  -0.551109  1.188187         -0.680411            0.237565   
62 -0.269871  0.714101          0.841639            0.237565   
50  0.463120  1.572790          3.661175           -0.644979   
67 -0.132634 -0.138467         -0.842597           -0.644979   
15 -0.285080 -0.934494         -0.539018           -0.252737   
18 -0.465230 -0.524784         -0.455846           -0.448858   
13 -0.257415 -0.960986         -0.780218            0.688643   
22 -0.716640  0.543691         -0.181378           -1.272566   
10 -0.010266  0.231014          1.082839            2.689076   
59  0.623996  0.967534          1.989415           -0.448858   
11 -0.191104  0.877304          0.899860            0.237565   
0  -0.236437  2.413370         -0.006717           -0.056616   
5  -0.065989 -0.449419         -0.755266            1.022049   
42  0.006779 -0.927804         -0.522384            1.512351   
3  -0.109781 -0.852869         -0.771900            0.923988   
40 -0.720246  0.248881          0.592123           -1.037220   
12 -0.866765 -0.763573         -0.917452            0.433686   
54 -0.576116 -0.763151         -0.813486           -1.233341   
34 -0.062187 -0.884117         -0.588922           -0.939160   
27  0.189682  0.740835         -0.588922           -1.429462   
30  0.908054 -0.945913         -0.505749            0.727868   
21 -0.643544 -0.920819         -0.455846           -0.448858   
33 -0.523346 -0.462497         -0.572287           -0.782263   
38  4.910426 -0.933178          3.170460           -0.056616   
52  0.263499  3.407137          0.492316            2.002653   
28 -0.740306 -0.817027         -0.855072           -0.644979   
35  2.473681 -0.578251          0.800053           -0.154676   
41  0.280020  0.864723          1.407210           -1.429462   
7  -0.505219  1.366860         -0.721997            0.237565   
48  1.321979 -0.050052          1.257500           -1.233341   
56 -0.721164 -0.907599         -0.638825           -1.664807   
73 -0.161702  2.042053         -0.904976           -0.135064   
20 -0.078314  0.511624          0.708564            0.139505   
65 -0.652984  0.056425         -0.638825            1.649636   
39 -0.020034 -0.308375          0.184579            0.531747   
2  -1.032952 -0.419192         -0.580604            0.727868   
55 -0.381448 -1.045728         -0.788535           -0.644979   
49 -0.374106  0.184667          0.301020            1.316230   
68  0.153561 -0.773837         -0.672094           -1.037220   
36  0.805326 -0.544679          0.059821           -0.154676   
25 -0.534668 -0.785468         -0.206330           -1.135281   
46 -0.760235  0.754135          0.858274            1.708472   
32  1.663792 -0.775677          0.974715            0.237565   
47 -0.952710 -0.497432         -0.705363           -1.272566   
57 -0.077134 -0.206666         -0.430895            0.139505   
17 -0.526525 -0.919274          0.301020           -0.448858   
66 -0.317072 -0.959508         -0.805169           -0.056616   

    Temperatura_cabeza_F  Salinidad_ppm   CO2_gas  bicarbonatos_ppm  \
14              1.125218      -0.243240  0.111647          0.027763   
72              0.620724       0.627290 -0.099685         -0.196150   
16             -1.901749       0.758498 -0.945015         -0.675964   
26              1.151770      -1.452310  1.485308          0.987390   
19              1.151770       1.401095 -0.945015         -0.484038   
69              0.912799       0.578927 -0.416684          0.091738   
6               1.151770       0.844923 -0.628016         -0.548013   
62              0.594171       1.178626  0.428646         -0.548013   
50             -1.503464      -1.645762  1.168309          2.138942   
67              0.806590      -1.452310  0.956977          1.339253   
15             -1.397254      -0.388329 -0.839348         -0.516026   
18             -1.237940      -1.321731  0.956977          1.339253   
13             -0.919312      -0.339966 -0.628016         -0.739939   
22              1.151770      -0.581780 -0.628016         -0.420063   
10              0.833142      -0.823594  2.541970          1.595153   
59              0.222438      -1.718306  2.013639          1.595153   
11              0.939352      -0.098152  2.013639          0.187701   
0               1.151770       1.671927 -0.416684         -0.611988   
5               0.753485       1.062555  2.013639         -0.675964   
42             -0.972417      -0.424601 -0.945015          1.243290   
3              -0.441370      -0.281931  0.428646         -0.675964   
40             -0.228951      -1.790850 -0.416684          2.202917   
12             -0.441370      -0.339966  0.111647         -0.164163   
54              0.620724       1.256007 -0.416684         -0.771926   
34             -0.866207       0.907794 -0.945015         -0.548013   
27              0.673828      -1.524855  2.541970          2.746706   
30             -0.706893      -0.581780 -1.156347         -0.739939   
21             -1.609673      -0.562435  2.013639          1.883041   
33             -0.972417       0.046937 -0.099685         -0.899876   
38              0.355200      -0.528581 -0.945015          0.795464   
52              1.072113      -0.098152 -0.099685          1.115340   
28             -1.503464      -1.355585 -0.628016         -0.803914   
35             -0.706893       1.014193 -0.628016         -0.995839   
41              1.151770       0.869104 -1.050681         -0.739939   
7               1.151770       0.724016 -0.205351         -0.388076   
48              0.089677      -0.339966 -0.628016          0.891427   
56              0.222438       0.385476  0.428646         -0.675964   
73              0.620724       0.878777 -0.733682         -0.228138   
20              1.151770      -1.645762  0.428646          0.571551   
65              0.089677       1.594546  0.005981         -0.739939   
39              0.089677      -1.031554 -0.945015         -0.036212   
2               0.408305       1.497821  0.428646         -0.995839   
55             -0.441370       1.110918 -0.628016         -0.739939   
49              0.275543       0.337113 -0.099685         -0.452051   
68              0.673828      -0.001426  0.956977         -0.580001   
36             -0.175847       0.806233 -0.839348         -0.611988   
25              0.089677      -0.654324 -0.099685         -1.059814   
46              0.965904      -1.500673 -0.522350          1.467203   
32              0.089677      -0.083643 -0.099685         -0.675964   
47             -0.706893       0.361295 -0.628016         -0.771926   
57             -2.565557       0.724016 -0.628016         -0.771926   
17             -2.353138       1.207644 -1.156347         -0.675964   
66             -0.706893       0.965830 -0.945015         -1.059814   

    dosis_IC_ppm    Fe_ppm  
14     -0.037253 -0.875585  
72      0.286417 -0.009203  
16     -0.684592  0.052362  
26      1.904766 -0.345850  
19     -0.684592  0.792816  
69     -0.037253 -0.613656  
6      -0.360922  0.744124  
62      0.610087  0.432943  
50     -0.684592 -1.699432  
67     -1.008262 -1.644864  
15      4.494125  0.835912  
18     -0.360922 -1.312135  
13      0.610087 -1.061399  
22     -1.008262  0.835912  
10     -0.684592 -1.150947  
59     -0.684592 -1.716223  
11     -0.684592 -0.384188  
0      -0.360922  0.606444  
5       0.156949  2.347044  
42     -0.360922 -1.011028  
3      -0.684592  1.183472  
40     -0.846427 -1.692157  
12      0.286417  0.600847  
54     -0.360922  0.606444  
34     -0.684592 -0.510115  
27      0.610087 -1.517817  
30     -0.037253 -0.862153  
21      1.904766 -1.145351  
33     -0.522757 -0.294639  
38     -0.360922  0.835912  
52     -1.493767 -1.637868  
28      1.257427 -0.868869  
35     -0.522757  0.509059  
41     -0.037253  0.309814  
7      -0.684592  0.807928  
48      0.610087  0.035571  
56      0.286417 -0.093155  
73     -0.684592  2.057130  
20     -0.037253  0.835912  
65     -0.037253  1.031799  
39      0.610087  0.640024  
2       0.933757  1.059783  
55     -0.360922  1.199703  
49      1.257427 -0.305833  
68      1.904766  0.136313  
36     -0.684592  0.125120  
25     -0.684592  0.548796  
46     -1.008262 -1.635069  
32      0.124582  0.384251  
47     -0.360922  0.584056  
57     -0.684592  0.556072  
17     -0.684592  0.676963  
66      1.257427  1.015009  
2022-09-12 15:21:48,706:INFO:get_config() succesfully completed......................................
2022-09-12 15:21:48,706:INFO:Initializing get_config()
2022-09-12 15:21:48,706:INFO:get_config(variable=y_train)
2022-09-12 15:21:48,709:INFO:Global variable: y_train returned as 14     1.34146
72    10.20184
16     0.24041
26    11.15037
19     2.71603
69     1.76688
6      2.25250
62     0.20165
50     2.72426
67     2.30117
15     1.61804
18     0.88574
13     2.80693
22     0.16025
10     2.78461
59     0.33370
11     2.00468
0      8.41626
5      0.48729
42     0.78899
3      1.50500
40     0.79389
12     0.58622
54     0.60004
34     1.02908
27     8.15268
30     0.81167
21     0.12755
33     2.33242
38     0.87631
52    23.08255
28     0.27399
35     0.97687
41     2.92591
7      0.12195
48     0.71377
56     2.50552
73     3.36175
20     2.67822
65     1.92347
39     1.91647
2      7.17844
55     0.40741
49     0.40471
68     0.21302
36     1.83186
25     1.00565
46     0.81710
32     0.67619
47     0.18788
57     0.79912
17     0.18527
66     0.14099
Name: mpy, dtype: float32
2022-09-12 15:21:48,710:INFO:get_config() succesfully completed......................................
2022-09-12 15:21:48,714:INFO:Initializing get_config()
2022-09-12 15:21:48,714:INFO:get_config(variable=X_test)
2022-09-12 15:21:48,735:INFO:Global variable: X_test returned as         BPPD      BAPD  Caudal_gas_MSCFD  Presion_cabeza_psi  \
53 -0.389840  0.296706         -0.372258           -1.233341   
64 -0.586969  1.048568         -0.769322            3.473560   
70  0.760682  1.772433         -0.588922            0.727868   
4   0.220756  2.115484         -0.605556            0.727868   
60  0.293590 -1.038299          2.039318           -1.429462   
23 -0.632727 -0.037733         -0.597239           -0.448858   
29 -0.202019 -0.203241          0.126359           -0.841100   
61 -0.354439  0.361996          1.024618            0.629807   
8  -0.216770  1.865262         -0.672094            0.237565   
74 -0.344736  1.070667         -0.583099            0.629807   
9  -0.619944  0.134289         -0.622190           -1.233341   
75  2.120330  1.594566         -0.661281            0.139505   
44  0.803950 -0.916520         -0.339405            4.650285   
24  3.148260  0.244717          1.656726           -1.233341   
76 -0.213820  0.830238         -0.630508            1.120109   
63 -0.474408  1.038130          0.625392           -0.644979   
71  1.471318  0.529249         -0.630508            1.022049   
43 -0.090245 -0.217413         -0.738631           -1.037220   
51  0.082727  2.234449          2.696378            0.629807   
1  -0.125318 -0.902078         -0.730314            0.335626   
37 -0.022590 -0.892231          1.074521           -0.056616   
45 -0.162194  0.054592          0.508951           -0.586142   
58 -0.231848  0.588090          0.849957           -0.644979   
31  5.041704 -0.774018          2.496765           -0.448858   

    Temperatura_cabeza_F  Salinidad_ppm   CO2_gas  bicarbonatos_ppm  \
53             -0.043085      -0.388329 -0.099685          0.347638   
64              0.886247      -1.694124  0.428646          2.202917   
70              1.151770       0.820741 -0.839348         -0.643976   
4              -0.706893       1.942758  0.956977         -0.100187   
60             -0.388265      -1.258859  0.111647         -0.963852   
23              0.886247      -0.001426  0.111647         -0.739939   
29              0.833142      -1.408784  0.217313          1.307265   
61              0.886247      -1.423293  1.273975          1.147327   
8               1.151770       1.086737 -0.416684         -0.388076   
74              0.886247       0.520892 -0.628016         -0.228138   
9               0.514514       0.820741 -0.416684         -0.675964   
75              0.886247       1.328551 -0.839348         -0.420063   
44             -0.786550       0.675653 -0.628016         -0.132175   
24              0.886247       1.159281 -0.628016         -1.027827   
76              0.541067       0.540237 -0.416684         -0.420063   
63              0.886247      -1.694124  0.111647          2.042979   
71              0.939352       0.627290 -0.628016         -0.580001   
43              0.886247       0.288751 -0.628016         -0.516026   
51              0.886247      -1.597399  0.639978          1.147327   
1              -1.237940       1.546183 -1.156347         -0.480839   
37              0.965904       1.231825 -0.839348          1.339253   
45             -0.016533      -1.249187  0.322980          0.283663   
58              0.036572      -1.602235  3.070301          1.435215   
31              0.089677       0.772379 -1.156347         -0.164163   

    dosis_IC_ppm    Fe_ppm  
53     -0.360922 -1.122963  
64     -1.008262 -1.760997  
70     -0.037253  0.085942  
4      -0.684592  1.104557  
60      1.257427  0.835912  
23     -0.360922 -0.580075  
29      1.904766 -1.671449  
61     -1.008262 -1.738610  
8      -0.684592  1.096722  
74      0.610087  0.326604  
9      -0.684592  0.947847  
75     -0.360922  0.774347  
44      2.875776 -0.899092  
24     -0.360922  0.483314  
76      0.610087 -0.171510  
63     -0.684592 -1.682642  
71     -0.360922  0.220265  
43     -0.522757 -0.255462  
51     -0.846427 -1.609884  
1      -0.360922  2.353200  
37     -0.360922  0.297501  
45     -1.008262 -1.609884  
58     -1.008262  0.835912  
31     -0.360922  0.333880  
2022-09-12 15:21:48,735:INFO:get_config() succesfully completed......................................
2022-09-12 15:21:48,735:INFO:Initializing get_config()
2022-09-12 15:21:48,735:INFO:get_config(variable=y_test)
2022-09-12 15:21:48,735:INFO:Global variable: y_test returned as 53     0.80521
64     1.69926
70     2.71055
4      0.71894
60     2.31148
23     0.29920
29     2.93174
61     0.74967
8      4.92600
74     0.76563
9      1.61922
75     3.65412
44     2.39477
24     2.86979
76    10.41508
63    12.22338
71     0.51089
43     2.36558
51     2.95179
1      0.10024
37     0.93964
45     1.76552
58     3.46174
31     2.45052
Name: mpy, dtype: float32
2022-09-12 15:21:48,735:INFO:get_config() succesfully completed......................................
2022-09-12 15:22:04,074:INFO:Initializing predict_model()
2022-09-12 15:22:04,074:INFO:predict_model(estimator=HuberRegressor(alpha=0.5, epsilon=1.4, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-09-12 15:22:04,074:INFO:Checking exceptions
2022-09-12 15:22:04,075:INFO:Preloading libraries
2022-09-12 15:22:04,075:INFO:Preparing display monitor
2022-09-12 15:22:14,343:INFO:Initializing predict_model()
2022-09-12 15:22:14,343:INFO:predict_model(estimator=HuberRegressor(alpha=0.5, epsilon=1.4, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-09-12 15:22:14,344:INFO:Checking exceptions
2022-09-12 15:22:14,344:INFO:Preloading libraries
2022-09-12 15:22:14,344:INFO:Preparing display monitor
2022-09-12 15:27:23,620:INFO:PyCaret Supervised Module
2022-09-12 15:27:23,621:INFO:ML Usecase: regression
2022-09-12 15:27:23,621:INFO:version 2.3.10
2022-09-12 15:27:23,621:INFO:Initializing setup()
2022-09-12 15:27:23,621:INFO:setup(target=mpy, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=['dosis_IC_ppm', 'CO2_gas'], numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-09-12 15:27:23,621:INFO:Checking environment
2022-09-12 15:27:23,621:INFO:python_version: 3.8.12
2022-09-12 15:27:23,621:INFO:python_build: ('default', 'Oct 12 2021 03:01:40')
2022-09-12 15:27:23,621:INFO:machine: AMD64
2022-09-12 15:27:23,622:INFO:platform: Windows-10-10.0.22000-SP0
2022-09-12 15:27:23,625:WARNING:cannot find psutil installation. memory not traceable. Install psutil using pip to enable memory logging.
2022-09-12 15:27:23,625:INFO:Checking libraries
2022-09-12 15:27:23,625:INFO:pd==1.4.2
2022-09-12 15:27:23,626:INFO:numpy==1.22.4
2022-09-12 15:27:23,626:INFO:sklearn==0.23.2
2022-09-12 15:27:23,627:INFO:lightgbm==3.3.1
2022-09-12 15:27:23,633:WARNING:catboost not found
2022-09-12 15:27:23,633:INFO:xgboost==1.6.1
2022-09-12 15:27:23,633:INFO:mlflow==1.21.0
2022-09-12 15:27:23,633:INFO:Checking Exceptions
2022-09-12 15:27:23,633:INFO:Declaring global variables
2022-09-12 15:27:23,634:INFO:USI: 7aee
2022-09-12 15:27:23,635:INFO:pycaret_globals: {'dashboard_logger', 'display_container', 'fold_groups_param_full', '_all_metrics', 'gpu_param', '_all_models', 'seed', 'USI', 'logging_param', 'experiment__', 'y_train', 'iterative_imputation_iters_param', 'X', 'fold_generator', 'y_test', '_available_plots', 'target_param', 'n_jobs_param', 'prep_pipe', 'transform_target_method_param', '_internal_pipeline', 'pycaret_globals', 'X_test', 'fix_imbalance_param', 'master_model_container', 'stratify_param', '_all_models_internal', 'X_train', 'data_before_preprocess', 'log_plots_param', 'html_param', 'fix_imbalance_method_param', 'y', 'transform_target_param', 'create_model_container', 'exp_name_log', 'fold_groups_param', 'fold_param', '_gpu_n_jobs_param', 'imputation_classifier', '_ml_usecase', 'imputation_regressor', 'fold_shuffle_param'}
2022-09-12 15:27:23,635:INFO:Preparing display monitor
2022-09-12 15:27:23,635:INFO:Preparing display monitor
2022-09-12 15:27:23,667:INFO:Importing libraries
2022-09-12 15:27:23,667:INFO:Copying data for preprocessing
2022-09-12 15:27:23,680:INFO:Declaring preprocessing parameters
2022-09-12 15:27:23,684:INFO:Creating preprocessing pipeline
2022-09-12 15:27:23,696:INFO:Preprocessing pipeline created successfully
2022-09-12 15:27:23,697:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-09-12 15:27:23,697:INFO:Creating global containers
2022-09-12 15:27:23,698:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-09-12 15:27:26,142:WARNING:Couldn't import catboost.CatBoostRegressor
2022-09-12 15:27:26,296:WARNING:Couldn't import catboost.CatBoostRegressor
2022-09-12 15:27:26,297:INFO:Creating grid variables
2022-09-12 15:27:26,310:INFO:create_model_container: 0
2022-09-12 15:27:26,310:INFO:master_model_container: 0
2022-09-12 15:27:26,310:INFO:display_container: 1
2022-09-12 15:27:26,317:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=['dosis_IC_ppm',
                                                          'CO2_gas'],
                                      target='mpy', time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=N...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='mpy')),
                ('fix_perfect', Remove_100(target='mpy')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-09-12 15:27:26,317:INFO:setup() succesfully completed......................................
2022-09-12 15:27:26,605:INFO:Initializing compare_models()
2022-09-12 15:27:26,605:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2022-09-12 15:27:26,606:INFO:Checking exceptions
2022-09-12 15:27:26,607:INFO:Preparing display monitor
2022-09-12 15:27:26,607:INFO:Preparing display monitor
2022-09-12 15:27:26,662:INFO:Initializing Linear Regression
2022-09-12 15:27:26,663:INFO:Total runtime is 1.6629695892333984e-05 minutes
2022-09-12 15:27:26,681:INFO:SubProcess create_model() called ==================================
2022-09-12 15:27:26,682:INFO:Initializing create_model()
2022-09-12 15:27:26,682:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8FEE0>, return_train_score=False, kwargs={})
2022-09-12 15:27:26,683:INFO:Checking exceptions
2022-09-12 15:27:26,683:INFO:Importing libraries
2022-09-12 15:27:26,683:INFO:Copying training dataset
2022-09-12 15:27:26,684:INFO:Defining folds
2022-09-12 15:27:26,685:INFO:Declaring metric variables
2022-09-12 15:27:26,700:INFO:Importing untrained model
2022-09-12 15:27:26,715:INFO:Linear Regression Imported succesfully
2022-09-12 15:27:26,744:INFO:Starting cross validation
2022-09-12 15:27:26,745:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:27:35,999:INFO:Calculating mean and std
2022-09-12 15:27:36,002:INFO:Creating metrics dataframe
2022-09-12 15:27:36,068:INFO:Uploading results into container
2022-09-12 15:27:36,068:INFO:Uploading model into container now
2022-09-12 15:27:36,069:INFO:create_model_container: 1
2022-09-12 15:27:36,069:INFO:master_model_container: 1
2022-09-12 15:27:36,069:INFO:display_container: 2
2022-09-12 15:27:36,070:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2022-09-12 15:27:36,070:INFO:create_model() succesfully completed......................................
2022-09-12 15:27:36,347:INFO:SubProcess create_model() end ==================================
2022-09-12 15:27:36,347:INFO:Creating metrics dataframe
2022-09-12 15:27:36,449:INFO:Initializing Lasso Regression
2022-09-12 15:27:36,449:INFO:Total runtime is 0.16312532822291057 minutes
2022-09-12 15:27:36,482:INFO:SubProcess create_model() called ==================================
2022-09-12 15:27:36,486:INFO:Initializing create_model()
2022-09-12 15:27:36,486:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8FEE0>, return_train_score=False, kwargs={})
2022-09-12 15:27:36,486:INFO:Checking exceptions
2022-09-12 15:27:36,486:INFO:Importing libraries
2022-09-12 15:27:36,486:INFO:Copying training dataset
2022-09-12 15:27:36,486:INFO:Defining folds
2022-09-12 15:27:36,486:INFO:Declaring metric variables
2022-09-12 15:27:36,516:INFO:Importing untrained model
2022-09-12 15:27:36,539:INFO:Lasso Regression Imported succesfully
2022-09-12 15:27:36,587:INFO:Starting cross validation
2022-09-12 15:27:36,587:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:27:36,781:INFO:Calculating mean and std
2022-09-12 15:27:36,782:INFO:Creating metrics dataframe
2022-09-12 15:27:36,864:INFO:Uploading results into container
2022-09-12 15:27:36,864:INFO:Uploading model into container now
2022-09-12 15:27:36,864:INFO:create_model_container: 2
2022-09-12 15:27:36,864:INFO:master_model_container: 2
2022-09-12 15:27:36,864:INFO:display_container: 2
2022-09-12 15:27:36,864:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=123,
      selection='cyclic', tol=0.0001, warm_start=False)
2022-09-12 15:27:36,864:INFO:create_model() succesfully completed......................................
2022-09-12 15:27:37,178:INFO:SubProcess create_model() end ==================================
2022-09-12 15:27:37,179:INFO:Creating metrics dataframe
2022-09-12 15:27:37,296:INFO:Initializing Ridge Regression
2022-09-12 15:27:37,297:INFO:Total runtime is 0.17725785970687866 minutes
2022-09-12 15:27:37,320:INFO:SubProcess create_model() called ==================================
2022-09-12 15:27:37,321:INFO:Initializing create_model()
2022-09-12 15:27:37,321:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8FEE0>, return_train_score=False, kwargs={})
2022-09-12 15:27:37,321:INFO:Checking exceptions
2022-09-12 15:27:37,321:INFO:Importing libraries
2022-09-12 15:27:37,322:INFO:Copying training dataset
2022-09-12 15:27:37,323:INFO:Defining folds
2022-09-12 15:27:37,324:INFO:Declaring metric variables
2022-09-12 15:27:37,349:INFO:Importing untrained model
2022-09-12 15:27:37,381:INFO:Ridge Regression Imported succesfully
2022-09-12 15:27:37,443:INFO:Starting cross validation
2022-09-12 15:27:37,444:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:27:37,688:INFO:Calculating mean and std
2022-09-12 15:27:37,689:INFO:Creating metrics dataframe
2022-09-12 15:27:37,780:INFO:Uploading results into container
2022-09-12 15:27:37,780:INFO:Uploading model into container now
2022-09-12 15:27:37,780:INFO:create_model_container: 3
2022-09-12 15:27:37,782:INFO:master_model_container: 3
2022-09-12 15:27:37,782:INFO:display_container: 2
2022-09-12 15:27:37,783:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=123, solver='auto', tol=0.001)
2022-09-12 15:27:37,783:INFO:create_model() succesfully completed......................................
2022-09-12 15:27:38,123:INFO:SubProcess create_model() end ==================================
2022-09-12 15:27:38,123:INFO:Creating metrics dataframe
2022-09-12 15:27:38,198:INFO:Initializing Elastic Net
2022-09-12 15:27:38,199:INFO:Total runtime is 0.19229818979899088 minutes
2022-09-12 15:27:38,215:INFO:SubProcess create_model() called ==================================
2022-09-12 15:27:38,217:INFO:Initializing create_model()
2022-09-12 15:27:38,217:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8FEE0>, return_train_score=False, kwargs={})
2022-09-12 15:27:38,217:INFO:Checking exceptions
2022-09-12 15:27:38,218:INFO:Importing libraries
2022-09-12 15:27:38,218:INFO:Copying training dataset
2022-09-12 15:27:38,220:INFO:Defining folds
2022-09-12 15:27:38,221:INFO:Declaring metric variables
2022-09-12 15:27:38,238:INFO:Importing untrained model
2022-09-12 15:27:38,258:INFO:Elastic Net Imported succesfully
2022-09-12 15:27:38,297:INFO:Starting cross validation
2022-09-12 15:27:38,297:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:27:38,477:INFO:Calculating mean and std
2022-09-12 15:27:38,479:INFO:Creating metrics dataframe
2022-09-12 15:27:38,550:INFO:Uploading results into container
2022-09-12 15:27:38,551:INFO:Uploading model into container now
2022-09-12 15:27:38,551:INFO:create_model_container: 4
2022-09-12 15:27:38,551:INFO:master_model_container: 4
2022-09-12 15:27:38,551:INFO:display_container: 2
2022-09-12 15:27:38,552:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=123, selection='cyclic', tol=0.0001, warm_start=False)
2022-09-12 15:27:38,552:INFO:create_model() succesfully completed......................................
2022-09-12 15:27:38,830:INFO:SubProcess create_model() end ==================================
2022-09-12 15:27:38,830:INFO:Creating metrics dataframe
2022-09-12 15:27:38,896:INFO:Initializing Least Angle Regression
2022-09-12 15:27:38,897:INFO:Total runtime is 0.2039204200108846 minutes
2022-09-12 15:27:38,910:INFO:SubProcess create_model() called ==================================
2022-09-12 15:27:38,910:INFO:Initializing create_model()
2022-09-12 15:27:38,910:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8FEE0>, return_train_score=False, kwargs={})
2022-09-12 15:27:38,910:INFO:Checking exceptions
2022-09-12 15:27:38,910:INFO:Importing libraries
2022-09-12 15:27:38,914:INFO:Copying training dataset
2022-09-12 15:27:38,915:INFO:Defining folds
2022-09-12 15:27:38,915:INFO:Declaring metric variables
2022-09-12 15:27:38,937:INFO:Importing untrained model
2022-09-12 15:27:38,957:INFO:Least Angle Regression Imported succesfully
2022-09-12 15:27:38,993:INFO:Starting cross validation
2022-09-12 15:27:38,994:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:27:39,226:INFO:Calculating mean and std
2022-09-12 15:27:39,229:INFO:Creating metrics dataframe
2022-09-12 15:27:39,291:INFO:Uploading results into container
2022-09-12 15:27:39,292:INFO:Uploading model into container now
2022-09-12 15:27:39,292:INFO:create_model_container: 5
2022-09-12 15:27:39,292:INFO:master_model_container: 5
2022-09-12 15:27:39,292:INFO:display_container: 2
2022-09-12 15:27:39,293:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize=True, precompute='auto',
     random_state=123, verbose=False)
2022-09-12 15:27:39,293:INFO:create_model() succesfully completed......................................
2022-09-12 15:27:39,497:INFO:SubProcess create_model() end ==================================
2022-09-12 15:27:39,497:INFO:Creating metrics dataframe
2022-09-12 15:27:39,571:INFO:Initializing Lasso Least Angle Regression
2022-09-12 15:27:39,571:INFO:Total runtime is 0.21516155004501342 minutes
2022-09-12 15:27:39,595:INFO:SubProcess create_model() called ==================================
2022-09-12 15:27:39,595:INFO:Initializing create_model()
2022-09-12 15:27:39,595:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8FEE0>, return_train_score=False, kwargs={})
2022-09-12 15:27:39,595:INFO:Checking exceptions
2022-09-12 15:27:39,595:INFO:Importing libraries
2022-09-12 15:27:39,595:INFO:Copying training dataset
2022-09-12 15:27:39,595:INFO:Defining folds
2022-09-12 15:27:39,595:INFO:Declaring metric variables
2022-09-12 15:27:39,623:INFO:Importing untrained model
2022-09-12 15:27:39,646:INFO:Lasso Least Angle Regression Imported succesfully
2022-09-12 15:27:39,702:INFO:Starting cross validation
2022-09-12 15:27:39,704:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:27:39,873:INFO:Calculating mean and std
2022-09-12 15:27:39,873:INFO:Creating metrics dataframe
2022-09-12 15:27:39,951:INFO:Uploading results into container
2022-09-12 15:27:39,951:INFO:Uploading model into container now
2022-09-12 15:27:39,951:INFO:create_model_container: 6
2022-09-12 15:27:39,951:INFO:master_model_container: 6
2022-09-12 15:27:39,951:INFO:display_container: 2
2022-09-12 15:27:39,951:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize=True,
          positive=False, precompute='auto', random_state=123, verbose=False)
2022-09-12 15:27:39,951:INFO:create_model() succesfully completed......................................
2022-09-12 15:27:40,186:INFO:SubProcess create_model() end ==================================
2022-09-12 15:27:40,186:INFO:Creating metrics dataframe
2022-09-12 15:27:40,243:INFO:Initializing Orthogonal Matching Pursuit
2022-09-12 15:27:40,243:INFO:Total runtime is 0.22635039885838826 minutes
2022-09-12 15:27:40,275:INFO:SubProcess create_model() called ==================================
2022-09-12 15:27:40,276:INFO:Initializing create_model()
2022-09-12 15:27:40,277:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8FEE0>, return_train_score=False, kwargs={})
2022-09-12 15:27:40,277:INFO:Checking exceptions
2022-09-12 15:27:40,277:INFO:Importing libraries
2022-09-12 15:27:40,277:INFO:Copying training dataset
2022-09-12 15:27:40,277:INFO:Defining folds
2022-09-12 15:27:40,277:INFO:Declaring metric variables
2022-09-12 15:27:40,305:INFO:Importing untrained model
2022-09-12 15:27:40,327:INFO:Orthogonal Matching Pursuit Imported succesfully
2022-09-12 15:27:40,357:INFO:Starting cross validation
2022-09-12 15:27:40,358:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:27:40,548:INFO:Calculating mean and std
2022-09-12 15:27:40,548:INFO:Creating metrics dataframe
2022-09-12 15:27:40,648:INFO:Uploading results into container
2022-09-12 15:27:40,648:INFO:Uploading model into container now
2022-09-12 15:27:40,649:INFO:create_model_container: 7
2022-09-12 15:27:40,649:INFO:master_model_container: 7
2022-09-12 15:27:40,649:INFO:display_container: 2
2022-09-12 15:27:40,649:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None)
2022-09-12 15:27:40,649:INFO:create_model() succesfully completed......................................
2022-09-12 15:27:40,883:INFO:SubProcess create_model() end ==================================
2022-09-12 15:27:40,884:INFO:Creating metrics dataframe
2022-09-12 15:27:40,946:INFO:Initializing Bayesian Ridge
2022-09-12 15:27:40,947:INFO:Total runtime is 0.23809801737467448 minutes
2022-09-12 15:27:40,970:INFO:SubProcess create_model() called ==================================
2022-09-12 15:27:40,971:INFO:Initializing create_model()
2022-09-12 15:27:40,972:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8FEE0>, return_train_score=False, kwargs={})
2022-09-12 15:27:40,972:INFO:Checking exceptions
2022-09-12 15:27:40,973:INFO:Importing libraries
2022-09-12 15:27:40,973:INFO:Copying training dataset
2022-09-12 15:27:40,975:INFO:Defining folds
2022-09-12 15:27:40,975:INFO:Declaring metric variables
2022-09-12 15:27:40,995:INFO:Importing untrained model
2022-09-12 15:27:41,017:INFO:Bayesian Ridge Imported succesfully
2022-09-12 15:27:41,055:INFO:Starting cross validation
2022-09-12 15:27:41,056:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:27:41,187:INFO:Calculating mean and std
2022-09-12 15:27:41,188:INFO:Creating metrics dataframe
2022-09-12 15:27:41,242:INFO:Uploading results into container
2022-09-12 15:27:41,242:INFO:Uploading model into container now
2022-09-12 15:27:41,242:INFO:create_model_container: 8
2022-09-12 15:27:41,243:INFO:master_model_container: 8
2022-09-12 15:27:41,243:INFO:display_container: 2
2022-09-12 15:27:41,243:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False)
2022-09-12 15:27:41,245:INFO:create_model() succesfully completed......................................
2022-09-12 15:27:41,472:INFO:SubProcess create_model() end ==================================
2022-09-12 15:27:41,472:INFO:Creating metrics dataframe
2022-09-12 15:27:41,521:INFO:Initializing Passive Aggressive Regressor
2022-09-12 15:27:41,521:INFO:Total runtime is 0.2476651708285014 minutes
2022-09-12 15:27:41,536:INFO:SubProcess create_model() called ==================================
2022-09-12 15:27:41,537:INFO:Initializing create_model()
2022-09-12 15:27:41,537:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8FEE0>, return_train_score=False, kwargs={})
2022-09-12 15:27:41,537:INFO:Checking exceptions
2022-09-12 15:27:41,538:INFO:Importing libraries
2022-09-12 15:27:41,538:INFO:Copying training dataset
2022-09-12 15:27:41,538:INFO:Defining folds
2022-09-12 15:27:41,538:INFO:Declaring metric variables
2022-09-12 15:27:41,553:INFO:Importing untrained model
2022-09-12 15:27:41,574:INFO:Passive Aggressive Regressor Imported succesfully
2022-09-12 15:27:41,611:INFO:Starting cross validation
2022-09-12 15:27:41,613:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:27:41,794:INFO:Calculating mean and std
2022-09-12 15:27:41,796:INFO:Creating metrics dataframe
2022-09-12 15:27:41,865:INFO:Uploading results into container
2022-09-12 15:27:41,865:INFO:Uploading model into container now
2022-09-12 15:27:41,865:INFO:create_model_container: 9
2022-09-12 15:27:41,867:INFO:master_model_container: 9
2022-09-12 15:27:41,867:INFO:display_container: 2
2022-09-12 15:27:41,868:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=123, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-09-12 15:27:41,868:INFO:create_model() succesfully completed......................................
2022-09-12 15:27:42,068:INFO:SubProcess create_model() end ==================================
2022-09-12 15:27:42,068:INFO:Creating metrics dataframe
2022-09-12 15:27:42,104:INFO:Initializing Huber Regressor
2022-09-12 15:27:42,104:INFO:Total runtime is 0.25737144549687707 minutes
2022-09-12 15:27:42,132:INFO:SubProcess create_model() called ==================================
2022-09-12 15:27:42,132:INFO:Initializing create_model()
2022-09-12 15:27:42,132:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8FEE0>, return_train_score=False, kwargs={})
2022-09-12 15:27:42,132:INFO:Checking exceptions
2022-09-12 15:27:42,132:INFO:Importing libraries
2022-09-12 15:27:42,132:INFO:Copying training dataset
2022-09-12 15:27:42,141:INFO:Defining folds
2022-09-12 15:27:42,141:INFO:Declaring metric variables
2022-09-12 15:27:42,147:INFO:Importing untrained model
2022-09-12 15:27:42,165:INFO:Huber Regressor Imported succesfully
2022-09-12 15:27:42,209:INFO:Starting cross validation
2022-09-12 15:27:42,212:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:27:42,424:INFO:Calculating mean and std
2022-09-12 15:27:42,424:INFO:Creating metrics dataframe
2022-09-12 15:27:42,475:INFO:Uploading results into container
2022-09-12 15:27:42,475:INFO:Uploading model into container now
2022-09-12 15:27:42,475:INFO:create_model_container: 10
2022-09-12 15:27:42,475:INFO:master_model_container: 10
2022-09-12 15:27:42,475:INFO:display_container: 2
2022-09-12 15:27:42,475:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-12 15:27:42,475:INFO:create_model() succesfully completed......................................
2022-09-12 15:27:42,673:INFO:SubProcess create_model() end ==================================
2022-09-12 15:27:42,673:INFO:Creating metrics dataframe
2022-09-12 15:27:42,736:INFO:Initializing K Neighbors Regressor
2022-09-12 15:27:42,736:INFO:Total runtime is 0.2679078578948975 minutes
2022-09-12 15:27:42,763:INFO:SubProcess create_model() called ==================================
2022-09-12 15:27:42,764:INFO:Initializing create_model()
2022-09-12 15:27:42,764:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8FEE0>, return_train_score=False, kwargs={})
2022-09-12 15:27:42,765:INFO:Checking exceptions
2022-09-12 15:27:42,765:INFO:Importing libraries
2022-09-12 15:27:42,765:INFO:Copying training dataset
2022-09-12 15:27:42,767:INFO:Defining folds
2022-09-12 15:27:42,767:INFO:Declaring metric variables
2022-09-12 15:27:42,789:INFO:Importing untrained model
2022-09-12 15:27:42,815:INFO:K Neighbors Regressor Imported succesfully
2022-09-12 15:27:42,873:INFO:Starting cross validation
2022-09-12 15:27:42,877:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:27:43,125:INFO:Calculating mean and std
2022-09-12 15:27:43,126:INFO:Creating metrics dataframe
2022-09-12 15:27:43,197:INFO:Uploading results into container
2022-09-12 15:27:43,197:INFO:Uploading model into container now
2022-09-12 15:27:43,197:INFO:create_model_container: 11
2022-09-12 15:27:43,198:INFO:master_model_container: 11
2022-09-12 15:27:43,198:INFO:display_container: 2
2022-09-12 15:27:43,199:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2022-09-12 15:27:43,199:INFO:create_model() succesfully completed......................................
2022-09-12 15:27:43,417:INFO:SubProcess create_model() end ==================================
2022-09-12 15:27:43,417:INFO:Creating metrics dataframe
2022-09-12 15:27:43,460:INFO:Initializing Decision Tree Regressor
2022-09-12 15:27:43,460:INFO:Total runtime is 0.27998193502426155 minutes
2022-09-12 15:27:43,474:INFO:SubProcess create_model() called ==================================
2022-09-12 15:27:43,474:INFO:Initializing create_model()
2022-09-12 15:27:43,474:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8FEE0>, return_train_score=False, kwargs={})
2022-09-12 15:27:43,475:INFO:Checking exceptions
2022-09-12 15:27:43,475:INFO:Importing libraries
2022-09-12 15:27:43,476:INFO:Copying training dataset
2022-09-12 15:27:43,477:INFO:Defining folds
2022-09-12 15:27:43,478:INFO:Declaring metric variables
2022-09-12 15:27:43,489:INFO:Importing untrained model
2022-09-12 15:27:43,508:INFO:Decision Tree Regressor Imported succesfully
2022-09-12 15:27:43,531:INFO:Starting cross validation
2022-09-12 15:27:43,537:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:27:43,654:INFO:Calculating mean and std
2022-09-12 15:27:43,655:INFO:Creating metrics dataframe
2022-09-12 15:27:43,698:INFO:Uploading results into container
2022-09-12 15:27:43,698:INFO:Uploading model into container now
2022-09-12 15:27:43,698:INFO:create_model_container: 12
2022-09-12 15:27:43,698:INFO:master_model_container: 12
2022-09-12 15:27:43,699:INFO:display_container: 2
2022-09-12 15:27:43,699:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=123, splitter='best')
2022-09-12 15:27:43,699:INFO:create_model() succesfully completed......................................
2022-09-12 15:27:43,907:INFO:SubProcess create_model() end ==================================
2022-09-12 15:27:43,907:INFO:Creating metrics dataframe
2022-09-12 15:27:43,962:INFO:Initializing Random Forest Regressor
2022-09-12 15:27:43,962:INFO:Total runtime is 0.2883325139681499 minutes
2022-09-12 15:27:43,980:INFO:SubProcess create_model() called ==================================
2022-09-12 15:27:43,982:INFO:Initializing create_model()
2022-09-12 15:27:43,982:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8FEE0>, return_train_score=False, kwargs={})
2022-09-12 15:27:43,982:INFO:Checking exceptions
2022-09-12 15:27:43,982:INFO:Importing libraries
2022-09-12 15:27:43,983:INFO:Copying training dataset
2022-09-12 15:27:43,984:INFO:Defining folds
2022-09-12 15:27:43,985:INFO:Declaring metric variables
2022-09-12 15:27:44,005:INFO:Importing untrained model
2022-09-12 15:27:44,026:INFO:Random Forest Regressor Imported succesfully
2022-09-12 15:27:44,066:INFO:Starting cross validation
2022-09-12 15:27:44,067:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:27:45,199:INFO:Calculating mean and std
2022-09-12 15:27:45,201:INFO:Creating metrics dataframe
2022-09-12 15:27:45,246:INFO:Uploading results into container
2022-09-12 15:27:45,247:INFO:Uploading model into container now
2022-09-12 15:27:45,247:INFO:create_model_container: 13
2022-09-12 15:27:45,247:INFO:master_model_container: 13
2022-09-12 15:27:45,247:INFO:display_container: 2
2022-09-12 15:27:45,248:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=123, verbose=0, warm_start=False)
2022-09-12 15:27:45,248:INFO:create_model() succesfully completed......................................
2022-09-12 15:27:45,449:INFO:SubProcess create_model() end ==================================
2022-09-12 15:27:45,449:INFO:Creating metrics dataframe
2022-09-12 15:27:45,504:INFO:Initializing Extra Trees Regressor
2022-09-12 15:27:45,505:INFO:Total runtime is 0.314055093129476 minutes
2022-09-12 15:27:45,526:INFO:SubProcess create_model() called ==================================
2022-09-12 15:27:45,527:INFO:Initializing create_model()
2022-09-12 15:27:45,528:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8FEE0>, return_train_score=False, kwargs={})
2022-09-12 15:27:45,528:INFO:Checking exceptions
2022-09-12 15:27:45,528:INFO:Importing libraries
2022-09-12 15:27:45,528:INFO:Copying training dataset
2022-09-12 15:27:45,531:INFO:Defining folds
2022-09-12 15:27:45,531:INFO:Declaring metric variables
2022-09-12 15:27:45,566:INFO:Importing untrained model
2022-09-12 15:27:45,589:INFO:Extra Trees Regressor Imported succesfully
2022-09-12 15:27:45,637:INFO:Starting cross validation
2022-09-12 15:27:45,638:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:27:46,657:INFO:Calculating mean and std
2022-09-12 15:27:46,658:INFO:Creating metrics dataframe
2022-09-12 15:27:46,707:INFO:Uploading results into container
2022-09-12 15:27:46,707:INFO:Uploading model into container now
2022-09-12 15:27:46,707:INFO:create_model_container: 14
2022-09-12 15:27:46,707:INFO:master_model_container: 14
2022-09-12 15:27:46,708:INFO:display_container: 2
2022-09-12 15:27:46,708:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=123, verbose=0, warm_start=False)
2022-09-12 15:27:46,709:INFO:create_model() succesfully completed......................................
2022-09-12 15:27:46,971:INFO:SubProcess create_model() end ==================================
2022-09-12 15:27:46,971:INFO:Creating metrics dataframe
2022-09-12 15:27:47,041:INFO:Initializing AdaBoost Regressor
2022-09-12 15:27:47,041:INFO:Total runtime is 0.3396554152170818 minutes
2022-09-12 15:27:47,057:INFO:SubProcess create_model() called ==================================
2022-09-12 15:27:47,059:INFO:Initializing create_model()
2022-09-12 15:27:47,060:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8FEE0>, return_train_score=False, kwargs={})
2022-09-12 15:27:47,060:INFO:Checking exceptions
2022-09-12 15:27:47,060:INFO:Importing libraries
2022-09-12 15:27:47,060:INFO:Copying training dataset
2022-09-12 15:27:47,060:INFO:Defining folds
2022-09-12 15:27:47,060:INFO:Declaring metric variables
2022-09-12 15:27:47,073:INFO:Importing untrained model
2022-09-12 15:27:47,092:INFO:AdaBoost Regressor Imported succesfully
2022-09-12 15:27:47,126:INFO:Starting cross validation
2022-09-12 15:27:47,130:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:27:47,617:INFO:Calculating mean and std
2022-09-12 15:27:47,619:INFO:Creating metrics dataframe
2022-09-12 15:27:47,680:INFO:Uploading results into container
2022-09-12 15:27:47,680:INFO:Uploading model into container now
2022-09-12 15:27:47,680:INFO:create_model_container: 15
2022-09-12 15:27:47,681:INFO:master_model_container: 15
2022-09-12 15:27:47,681:INFO:display_container: 2
2022-09-12 15:27:47,681:INFO:AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=123)
2022-09-12 15:27:47,682:INFO:create_model() succesfully completed......................................
2022-09-12 15:27:47,885:INFO:SubProcess create_model() end ==================================
2022-09-12 15:27:47,885:INFO:Creating metrics dataframe
2022-09-12 15:27:47,977:INFO:Initializing Gradient Boosting Regressor
2022-09-12 15:27:47,977:INFO:Total runtime is 0.35525752703348806 minutes
2022-09-12 15:27:48,006:INFO:SubProcess create_model() called ==================================
2022-09-12 15:27:48,008:INFO:Initializing create_model()
2022-09-12 15:27:48,008:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8FEE0>, return_train_score=False, kwargs={})
2022-09-12 15:27:48,009:INFO:Checking exceptions
2022-09-12 15:27:48,009:INFO:Importing libraries
2022-09-12 15:27:48,009:INFO:Copying training dataset
2022-09-12 15:27:48,011:INFO:Defining folds
2022-09-12 15:27:48,012:INFO:Declaring metric variables
2022-09-12 15:27:48,038:INFO:Importing untrained model
2022-09-12 15:27:48,057:INFO:Gradient Boosting Regressor Imported succesfully
2022-09-12 15:27:48,084:INFO:Starting cross validation
2022-09-12 15:27:48,084:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:27:48,309:INFO:Calculating mean and std
2022-09-12 15:27:48,309:INFO:Creating metrics dataframe
2022-09-12 15:27:48,352:INFO:Uploading results into container
2022-09-12 15:27:48,353:INFO:Uploading model into container now
2022-09-12 15:27:48,353:INFO:create_model_container: 16
2022-09-12 15:27:48,353:INFO:master_model_container: 16
2022-09-12 15:27:48,353:INFO:display_container: 2
2022-09-12 15:27:48,354:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=123, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2022-09-12 15:27:48,354:INFO:create_model() succesfully completed......................................
2022-09-12 15:27:48,564:INFO:SubProcess create_model() end ==================================
2022-09-12 15:27:48,564:INFO:Creating metrics dataframe
2022-09-12 15:27:48,620:INFO:Initializing Extreme Gradient Boosting
2022-09-12 15:27:48,620:INFO:Total runtime is 0.36596741278966277 minutes
2022-09-12 15:27:48,637:INFO:SubProcess create_model() called ==================================
2022-09-12 15:27:48,638:INFO:Initializing create_model()
2022-09-12 15:27:48,639:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8FEE0>, return_train_score=False, kwargs={})
2022-09-12 15:27:48,639:INFO:Checking exceptions
2022-09-12 15:27:48,639:INFO:Importing libraries
2022-09-12 15:27:48,641:INFO:Copying training dataset
2022-09-12 15:27:48,642:INFO:Defining folds
2022-09-12 15:27:48,643:INFO:Declaring metric variables
2022-09-12 15:27:48,658:INFO:Importing untrained model
2022-09-12 15:27:48,677:INFO:Extreme Gradient Boosting Imported succesfully
2022-09-12 15:27:48,716:INFO:Starting cross validation
2022-09-12 15:27:48,717:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:27:49,568:INFO:Calculating mean and std
2022-09-12 15:27:49,569:INFO:Creating metrics dataframe
2022-09-12 15:27:49,618:INFO:Uploading results into container
2022-09-12 15:27:49,619:INFO:Uploading model into container now
2022-09-12 15:27:49,619:INFO:create_model_container: 17
2022-09-12 15:27:49,619:INFO:master_model_container: 17
2022-09-12 15:27:49,619:INFO:display_container: 2
2022-09-12 15:27:49,621:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror',
             predictor=None, random_state=123, reg_alpha=None, ...)
2022-09-12 15:27:49,621:INFO:create_model() succesfully completed......................................
2022-09-12 15:27:49,818:INFO:SubProcess create_model() end ==================================
2022-09-12 15:27:49,818:INFO:Creating metrics dataframe
2022-09-12 15:27:49,871:INFO:Initializing Light Gradient Boosting Machine
2022-09-12 15:27:49,871:INFO:Total runtime is 0.38681657314300544 minutes
2022-09-12 15:27:49,885:INFO:SubProcess create_model() called ==================================
2022-09-12 15:27:49,887:INFO:Initializing create_model()
2022-09-12 15:27:49,887:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8FEE0>, return_train_score=False, kwargs={})
2022-09-12 15:27:49,887:INFO:Checking exceptions
2022-09-12 15:27:49,888:INFO:Importing libraries
2022-09-12 15:27:49,888:INFO:Copying training dataset
2022-09-12 15:27:49,889:INFO:Defining folds
2022-09-12 15:27:49,889:INFO:Declaring metric variables
2022-09-12 15:27:49,901:INFO:Importing untrained model
2022-09-12 15:27:49,918:INFO:Light Gradient Boosting Machine Imported succesfully
2022-09-12 15:27:49,952:INFO:Starting cross validation
2022-09-12 15:27:49,954:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:27:50,209:INFO:Calculating mean and std
2022-09-12 15:27:50,211:INFO:Creating metrics dataframe
2022-09-12 15:27:50,262:INFO:Uploading results into container
2022-09-12 15:27:50,262:INFO:Uploading model into container now
2022-09-12 15:27:50,262:INFO:create_model_container: 18
2022-09-12 15:27:50,263:INFO:master_model_container: 18
2022-09-12 15:27:50,263:INFO:display_container: 2
2022-09-12 15:27:50,264:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-09-12 15:27:50,264:INFO:create_model() succesfully completed......................................
2022-09-12 15:27:50,471:INFO:SubProcess create_model() end ==================================
2022-09-12 15:27:50,471:INFO:Creating metrics dataframe
2022-09-12 15:27:50,530:INFO:Initializing Dummy Regressor
2022-09-12 15:27:50,530:INFO:Total runtime is 0.3978116671244304 minutes
2022-09-12 15:27:50,547:INFO:SubProcess create_model() called ==================================
2022-09-12 15:27:50,547:INFO:Initializing create_model()
2022-09-12 15:27:50,548:INFO:create_model(estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8FEE0>, return_train_score=False, kwargs={})
2022-09-12 15:27:50,549:INFO:Checking exceptions
2022-09-12 15:27:50,550:INFO:Importing libraries
2022-09-12 15:27:50,550:INFO:Copying training dataset
2022-09-12 15:27:50,552:INFO:Defining folds
2022-09-12 15:27:50,552:INFO:Declaring metric variables
2022-09-12 15:27:50,571:INFO:Importing untrained model
2022-09-12 15:27:50,593:INFO:Dummy Regressor Imported succesfully
2022-09-12 15:27:50,632:INFO:Starting cross validation
2022-09-12 15:27:50,632:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:27:50,849:INFO:Calculating mean and std
2022-09-12 15:27:50,852:INFO:Creating metrics dataframe
2022-09-12 15:27:50,926:INFO:Uploading results into container
2022-09-12 15:27:50,926:INFO:Uploading model into container now
2022-09-12 15:27:50,926:INFO:create_model_container: 19
2022-09-12 15:27:50,927:INFO:master_model_container: 19
2022-09-12 15:27:50,927:INFO:display_container: 2
2022-09-12 15:27:50,927:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2022-09-12 15:27:50,927:INFO:create_model() succesfully completed......................................
2022-09-12 15:27:51,126:INFO:SubProcess create_model() end ==================================
2022-09-12 15:27:51,126:INFO:Creating metrics dataframe
2022-09-12 15:27:51,250:INFO:Initializing create_model()
2022-09-12 15:27:51,251:INFO:create_model(estimator=HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-09-12 15:27:51,251:INFO:Checking exceptions
2022-09-12 15:27:51,252:INFO:Importing libraries
2022-09-12 15:27:51,252:INFO:Copying training dataset
2022-09-12 15:27:51,254:INFO:Defining folds
2022-09-12 15:27:51,255:INFO:Declaring metric variables
2022-09-12 15:27:51,256:INFO:Importing untrained model
2022-09-12 15:27:51,256:INFO:Declaring custom model
2022-09-12 15:27:51,258:INFO:Huber Regressor Imported succesfully
2022-09-12 15:27:51,259:INFO:Cross validation set to False
2022-09-12 15:27:51,259:INFO:Fitting Model
2022-09-12 15:27:51,336:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-12 15:27:51,336:INFO:create_models() succesfully completed......................................
2022-09-12 15:27:51,637:INFO:create_model_container: 19
2022-09-12 15:27:51,637:INFO:master_model_container: 19
2022-09-12 15:27:51,637:INFO:display_container: 2
2022-09-12 15:27:51,638:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-12 15:27:51,638:INFO:compare_models() succesfully completed......................................
2022-09-12 15:27:51,650:INFO:PyCaret Supervised Module
2022-09-12 15:27:51,652:INFO:ML Usecase: regression
2022-09-12 15:27:51,652:INFO:version 2.3.10
2022-09-12 15:27:51,652:INFO:Initializing setup()
2022-09-12 15:27:51,652:INFO:setup(target=mpy, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=['dosis_IC_ppm', 'CO2_gas'], numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-09-12 15:27:51,652:INFO:Checking environment
2022-09-12 15:27:51,654:INFO:python_version: 3.8.12
2022-09-12 15:27:51,654:INFO:python_build: ('default', 'Oct 12 2021 03:01:40')
2022-09-12 15:27:51,654:INFO:machine: AMD64
2022-09-12 15:27:51,654:INFO:platform: Windows-10-10.0.22000-SP0
2022-09-12 15:27:51,656:WARNING:cannot find psutil installation. memory not traceable. Install psutil using pip to enable memory logging.
2022-09-12 15:27:51,656:INFO:Checking libraries
2022-09-12 15:27:51,656:INFO:pd==1.4.2
2022-09-12 15:27:51,656:INFO:numpy==1.22.4
2022-09-12 15:27:51,656:INFO:sklearn==0.23.2
2022-09-12 15:27:51,657:INFO:lightgbm==3.3.1
2022-09-12 15:27:51,658:WARNING:catboost not found
2022-09-12 15:27:51,658:INFO:xgboost==1.6.1
2022-09-12 15:27:51,659:INFO:mlflow==1.21.0
2022-09-12 15:27:51,659:INFO:Checking Exceptions
2022-09-12 15:27:51,659:INFO:Declaring global variables
2022-09-12 15:27:51,659:INFO:USI: 12d8
2022-09-12 15:27:51,659:INFO:pycaret_globals: {'dashboard_logger', 'display_container', 'fold_groups_param_full', '_all_metrics', 'gpu_param', '_all_models', 'seed', 'USI', 'logging_param', 'experiment__', 'y_train', 'iterative_imputation_iters_param', 'X', 'fold_generator', 'y_test', '_available_plots', 'target_param', 'n_jobs_param', 'prep_pipe', 'transform_target_method_param', '_internal_pipeline', 'pycaret_globals', 'X_test', 'fix_imbalance_param', 'master_model_container', 'stratify_param', '_all_models_internal', 'X_train', 'data_before_preprocess', 'log_plots_param', 'html_param', 'fix_imbalance_method_param', 'y', 'transform_target_param', 'create_model_container', 'exp_name_log', 'fold_groups_param', 'fold_param', '_gpu_n_jobs_param', 'imputation_classifier', '_ml_usecase', 'imputation_regressor', 'fold_shuffle_param'}
2022-09-12 15:27:51,660:INFO:Preparing display monitor
2022-09-12 15:27:51,660:INFO:Preparing display monitor
2022-09-12 15:27:51,686:INFO:Importing libraries
2022-09-12 15:27:51,687:INFO:Copying data for preprocessing
2022-09-12 15:27:51,706:INFO:Declaring preprocessing parameters
2022-09-12 15:27:51,708:INFO:Creating preprocessing pipeline
2022-09-12 15:27:51,719:INFO:Preprocessing pipeline created successfully
2022-09-12 15:27:51,720:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-09-12 15:27:51,720:INFO:Creating global containers
2022-09-12 15:27:51,721:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-09-12 15:27:59,433:WARNING:Couldn't import catboost.CatBoostRegressor
2022-09-12 15:27:59,626:WARNING:Couldn't import catboost.CatBoostRegressor
2022-09-12 15:27:59,627:INFO:Creating grid variables
2022-09-12 15:27:59,649:INFO:create_model_container: 0
2022-09-12 15:27:59,649:INFO:master_model_container: 0
2022-09-12 15:27:59,649:INFO:display_container: 1
2022-09-12 15:27:59,663:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=['dosis_IC_ppm',
                                                          'CO2_gas'],
                                      target='mpy', time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=N...
                                                  target='mpy')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='mpy')),
                ('fix_perfect', Remove_100(target='mpy')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-09-12 15:27:59,663:INFO:setup() succesfully completed......................................
2022-09-12 15:27:59,938:INFO:Initializing compare_models()
2022-09-12 15:27:59,938:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2022-09-12 15:27:59,939:INFO:Checking exceptions
2022-09-12 15:27:59,939:INFO:Preparing display monitor
2022-09-12 15:27:59,940:INFO:Preparing display monitor
2022-09-12 15:27:59,983:INFO:Initializing Linear Regression
2022-09-12 15:27:59,983:INFO:Total runtime is 0.0 minutes
2022-09-12 15:28:00,008:INFO:SubProcess create_model() called ==================================
2022-09-12 15:28:00,009:INFO:Initializing create_model()
2022-09-12 15:28:00,009:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8F040>, return_train_score=False, kwargs={})
2022-09-12 15:28:00,009:INFO:Checking exceptions
2022-09-12 15:28:00,010:INFO:Importing libraries
2022-09-12 15:28:00,011:INFO:Copying training dataset
2022-09-12 15:28:00,014:INFO:Defining folds
2022-09-12 15:28:00,014:INFO:Declaring metric variables
2022-09-12 15:28:00,043:INFO:Importing untrained model
2022-09-12 15:28:00,061:INFO:Linear Regression Imported succesfully
2022-09-12 15:28:00,096:INFO:Starting cross validation
2022-09-12 15:28:00,097:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:28:00,296:INFO:Calculating mean and std
2022-09-12 15:28:00,299:INFO:Creating metrics dataframe
2022-09-12 15:28:00,365:INFO:Uploading results into container
2022-09-12 15:28:00,365:INFO:Uploading model into container now
2022-09-12 15:28:00,365:INFO:create_model_container: 1
2022-09-12 15:28:00,366:INFO:master_model_container: 1
2022-09-12 15:28:00,366:INFO:display_container: 2
2022-09-12 15:28:00,366:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2022-09-12 15:28:00,366:INFO:create_model() succesfully completed......................................
2022-09-12 15:28:00,598:INFO:SubProcess create_model() end ==================================
2022-09-12 15:28:00,599:INFO:Creating metrics dataframe
2022-09-12 15:28:00,688:INFO:Initializing Lasso Regression
2022-09-12 15:28:00,688:INFO:Total runtime is 0.01175076166788737 minutes
2022-09-12 15:28:00,704:INFO:SubProcess create_model() called ==================================
2022-09-12 15:28:00,704:INFO:Initializing create_model()
2022-09-12 15:28:00,704:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8F040>, return_train_score=False, kwargs={})
2022-09-12 15:28:00,705:INFO:Checking exceptions
2022-09-12 15:28:00,705:INFO:Importing libraries
2022-09-12 15:28:00,705:INFO:Copying training dataset
2022-09-12 15:28:00,707:INFO:Defining folds
2022-09-12 15:28:00,707:INFO:Declaring metric variables
2022-09-12 15:28:00,728:INFO:Importing untrained model
2022-09-12 15:28:00,745:INFO:Lasso Regression Imported succesfully
2022-09-12 15:28:00,773:INFO:Starting cross validation
2022-09-12 15:28:00,775:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:28:00,899:INFO:Calculating mean and std
2022-09-12 15:28:00,901:INFO:Creating metrics dataframe
2022-09-12 15:28:00,934:INFO:Uploading results into container
2022-09-12 15:28:00,934:INFO:Uploading model into container now
2022-09-12 15:28:00,935:INFO:create_model_container: 2
2022-09-12 15:28:00,935:INFO:master_model_container: 2
2022-09-12 15:28:00,935:INFO:display_container: 2
2022-09-12 15:28:00,935:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=123,
      selection='cyclic', tol=0.0001, warm_start=False)
2022-09-12 15:28:00,935:INFO:create_model() succesfully completed......................................
2022-09-12 15:28:01,119:INFO:SubProcess create_model() end ==================================
2022-09-12 15:28:01,120:INFO:Creating metrics dataframe
2022-09-12 15:28:01,170:INFO:Initializing Ridge Regression
2022-09-12 15:28:01,170:INFO:Total runtime is 0.0197901447614034 minutes
2022-09-12 15:28:01,181:INFO:SubProcess create_model() called ==================================
2022-09-12 15:28:01,181:INFO:Initializing create_model()
2022-09-12 15:28:01,181:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8F040>, return_train_score=False, kwargs={})
2022-09-12 15:28:01,181:INFO:Checking exceptions
2022-09-12 15:28:01,182:INFO:Importing libraries
2022-09-12 15:28:01,182:INFO:Copying training dataset
2022-09-12 15:28:01,182:INFO:Defining folds
2022-09-12 15:28:01,182:INFO:Declaring metric variables
2022-09-12 15:28:01,194:INFO:Importing untrained model
2022-09-12 15:28:01,204:INFO:Ridge Regression Imported succesfully
2022-09-12 15:28:01,224:INFO:Starting cross validation
2022-09-12 15:28:01,225:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:28:01,300:INFO:Calculating mean and std
2022-09-12 15:28:01,302:INFO:Creating metrics dataframe
2022-09-12 15:28:01,352:INFO:Uploading results into container
2022-09-12 15:28:01,353:INFO:Uploading model into container now
2022-09-12 15:28:01,353:INFO:create_model_container: 3
2022-09-12 15:28:01,353:INFO:master_model_container: 3
2022-09-12 15:28:01,353:INFO:display_container: 2
2022-09-12 15:28:01,354:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=123, solver='auto', tol=0.001)
2022-09-12 15:28:01,354:INFO:create_model() succesfully completed......................................
2022-09-12 15:28:01,561:INFO:SubProcess create_model() end ==================================
2022-09-12 15:28:01,561:INFO:Creating metrics dataframe
2022-09-12 15:28:01,608:INFO:Initializing Elastic Net
2022-09-12 15:28:01,608:INFO:Total runtime is 0.027082482973734535 minutes
2022-09-12 15:28:01,619:INFO:SubProcess create_model() called ==================================
2022-09-12 15:28:01,620:INFO:Initializing create_model()
2022-09-12 15:28:01,620:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8F040>, return_train_score=False, kwargs={})
2022-09-12 15:28:01,620:INFO:Checking exceptions
2022-09-12 15:28:01,621:INFO:Importing libraries
2022-09-12 15:28:01,621:INFO:Copying training dataset
2022-09-12 15:28:01,623:INFO:Defining folds
2022-09-12 15:28:01,623:INFO:Declaring metric variables
2022-09-12 15:28:01,638:INFO:Importing untrained model
2022-09-12 15:28:01,650:INFO:Elastic Net Imported succesfully
2022-09-12 15:28:01,681:INFO:Starting cross validation
2022-09-12 15:28:01,682:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:28:01,890:INFO:Calculating mean and std
2022-09-12 15:28:01,894:INFO:Creating metrics dataframe
2022-09-12 15:28:01,959:INFO:Uploading results into container
2022-09-12 15:28:01,959:INFO:Uploading model into container now
2022-09-12 15:28:01,959:INFO:create_model_container: 4
2022-09-12 15:28:01,959:INFO:master_model_container: 4
2022-09-12 15:28:01,959:INFO:display_container: 2
2022-09-12 15:28:01,960:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=123, selection='cyclic', tol=0.0001, warm_start=False)
2022-09-12 15:28:01,961:INFO:create_model() succesfully completed......................................
2022-09-12 15:28:02,193:INFO:SubProcess create_model() end ==================================
2022-09-12 15:28:02,194:INFO:Creating metrics dataframe
2022-09-12 15:28:02,246:INFO:Initializing Least Angle Regression
2022-09-12 15:28:02,246:INFO:Total runtime is 0.037727725505828855 minutes
2022-09-12 15:28:02,261:INFO:SubProcess create_model() called ==================================
2022-09-12 15:28:02,262:INFO:Initializing create_model()
2022-09-12 15:28:02,262:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8F040>, return_train_score=False, kwargs={})
2022-09-12 15:28:02,263:INFO:Checking exceptions
2022-09-12 15:28:02,263:INFO:Importing libraries
2022-09-12 15:28:02,264:INFO:Copying training dataset
2022-09-12 15:28:02,266:INFO:Defining folds
2022-09-12 15:28:02,266:INFO:Declaring metric variables
2022-09-12 15:28:02,285:INFO:Importing untrained model
2022-09-12 15:28:02,304:INFO:Least Angle Regression Imported succesfully
2022-09-12 15:28:02,351:INFO:Starting cross validation
2022-09-12 15:28:02,352:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:28:02,506:INFO:Calculating mean and std
2022-09-12 15:28:02,508:INFO:Creating metrics dataframe
2022-09-12 15:28:02,560:INFO:Uploading results into container
2022-09-12 15:28:02,562:INFO:Uploading model into container now
2022-09-12 15:28:02,562:INFO:create_model_container: 5
2022-09-12 15:28:02,562:INFO:master_model_container: 5
2022-09-12 15:28:02,563:INFO:display_container: 2
2022-09-12 15:28:02,563:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize=True, precompute='auto',
     random_state=123, verbose=False)
2022-09-12 15:28:02,564:INFO:create_model() succesfully completed......................................
2022-09-12 15:28:02,764:INFO:SubProcess create_model() end ==================================
2022-09-12 15:28:02,764:INFO:Creating metrics dataframe
2022-09-12 15:28:02,815:INFO:Initializing Lasso Least Angle Regression
2022-09-12 15:28:02,816:INFO:Total runtime is 0.0472100019454956 minutes
2022-09-12 15:28:02,828:INFO:SubProcess create_model() called ==================================
2022-09-12 15:28:02,829:INFO:Initializing create_model()
2022-09-12 15:28:02,830:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8F040>, return_train_score=False, kwargs={})
2022-09-12 15:28:02,830:INFO:Checking exceptions
2022-09-12 15:28:02,830:INFO:Importing libraries
2022-09-12 15:28:02,830:INFO:Copying training dataset
2022-09-12 15:28:02,831:INFO:Defining folds
2022-09-12 15:28:02,831:INFO:Declaring metric variables
2022-09-12 15:28:02,846:INFO:Importing untrained model
2022-09-12 15:28:02,866:INFO:Lasso Least Angle Regression Imported succesfully
2022-09-12 15:28:02,901:INFO:Starting cross validation
2022-09-12 15:28:02,904:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:28:03,062:INFO:Calculating mean and std
2022-09-12 15:28:03,065:INFO:Creating metrics dataframe
2022-09-12 15:28:03,111:INFO:Uploading results into container
2022-09-12 15:28:03,111:INFO:Uploading model into container now
2022-09-12 15:28:03,118:INFO:create_model_container: 6
2022-09-12 15:28:03,118:INFO:master_model_container: 6
2022-09-12 15:28:03,119:INFO:display_container: 2
2022-09-12 15:28:03,120:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize=True,
          positive=False, precompute='auto', random_state=123, verbose=False)
2022-09-12 15:28:03,120:INFO:create_model() succesfully completed......................................
2022-09-12 15:28:03,295:INFO:SubProcess create_model() end ==================================
2022-09-12 15:28:03,311:INFO:Creating metrics dataframe
2022-09-12 15:28:03,362:INFO:Initializing Orthogonal Matching Pursuit
2022-09-12 15:28:03,363:INFO:Total runtime is 0.056341016292572016 minutes
2022-09-12 15:28:03,377:INFO:SubProcess create_model() called ==================================
2022-09-12 15:28:03,377:INFO:Initializing create_model()
2022-09-12 15:28:03,378:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8F040>, return_train_score=False, kwargs={})
2022-09-12 15:28:03,378:INFO:Checking exceptions
2022-09-12 15:28:03,378:INFO:Importing libraries
2022-09-12 15:28:03,378:INFO:Copying training dataset
2022-09-12 15:28:03,379:INFO:Defining folds
2022-09-12 15:28:03,380:INFO:Declaring metric variables
2022-09-12 15:28:03,402:INFO:Importing untrained model
2022-09-12 15:28:03,427:INFO:Orthogonal Matching Pursuit Imported succesfully
2022-09-12 15:28:03,473:INFO:Starting cross validation
2022-09-12 15:28:03,475:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:28:03,626:INFO:Calculating mean and std
2022-09-12 15:28:03,629:INFO:Creating metrics dataframe
2022-09-12 15:28:03,680:INFO:Uploading results into container
2022-09-12 15:28:03,681:INFO:Uploading model into container now
2022-09-12 15:28:03,681:INFO:create_model_container: 7
2022-09-12 15:28:03,681:INFO:master_model_container: 7
2022-09-12 15:28:03,681:INFO:display_container: 2
2022-09-12 15:28:03,681:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None)
2022-09-12 15:28:03,682:INFO:create_model() succesfully completed......................................
2022-09-12 15:28:03,882:INFO:SubProcess create_model() end ==================================
2022-09-12 15:28:03,884:INFO:Creating metrics dataframe
2022-09-12 15:28:03,937:INFO:Initializing Bayesian Ridge
2022-09-12 15:28:03,937:INFO:Total runtime is 0.06590215365091959 minutes
2022-09-12 15:28:03,951:INFO:SubProcess create_model() called ==================================
2022-09-12 15:28:03,952:INFO:Initializing create_model()
2022-09-12 15:28:03,952:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8F040>, return_train_score=False, kwargs={})
2022-09-12 15:28:03,953:INFO:Checking exceptions
2022-09-12 15:28:03,953:INFO:Importing libraries
2022-09-12 15:28:03,953:INFO:Copying training dataset
2022-09-12 15:28:03,958:INFO:Defining folds
2022-09-12 15:28:03,959:INFO:Declaring metric variables
2022-09-12 15:28:03,978:INFO:Importing untrained model
2022-09-12 15:28:03,993:INFO:Bayesian Ridge Imported succesfully
2022-09-12 15:28:04,051:INFO:Starting cross validation
2022-09-12 15:28:04,053:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:28:04,290:INFO:Calculating mean and std
2022-09-12 15:28:04,291:INFO:Creating metrics dataframe
2022-09-12 15:28:04,347:INFO:Uploading results into container
2022-09-12 15:28:04,349:INFO:Uploading model into container now
2022-09-12 15:28:04,349:INFO:create_model_container: 8
2022-09-12 15:28:04,349:INFO:master_model_container: 8
2022-09-12 15:28:04,349:INFO:display_container: 2
2022-09-12 15:28:04,350:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False)
2022-09-12 15:28:04,350:INFO:create_model() succesfully completed......................................
2022-09-12 15:28:04,554:INFO:SubProcess create_model() end ==================================
2022-09-12 15:28:04,554:INFO:Creating metrics dataframe
2022-09-12 15:28:04,598:INFO:Initializing Passive Aggressive Regressor
2022-09-12 15:28:04,598:INFO:Total runtime is 0.07691434621810912 minutes
2022-09-12 15:28:04,609:INFO:SubProcess create_model() called ==================================
2022-09-12 15:28:04,610:INFO:Initializing create_model()
2022-09-12 15:28:04,610:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8F040>, return_train_score=False, kwargs={})
2022-09-12 15:28:04,610:INFO:Checking exceptions
2022-09-12 15:28:04,610:INFO:Importing libraries
2022-09-12 15:28:04,610:INFO:Copying training dataset
2022-09-12 15:28:04,611:INFO:Defining folds
2022-09-12 15:28:04,612:INFO:Declaring metric variables
2022-09-12 15:28:04,630:INFO:Importing untrained model
2022-09-12 15:28:04,646:INFO:Passive Aggressive Regressor Imported succesfully
2022-09-12 15:28:04,687:INFO:Starting cross validation
2022-09-12 15:28:04,691:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:28:04,819:INFO:Calculating mean and std
2022-09-12 15:28:04,821:INFO:Creating metrics dataframe
2022-09-12 15:28:04,874:INFO:Uploading results into container
2022-09-12 15:28:04,874:INFO:Uploading model into container now
2022-09-12 15:28:04,874:INFO:create_model_container: 9
2022-09-12 15:28:04,874:INFO:master_model_container: 9
2022-09-12 15:28:04,875:INFO:display_container: 2
2022-09-12 15:28:04,876:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=123, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-09-12 15:28:04,876:INFO:create_model() succesfully completed......................................
2022-09-12 15:28:05,070:INFO:SubProcess create_model() end ==================================
2022-09-12 15:28:05,071:INFO:Creating metrics dataframe
2022-09-12 15:28:05,119:INFO:Initializing Huber Regressor
2022-09-12 15:28:05,119:INFO:Total runtime is 0.08561100562413533 minutes
2022-09-12 15:28:05,135:INFO:SubProcess create_model() called ==================================
2022-09-12 15:28:05,136:INFO:Initializing create_model()
2022-09-12 15:28:05,136:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8F040>, return_train_score=False, kwargs={})
2022-09-12 15:28:05,137:INFO:Checking exceptions
2022-09-12 15:28:05,137:INFO:Importing libraries
2022-09-12 15:28:05,137:INFO:Copying training dataset
2022-09-12 15:28:05,139:INFO:Defining folds
2022-09-12 15:28:05,141:INFO:Declaring metric variables
2022-09-12 15:28:05,164:INFO:Importing untrained model
2022-09-12 15:28:05,194:INFO:Huber Regressor Imported succesfully
2022-09-12 15:28:05,240:INFO:Starting cross validation
2022-09-12 15:28:05,243:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:28:05,427:INFO:Calculating mean and std
2022-09-12 15:28:05,429:INFO:Creating metrics dataframe
2022-09-12 15:28:05,505:INFO:Uploading results into container
2022-09-12 15:28:05,507:INFO:Uploading model into container now
2022-09-12 15:28:05,507:INFO:create_model_container: 10
2022-09-12 15:28:05,507:INFO:master_model_container: 10
2022-09-12 15:28:05,507:INFO:display_container: 2
2022-09-12 15:28:05,509:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-12 15:28:05,509:INFO:create_model() succesfully completed......................................
2022-09-12 15:28:05,705:INFO:SubProcess create_model() end ==================================
2022-09-12 15:28:05,706:INFO:Creating metrics dataframe
2022-09-12 15:28:05,754:INFO:Initializing K Neighbors Regressor
2022-09-12 15:28:05,755:INFO:Total runtime is 0.09620668093363444 minutes
2022-09-12 15:28:05,768:INFO:SubProcess create_model() called ==================================
2022-09-12 15:28:05,769:INFO:Initializing create_model()
2022-09-12 15:28:05,769:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8F040>, return_train_score=False, kwargs={})
2022-09-12 15:28:05,769:INFO:Checking exceptions
2022-09-12 15:28:05,770:INFO:Importing libraries
2022-09-12 15:28:05,770:INFO:Copying training dataset
2022-09-12 15:28:05,771:INFO:Defining folds
2022-09-12 15:28:05,772:INFO:Declaring metric variables
2022-09-12 15:28:05,788:INFO:Importing untrained model
2022-09-12 15:28:05,812:INFO:K Neighbors Regressor Imported succesfully
2022-09-12 15:28:05,865:INFO:Starting cross validation
2022-09-12 15:28:05,866:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:28:06,053:INFO:Calculating mean and std
2022-09-12 15:28:06,055:INFO:Creating metrics dataframe
2022-09-12 15:28:06,120:INFO:Uploading results into container
2022-09-12 15:28:06,121:INFO:Uploading model into container now
2022-09-12 15:28:06,121:INFO:create_model_container: 11
2022-09-12 15:28:06,121:INFO:master_model_container: 11
2022-09-12 15:28:06,121:INFO:display_container: 2
2022-09-12 15:28:06,122:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2022-09-12 15:28:06,123:INFO:create_model() succesfully completed......................................
2022-09-12 15:28:06,370:INFO:SubProcess create_model() end ==================================
2022-09-12 15:28:06,370:INFO:Creating metrics dataframe
2022-09-12 15:28:06,426:INFO:Initializing Decision Tree Regressor
2022-09-12 15:28:06,426:INFO:Total runtime is 0.10739375352859497 minutes
2022-09-12 15:28:06,441:INFO:SubProcess create_model() called ==================================
2022-09-12 15:28:06,442:INFO:Initializing create_model()
2022-09-12 15:28:06,443:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8F040>, return_train_score=False, kwargs={})
2022-09-12 15:28:06,443:INFO:Checking exceptions
2022-09-12 15:28:06,443:INFO:Importing libraries
2022-09-12 15:28:06,443:INFO:Copying training dataset
2022-09-12 15:28:06,445:INFO:Defining folds
2022-09-12 15:28:06,445:INFO:Declaring metric variables
2022-09-12 15:28:06,465:INFO:Importing untrained model
2022-09-12 15:28:06,484:INFO:Decision Tree Regressor Imported succesfully
2022-09-12 15:28:06,525:INFO:Starting cross validation
2022-09-12 15:28:06,526:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:28:06,750:INFO:Calculating mean and std
2022-09-12 15:28:06,753:INFO:Creating metrics dataframe
2022-09-12 15:28:06,822:INFO:Uploading results into container
2022-09-12 15:28:06,823:INFO:Uploading model into container now
2022-09-12 15:28:06,823:INFO:create_model_container: 12
2022-09-12 15:28:06,823:INFO:master_model_container: 12
2022-09-12 15:28:06,823:INFO:display_container: 2
2022-09-12 15:28:06,824:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=123, splitter='best')
2022-09-12 15:28:06,824:INFO:create_model() succesfully completed......................................
2022-09-12 15:28:07,055:INFO:SubProcess create_model() end ==================================
2022-09-12 15:28:07,055:INFO:Creating metrics dataframe
2022-09-12 15:28:07,102:INFO:Initializing Random Forest Regressor
2022-09-12 15:28:07,102:INFO:Total runtime is 0.11866402626037598 minutes
2022-09-12 15:28:07,114:INFO:SubProcess create_model() called ==================================
2022-09-12 15:28:07,116:INFO:Initializing create_model()
2022-09-12 15:28:07,116:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8F040>, return_train_score=False, kwargs={})
2022-09-12 15:28:07,116:INFO:Checking exceptions
2022-09-12 15:28:07,116:INFO:Importing libraries
2022-09-12 15:28:07,116:INFO:Copying training dataset
2022-09-12 15:28:07,118:INFO:Defining folds
2022-09-12 15:28:07,118:INFO:Declaring metric variables
2022-09-12 15:28:07,134:INFO:Importing untrained model
2022-09-12 15:28:07,147:INFO:Random Forest Regressor Imported succesfully
2022-09-12 15:28:07,182:INFO:Starting cross validation
2022-09-12 15:28:07,183:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:28:08,001:INFO:Calculating mean and std
2022-09-12 15:28:08,003:INFO:Creating metrics dataframe
2022-09-12 15:28:08,076:INFO:Uploading results into container
2022-09-12 15:28:08,076:INFO:Uploading model into container now
2022-09-12 15:28:08,076:INFO:create_model_container: 13
2022-09-12 15:28:08,077:INFO:master_model_container: 13
2022-09-12 15:28:08,077:INFO:display_container: 2
2022-09-12 15:28:08,079:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=123, verbose=0, warm_start=False)
2022-09-12 15:28:08,080:INFO:create_model() succesfully completed......................................
2022-09-12 15:28:08,301:INFO:SubProcess create_model() end ==================================
2022-09-12 15:28:08,301:INFO:Creating metrics dataframe
2022-09-12 15:28:08,362:INFO:Initializing Extra Trees Regressor
2022-09-12 15:28:08,362:INFO:Total runtime is 0.13965656757354736 minutes
2022-09-12 15:28:08,376:INFO:SubProcess create_model() called ==================================
2022-09-12 15:28:08,377:INFO:Initializing create_model()
2022-09-12 15:28:08,378:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8F040>, return_train_score=False, kwargs={})
2022-09-12 15:28:08,378:INFO:Checking exceptions
2022-09-12 15:28:08,378:INFO:Importing libraries
2022-09-12 15:28:08,378:INFO:Copying training dataset
2022-09-12 15:28:08,380:INFO:Defining folds
2022-09-12 15:28:08,381:INFO:Declaring metric variables
2022-09-12 15:28:08,394:INFO:Importing untrained model
2022-09-12 15:28:08,409:INFO:Extra Trees Regressor Imported succesfully
2022-09-12 15:28:08,446:INFO:Starting cross validation
2022-09-12 15:28:08,447:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:28:09,187:INFO:Calculating mean and std
2022-09-12 15:28:09,188:INFO:Creating metrics dataframe
2022-09-12 15:28:09,226:INFO:Uploading results into container
2022-09-12 15:28:09,229:INFO:Uploading model into container now
2022-09-12 15:28:09,229:INFO:create_model_container: 14
2022-09-12 15:28:09,229:INFO:master_model_container: 14
2022-09-12 15:28:09,229:INFO:display_container: 2
2022-09-12 15:28:09,229:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=123, verbose=0, warm_start=False)
2022-09-12 15:28:09,230:INFO:create_model() succesfully completed......................................
2022-09-12 15:28:09,444:INFO:SubProcess create_model() end ==================================
2022-09-12 15:28:09,445:INFO:Creating metrics dataframe
2022-09-12 15:28:09,517:INFO:Initializing AdaBoost Regressor
2022-09-12 15:28:09,518:INFO:Total runtime is 0.15891780058542887 minutes
2022-09-12 15:28:09,529:INFO:SubProcess create_model() called ==================================
2022-09-12 15:28:09,530:INFO:Initializing create_model()
2022-09-12 15:28:09,530:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8F040>, return_train_score=False, kwargs={})
2022-09-12 15:28:09,530:INFO:Checking exceptions
2022-09-12 15:28:09,530:INFO:Importing libraries
2022-09-12 15:28:09,530:INFO:Copying training dataset
2022-09-12 15:28:09,531:INFO:Defining folds
2022-09-12 15:28:09,531:INFO:Declaring metric variables
2022-09-12 15:28:09,540:INFO:Importing untrained model
2022-09-12 15:28:09,551:INFO:AdaBoost Regressor Imported succesfully
2022-09-12 15:28:09,576:INFO:Starting cross validation
2022-09-12 15:28:09,577:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:28:09,881:INFO:Calculating mean and std
2022-09-12 15:28:09,881:INFO:Creating metrics dataframe
2022-09-12 15:28:09,929:INFO:Uploading results into container
2022-09-12 15:28:09,929:INFO:Uploading model into container now
2022-09-12 15:28:09,930:INFO:create_model_container: 15
2022-09-12 15:28:09,930:INFO:master_model_container: 15
2022-09-12 15:28:09,930:INFO:display_container: 2
2022-09-12 15:28:09,930:INFO:AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=123)
2022-09-12 15:28:09,930:INFO:create_model() succesfully completed......................................
2022-09-12 15:28:10,131:INFO:SubProcess create_model() end ==================================
2022-09-12 15:28:10,146:INFO:Creating metrics dataframe
2022-09-12 15:28:10,216:INFO:Initializing Gradient Boosting Regressor
2022-09-12 15:28:10,216:INFO:Total runtime is 0.17056323289871214 minutes
2022-09-12 15:28:10,228:INFO:SubProcess create_model() called ==================================
2022-09-12 15:28:10,229:INFO:Initializing create_model()
2022-09-12 15:28:10,229:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8F040>, return_train_score=False, kwargs={})
2022-09-12 15:28:10,229:INFO:Checking exceptions
2022-09-12 15:28:10,229:INFO:Importing libraries
2022-09-12 15:28:10,229:INFO:Copying training dataset
2022-09-12 15:28:10,230:INFO:Defining folds
2022-09-12 15:28:10,230:INFO:Declaring metric variables
2022-09-12 15:28:10,242:INFO:Importing untrained model
2022-09-12 15:28:10,254:INFO:Gradient Boosting Regressor Imported succesfully
2022-09-12 15:28:10,278:INFO:Starting cross validation
2022-09-12 15:28:10,279:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:28:10,535:INFO:Calculating mean and std
2022-09-12 15:28:10,535:INFO:Creating metrics dataframe
2022-09-12 15:28:10,582:INFO:Uploading results into container
2022-09-12 15:28:10,585:INFO:Uploading model into container now
2022-09-12 15:28:10,585:INFO:create_model_container: 16
2022-09-12 15:28:10,585:INFO:master_model_container: 16
2022-09-12 15:28:10,585:INFO:display_container: 2
2022-09-12 15:28:10,586:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=123, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2022-09-12 15:28:10,586:INFO:create_model() succesfully completed......................................
2022-09-12 15:28:10,786:INFO:SubProcess create_model() end ==================================
2022-09-12 15:28:10,788:INFO:Creating metrics dataframe
2022-09-12 15:28:10,859:INFO:Initializing Extreme Gradient Boosting
2022-09-12 15:28:10,859:INFO:Total runtime is 0.18126983642578123 minutes
2022-09-12 15:28:10,873:INFO:SubProcess create_model() called ==================================
2022-09-12 15:28:10,873:INFO:Initializing create_model()
2022-09-12 15:28:10,873:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8F040>, return_train_score=False, kwargs={})
2022-09-12 15:28:10,873:INFO:Checking exceptions
2022-09-12 15:28:10,873:INFO:Importing libraries
2022-09-12 15:28:10,873:INFO:Copying training dataset
2022-09-12 15:28:10,874:INFO:Defining folds
2022-09-12 15:28:10,874:INFO:Declaring metric variables
2022-09-12 15:28:10,884:INFO:Importing untrained model
2022-09-12 15:28:10,899:INFO:Extreme Gradient Boosting Imported succesfully
2022-09-12 15:28:10,924:INFO:Starting cross validation
2022-09-12 15:28:10,927:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:28:11,247:INFO:Calculating mean and std
2022-09-12 15:28:11,248:INFO:Creating metrics dataframe
2022-09-12 15:28:11,284:INFO:Uploading results into container
2022-09-12 15:28:11,285:INFO:Uploading model into container now
2022-09-12 15:28:11,285:INFO:create_model_container: 17
2022-09-12 15:28:11,285:INFO:master_model_container: 17
2022-09-12 15:28:11,285:INFO:display_container: 2
2022-09-12 15:28:11,287:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror',
             predictor=None, random_state=123, reg_alpha=None, ...)
2022-09-12 15:28:11,287:INFO:create_model() succesfully completed......................................
2022-09-12 15:28:11,505:INFO:SubProcess create_model() end ==================================
2022-09-12 15:28:11,505:INFO:Creating metrics dataframe
2022-09-12 15:28:11,579:INFO:Initializing Light Gradient Boosting Machine
2022-09-12 15:28:11,580:INFO:Total runtime is 0.1932820121447245 minutes
2022-09-12 15:28:11,593:INFO:SubProcess create_model() called ==================================
2022-09-12 15:28:11,595:INFO:Initializing create_model()
2022-09-12 15:28:11,595:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8F040>, return_train_score=False, kwargs={})
2022-09-12 15:28:11,595:INFO:Checking exceptions
2022-09-12 15:28:11,596:INFO:Importing libraries
2022-09-12 15:28:11,596:INFO:Copying training dataset
2022-09-12 15:28:11,598:INFO:Defining folds
2022-09-12 15:28:11,598:INFO:Declaring metric variables
2022-09-12 15:28:11,610:INFO:Importing untrained model
2022-09-12 15:28:11,627:INFO:Light Gradient Boosting Machine Imported succesfully
2022-09-12 15:28:11,655:INFO:Starting cross validation
2022-09-12 15:28:11,656:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:28:11,832:INFO:Calculating mean and std
2022-09-12 15:28:11,832:INFO:Creating metrics dataframe
2022-09-12 15:28:11,896:INFO:Uploading results into container
2022-09-12 15:28:11,896:INFO:Uploading model into container now
2022-09-12 15:28:11,903:INFO:create_model_container: 18
2022-09-12 15:28:11,903:INFO:master_model_container: 18
2022-09-12 15:28:11,904:INFO:display_container: 2
2022-09-12 15:28:11,905:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-09-12 15:28:11,905:INFO:create_model() succesfully completed......................................
2022-09-12 15:28:12,127:INFO:SubProcess create_model() end ==================================
2022-09-12 15:28:12,128:INFO:Creating metrics dataframe
2022-09-12 15:28:12,203:INFO:Initializing Dummy Regressor
2022-09-12 15:28:12,204:INFO:Total runtime is 0.20368138551712034 minutes
2022-09-12 15:28:12,215:INFO:SubProcess create_model() called ==================================
2022-09-12 15:28:12,216:INFO:Initializing create_model()
2022-09-12 15:28:12,216:INFO:create_model(estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D665B8F040>, return_train_score=False, kwargs={})
2022-09-12 15:28:12,216:INFO:Checking exceptions
2022-09-12 15:28:12,216:INFO:Importing libraries
2022-09-12 15:28:12,216:INFO:Copying training dataset
2022-09-12 15:28:12,217:INFO:Defining folds
2022-09-12 15:28:12,217:INFO:Declaring metric variables
2022-09-12 15:28:12,230:INFO:Importing untrained model
2022-09-12 15:28:12,241:INFO:Dummy Regressor Imported succesfully
2022-09-12 15:28:12,264:INFO:Starting cross validation
2022-09-12 15:28:12,265:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:28:12,352:INFO:Calculating mean and std
2022-09-12 15:28:12,352:INFO:Creating metrics dataframe
2022-09-12 15:28:12,401:INFO:Uploading results into container
2022-09-12 15:28:12,401:INFO:Uploading model into container now
2022-09-12 15:28:12,408:INFO:create_model_container: 19
2022-09-12 15:28:12,408:INFO:master_model_container: 19
2022-09-12 15:28:12,408:INFO:display_container: 2
2022-09-12 15:28:12,408:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2022-09-12 15:28:12,409:INFO:create_model() succesfully completed......................................
2022-09-12 15:28:12,625:INFO:SubProcess create_model() end ==================================
2022-09-12 15:28:12,627:INFO:Creating metrics dataframe
2022-09-12 15:28:12,737:INFO:Initializing create_model()
2022-09-12 15:28:12,737:INFO:create_model(estimator=HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-09-12 15:28:12,737:INFO:Checking exceptions
2022-09-12 15:28:12,738:INFO:Importing libraries
2022-09-12 15:28:12,738:INFO:Copying training dataset
2022-09-12 15:28:12,738:INFO:Defining folds
2022-09-12 15:28:12,738:INFO:Declaring metric variables
2022-09-12 15:28:12,738:INFO:Importing untrained model
2022-09-12 15:28:12,738:INFO:Declaring custom model
2022-09-12 15:28:12,739:INFO:Huber Regressor Imported succesfully
2022-09-12 15:28:12,740:INFO:Cross validation set to False
2022-09-12 15:28:12,740:INFO:Fitting Model
2022-09-12 15:28:12,753:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-12 15:28:12,753:INFO:create_models() succesfully completed......................................
2022-09-12 15:28:13,024:INFO:create_model_container: 19
2022-09-12 15:28:13,024:INFO:master_model_container: 19
2022-09-12 15:28:13,024:INFO:display_container: 2
2022-09-12 15:28:13,025:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-12 15:28:13,025:INFO:compare_models() succesfully completed......................................
2022-09-12 15:28:13,052:INFO:Initializing create_model()
2022-09-12 15:28:13,052:INFO:create_model(estimator=huber, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-09-12 15:28:13,052:INFO:Checking exceptions
2022-09-12 15:28:13,053:INFO:Preparing display monitor
2022-09-12 15:28:13,092:INFO:Importing libraries
2022-09-12 15:28:13,093:INFO:Copying training dataset
2022-09-12 15:28:13,094:INFO:Defining folds
2022-09-12 15:28:13,094:INFO:Declaring metric variables
2022-09-12 15:28:13,109:INFO:Importing untrained model
2022-09-12 15:28:13,130:INFO:Huber Regressor Imported succesfully
2022-09-12 15:28:13,192:INFO:Starting cross validation
2022-09-12 15:28:13,194:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:28:13,406:INFO:Calculating mean and std
2022-09-12 15:28:13,410:INFO:Creating metrics dataframe
2022-09-12 15:28:13,443:INFO:Finalizing model
2022-09-12 15:28:13,510:INFO:Uploading results into container
2022-09-12 15:28:13,510:INFO:Uploading model into container now
2022-09-12 15:28:13,521:INFO:create_model_container: 20
2022-09-12 15:28:13,521:INFO:master_model_container: 20
2022-09-12 15:28:13,521:INFO:display_container: 3
2022-09-12 15:28:13,522:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-12 15:28:13,522:INFO:create_model() succesfully completed......................................
2022-09-12 15:28:13,753:INFO:Initializing tune_model()
2022-09-12 15:28:13,754:INFO:tune_model(estimator=HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, return_train_score=False, kwargs={})
2022-09-12 15:28:13,754:INFO:Checking exceptions
2022-09-12 15:28:13,755:INFO:Preparing display monitor
2022-09-12 15:28:13,791:INFO:Copying training dataset
2022-09-12 15:28:13,793:INFO:Checking base model
2022-09-12 15:28:13,793:INFO:Base model : Huber Regressor
2022-09-12 15:28:13,807:INFO:Declaring metric variables
2022-09-12 15:28:13,824:INFO:Defining Hyperparameters
2022-09-12 15:28:14,053:INFO:Tuning with n_jobs=-1
2022-09-12 15:28:14,053:INFO:Initializing RandomizedSearchCV
2022-09-12 15:28:14,408:INFO:best_params: {'actual_estimator__fit_intercept': True, 'actual_estimator__epsilon': 1.4, 'actual_estimator__alpha': 0.5}
2022-09-12 15:28:14,409:INFO:Hyperparameter search completed
2022-09-12 15:28:14,409:INFO:SubProcess create_model() called ==================================
2022-09-12 15:28:14,410:INFO:Initializing create_model()
2022-09-12 15:28:14,410:INFO:create_model(estimator=HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D6681F71F0>, return_train_score=False, kwargs={'fit_intercept': True, 'epsilon': 1.4, 'alpha': 0.5})
2022-09-12 15:28:14,410:INFO:Checking exceptions
2022-09-12 15:28:14,410:INFO:Importing libraries
2022-09-12 15:28:14,410:INFO:Copying training dataset
2022-09-12 15:28:14,414:INFO:Defining folds
2022-09-12 15:28:14,415:INFO:Declaring metric variables
2022-09-12 15:28:14,441:INFO:Importing untrained model
2022-09-12 15:28:14,442:INFO:Declaring custom model
2022-09-12 15:28:14,458:INFO:Huber Regressor Imported succesfully
2022-09-12 15:28:14,533:INFO:Starting cross validation
2022-09-12 15:28:14,535:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:28:14,782:INFO:Calculating mean and std
2022-09-12 15:28:14,783:INFO:Creating metrics dataframe
2022-09-12 15:28:14,800:INFO:Finalizing model
2022-09-12 15:28:14,840:INFO:Uploading results into container
2022-09-12 15:28:14,840:INFO:Uploading model into container now
2022-09-12 15:28:14,843:INFO:create_model_container: 21
2022-09-12 15:28:14,843:INFO:master_model_container: 21
2022-09-12 15:28:14,843:INFO:display_container: 4
2022-09-12 15:28:14,843:INFO:HuberRegressor(alpha=0.5, epsilon=1.4, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-12 15:28:14,843:INFO:create_model() succesfully completed......................................
2022-09-12 15:28:15,009:INFO:SubProcess create_model() end ==================================
2022-09-12 15:28:15,009:INFO:choose_better activated
2022-09-12 15:28:15,020:INFO:SubProcess create_model() called ==================================
2022-09-12 15:28:15,021:INFO:Initializing create_model()
2022-09-12 15:28:15,021:INFO:create_model(estimator=HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-09-12 15:28:15,021:INFO:Checking exceptions
2022-09-12 15:28:15,021:INFO:Importing libraries
2022-09-12 15:28:15,021:INFO:Copying training dataset
2022-09-12 15:28:15,022:INFO:Defining folds
2022-09-12 15:28:15,022:INFO:Declaring metric variables
2022-09-12 15:28:15,022:INFO:Importing untrained model
2022-09-12 15:28:15,022:INFO:Declaring custom model
2022-09-12 15:28:15,022:INFO:Huber Regressor Imported succesfully
2022-09-12 15:28:15,023:INFO:Starting cross validation
2022-09-12 15:28:15,023:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:28:15,121:INFO:Calculating mean and std
2022-09-12 15:28:15,121:INFO:Creating metrics dataframe
2022-09-12 15:28:15,122:INFO:Finalizing model
2022-09-12 15:28:15,156:INFO:Uploading results into container
2022-09-12 15:28:15,156:INFO:Uploading model into container now
2022-09-12 15:28:15,156:INFO:create_model_container: 22
2022-09-12 15:28:15,156:INFO:master_model_container: 22
2022-09-12 15:28:15,156:INFO:display_container: 5
2022-09-12 15:28:15,156:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-12 15:28:15,156:INFO:create_model() succesfully completed......................................
2022-09-12 15:28:15,330:INFO:SubProcess create_model() end ==================================
2022-09-12 15:28:15,330:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False) result for R2 is -1.5036
2022-09-12 15:28:15,330:INFO:HuberRegressor(alpha=0.5, epsilon=1.4, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False) result for R2 is -1.4785
2022-09-12 15:28:15,330:INFO:HuberRegressor(alpha=0.5, epsilon=1.4, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False) is best model
2022-09-12 15:28:15,330:INFO:choose_better completed
2022-09-12 15:28:15,385:INFO:create_model_container: 22
2022-09-12 15:28:15,386:INFO:master_model_container: 22
2022-09-12 15:28:15,386:INFO:display_container: 4
2022-09-12 15:28:15,387:INFO:HuberRegressor(alpha=0.5, epsilon=1.4, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-12 15:28:15,387:INFO:tune_model() succesfully completed......................................
2022-09-12 15:28:15,667:INFO:Initializing evaluate_model()
2022-09-12 15:28:15,668:INFO:evaluate_model(estimator=HuberRegressor(alpha=0.5, epsilon=1.4, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2022-09-12 15:28:15,700:INFO:Initializing plot_model()
2022-09-12 15:28:15,700:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=HuberRegressor(alpha=0.5, epsilon=1.4, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=parameter, plot_kwargs={}, save=False, scale=1, system=True)
2022-09-12 15:28:15,700:INFO:Checking exceptions
2022-09-12 15:28:15,700:INFO:Preparing display monitor
2022-09-12 15:28:15,714:INFO:Preloading libraries
2022-09-12 15:28:15,715:INFO:Copying training dataset
2022-09-12 15:28:15,715:INFO:Copying test dataset
2022-09-12 15:28:15,716:INFO:Plot type: parameter
2022-09-12 15:28:15,725:INFO:Visual Rendered Successfully
2022-09-12 15:28:15,933:INFO:plot_model() succesfully completed......................................
2022-09-12 15:28:16,001:INFO:Initializing predict_model()
2022-09-12 15:28:16,001:INFO:predict_model(estimator=HuberRegressor(alpha=0.5, epsilon=1.4, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-09-12 15:28:16,002:INFO:Checking exceptions
2022-09-12 15:28:16,002:INFO:Preloading libraries
2022-09-12 15:28:16,002:INFO:Preparing display monitor
2022-09-12 15:29:00,073:INFO:Initializing tune_model()
2022-09-12 15:29:00,073:INFO:tune_model(estimator=HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), fold=None, round=4, n_iter=50, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, return_train_score=False, kwargs={})
2022-09-12 15:29:00,073:INFO:Checking exceptions
2022-09-12 15:29:00,073:INFO:Preparing display monitor
2022-09-12 15:29:00,103:INFO:Copying training dataset
2022-09-12 15:29:00,105:INFO:Checking base model
2022-09-12 15:29:00,105:INFO:Base model : Huber Regressor
2022-09-12 15:29:00,121:INFO:Declaring metric variables
2022-09-12 15:29:00,132:INFO:Defining Hyperparameters
2022-09-12 15:29:00,363:INFO:Tuning with n_jobs=-1
2022-09-12 15:29:00,364:INFO:Initializing RandomizedSearchCV
2022-09-12 15:29:02,741:INFO:best_params: {'actual_estimator__fit_intercept': True, 'actual_estimator__epsilon': 1.35, 'actual_estimator__alpha': 0.15}
2022-09-12 15:29:02,742:INFO:Hyperparameter search completed
2022-09-12 15:29:02,742:INFO:SubProcess create_model() called ==================================
2022-09-12 15:29:02,743:INFO:Initializing create_model()
2022-09-12 15:29:02,743:INFO:create_model(estimator=HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001D662D3F2E0>, return_train_score=False, kwargs={'fit_intercept': True, 'epsilon': 1.35, 'alpha': 0.15})
2022-09-12 15:29:02,743:INFO:Checking exceptions
2022-09-12 15:29:02,743:INFO:Importing libraries
2022-09-12 15:29:02,744:INFO:Copying training dataset
2022-09-12 15:29:02,745:INFO:Defining folds
2022-09-12 15:29:02,745:INFO:Declaring metric variables
2022-09-12 15:29:02,764:INFO:Importing untrained model
2022-09-12 15:29:02,765:INFO:Declaring custom model
2022-09-12 15:29:02,779:INFO:Huber Regressor Imported succesfully
2022-09-12 15:29:02,826:INFO:Starting cross validation
2022-09-12 15:29:02,828:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:29:03,022:INFO:Calculating mean and std
2022-09-12 15:29:03,026:INFO:Creating metrics dataframe
2022-09-12 15:29:03,048:INFO:Finalizing model
2022-09-12 15:29:03,096:INFO:Uploading results into container
2022-09-12 15:29:03,105:INFO:Uploading model into container now
2022-09-12 15:29:03,105:INFO:create_model_container: 23
2022-09-12 15:29:03,105:INFO:master_model_container: 23
2022-09-12 15:29:03,105:INFO:display_container: 6
2022-09-12 15:29:03,105:INFO:HuberRegressor(alpha=0.15, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-12 15:29:03,106:INFO:create_model() succesfully completed......................................
2022-09-12 15:29:03,335:INFO:SubProcess create_model() end ==================================
2022-09-12 15:29:03,336:INFO:choose_better activated
2022-09-12 15:29:03,358:INFO:SubProcess create_model() called ==================================
2022-09-12 15:29:03,359:INFO:Initializing create_model()
2022-09-12 15:29:03,360:INFO:create_model(estimator=HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-09-12 15:29:03,360:INFO:Checking exceptions
2022-09-12 15:29:03,360:INFO:Importing libraries
2022-09-12 15:29:03,360:INFO:Copying training dataset
2022-09-12 15:29:03,361:INFO:Defining folds
2022-09-12 15:29:03,361:INFO:Declaring metric variables
2022-09-12 15:29:03,361:INFO:Importing untrained model
2022-09-12 15:29:03,362:INFO:Declaring custom model
2022-09-12 15:29:03,362:INFO:Huber Regressor Imported succesfully
2022-09-12 15:29:03,362:INFO:Starting cross validation
2022-09-12 15:29:03,363:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 15:29:03,499:INFO:Calculating mean and std
2022-09-12 15:29:03,500:INFO:Creating metrics dataframe
2022-09-12 15:29:03,500:INFO:Finalizing model
2022-09-12 15:29:03,536:INFO:Uploading results into container
2022-09-12 15:29:03,536:INFO:Uploading model into container now
2022-09-12 15:29:03,536:INFO:create_model_container: 24
2022-09-12 15:29:03,536:INFO:master_model_container: 24
2022-09-12 15:29:03,536:INFO:display_container: 7
2022-09-12 15:29:03,536:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-12 15:29:03,536:INFO:create_model() succesfully completed......................................
2022-09-12 15:29:03,726:INFO:SubProcess create_model() end ==================================
2022-09-12 15:29:03,727:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False) result for R2 is -1.5036
2022-09-12 15:29:03,728:INFO:HuberRegressor(alpha=0.15, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False) result for R2 is -1.4704
2022-09-12 15:29:03,729:INFO:HuberRegressor(alpha=0.15, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False) is best model
2022-09-12 15:29:03,729:INFO:choose_better completed
2022-09-12 15:29:03,772:INFO:create_model_container: 24
2022-09-12 15:29:03,773:INFO:master_model_container: 24
2022-09-12 15:29:03,773:INFO:display_container: 6
2022-09-12 15:29:03,774:INFO:HuberRegressor(alpha=0.15, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-12 15:29:03,774:INFO:tune_model() succesfully completed......................................
2022-09-12 15:29:10,205:INFO:Initializing evaluate_model()
2022-09-12 15:29:10,206:INFO:evaluate_model(estimator=HuberRegressor(alpha=0.15, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2022-09-12 15:29:10,255:INFO:Initializing plot_model()
2022-09-12 15:29:10,255:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=HuberRegressor(alpha=0.15, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=parameter, plot_kwargs={}, save=False, scale=1, system=True)
2022-09-12 15:29:10,256:INFO:Checking exceptions
2022-09-12 15:29:10,257:INFO:Preparing display monitor
2022-09-12 15:29:10,277:INFO:Preloading libraries
2022-09-12 15:29:10,280:INFO:Copying training dataset
2022-09-12 15:29:10,280:INFO:Copying test dataset
2022-09-12 15:29:10,281:INFO:Plot type: parameter
2022-09-12 15:29:10,296:INFO:Visual Rendered Successfully
2022-09-12 15:29:10,540:INFO:plot_model() succesfully completed......................................
2022-09-12 15:29:17,729:INFO:Initializing plot_model()
2022-09-12 15:29:17,729:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=HuberRegressor(alpha=0.15, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=feature_all, plot_kwargs={}, save=False, scale=1, system=True)
2022-09-12 15:29:17,729:INFO:Checking exceptions
2022-09-12 15:29:17,729:INFO:Preparing display monitor
2022-09-12 15:29:17,743:INFO:Preloading libraries
2022-09-12 15:29:17,747:INFO:Copying training dataset
2022-09-12 15:29:17,748:INFO:Copying test dataset
2022-09-12 15:29:17,749:INFO:Plot type: feature_all
2022-09-12 15:29:17,983:INFO:Visual Rendered Successfully
2022-09-12 15:29:18,156:INFO:plot_model() succesfully completed......................................
2022-09-12 15:29:33,436:INFO:Initializing predict_model()
2022-09-12 15:29:33,437:INFO:predict_model(estimator=HuberRegressor(alpha=0.15, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-09-12 15:29:33,437:INFO:Checking exceptions
2022-09-12 15:29:33,437:INFO:Preloading libraries
2022-09-12 15:29:33,437:INFO:Preparing display monitor
2022-09-12 15:38:57,625:INFO:Initializing plot_model()
2022-09-12 15:38:57,625:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=HuberRegressor(alpha=0.15, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=parameter, plot_kwargs={}, save=False, scale=1, system=True)
2022-09-12 15:38:57,625:INFO:Checking exceptions
2022-09-12 15:38:57,625:INFO:Preparing display monitor
2022-09-12 15:38:57,641:INFO:Preloading libraries
2022-09-12 15:38:57,644:INFO:Copying training dataset
2022-09-12 15:38:57,645:INFO:Copying test dataset
2022-09-12 15:38:57,646:INFO:Plot type: parameter
2022-09-12 15:38:57,662:INFO:Visual Rendered Successfully
2022-09-12 15:38:57,934:INFO:plot_model() succesfully completed......................................
2022-09-12 15:39:04,066:INFO:Initializing plot_model()
2022-09-12 15:39:04,066:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=HuberRegressor(alpha=0.15, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=residuals, plot_kwargs={}, save=False, scale=1, system=True)
2022-09-12 15:39:04,066:INFO:Checking exceptions
2022-09-12 15:39:04,067:INFO:Preparing display monitor
2022-09-12 15:39:04,084:INFO:Preloading libraries
2022-09-12 15:39:04,087:INFO:Copying training dataset
2022-09-12 15:39:04,088:INFO:Copying test dataset
2022-09-12 15:39:04,089:INFO:Plot type: residuals
2022-09-12 15:39:04,351:INFO:Fitting Model
2022-09-12 15:39:04,435:INFO:Scoring test/hold-out set
2022-09-12 15:39:05,826:INFO:Visual Rendered Successfully
2022-09-12 15:39:06,096:INFO:plot_model() succesfully completed......................................
2022-09-12 15:39:20,342:INFO:Initializing plot_model()
2022-09-12 15:39:20,343:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=HuberRegressor(alpha=0.15, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=error, plot_kwargs={}, save=False, scale=1, system=True)
2022-09-12 15:39:20,343:INFO:Checking exceptions
2022-09-12 15:39:20,344:INFO:Preparing display monitor
2022-09-12 15:39:20,373:INFO:Preloading libraries
2022-09-12 15:39:20,386:INFO:Copying training dataset
2022-09-12 15:39:20,389:INFO:Copying test dataset
2022-09-12 15:39:20,391:INFO:Plot type: error
2022-09-12 15:39:20,397:INFO:Fitting Model
2022-09-12 15:39:20,400:INFO:Scoring test/hold-out set
2022-09-12 15:39:21,321:INFO:Visual Rendered Successfully
2022-09-12 15:39:21,614:INFO:plot_model() succesfully completed......................................
2022-09-12 15:40:11,708:INFO:Initializing plot_model()
2022-09-12 15:40:11,708:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=HuberRegressor(alpha=0.15, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=rfe, plot_kwargs={}, save=False, scale=1, system=True)
2022-09-12 15:40:11,709:INFO:Checking exceptions
2022-09-12 15:40:11,709:INFO:Preparing display monitor
2022-09-12 15:40:11,730:INFO:Preloading libraries
2022-09-12 15:40:11,734:INFO:Copying training dataset
2022-09-12 15:40:11,735:INFO:Copying test dataset
2022-09-12 15:40:11,735:INFO:Plot type: rfe
2022-09-12 15:40:11,755:INFO:Fitting Model
2022-09-12 15:40:18,572:INFO:Visual Rendered Successfully
2022-09-12 15:40:18,783:INFO:plot_model() succesfully completed......................................
2022-09-12 15:41:10,643:INFO:Initializing predict_model()
2022-09-12 15:41:10,643:INFO:predict_model(estimator=HuberRegressor(alpha=0.15, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-09-12 15:41:10,643:INFO:Checking exceptions
2022-09-12 15:41:10,643:INFO:Preloading libraries
2022-09-12 15:41:10,643:INFO:Preparing display monitor
2022-09-12 15:43:33,433:INFO:Initializing plot_model()
2022-09-12 15:43:33,433:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=HuberRegressor(alpha=0.15, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=tree, plot_kwargs={}, save=False, scale=1, system=True)
2022-09-12 15:43:33,435:INFO:Checking exceptions
2022-09-12 15:43:48,226:INFO:Initializing plot_model()
2022-09-12 15:43:48,226:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=HuberRegressor(alpha=0.15, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=residuals_interactive, plot_kwargs={}, save=False, scale=1, system=True)
2022-09-12 15:43:48,226:INFO:Checking exceptions
2022-09-12 15:43:48,226:INFO:Preparing display monitor
2022-09-12 15:43:48,247:INFO:Preloading libraries
2022-09-12 15:43:48,252:INFO:Copying training dataset
2022-09-12 15:43:48,253:INFO:Copying test dataset
2022-09-12 15:43:48,254:INFO:Plot type: residuals_interactive
2022-09-12 15:43:48,277:INFO:Calculated model residuals
2022-09-12 15:43:50,101:INFO:Calculated Tunkey-Anscombe Plot
2022-09-12 15:43:50,245:INFO:Calculated Normal QQ Plot
2022-09-12 15:43:50,644:INFO:Calculated Scale-Location Plot
2022-09-12 15:43:51,058:INFO:Calculated Residual vs Leverage Plot inc. Cook's distance
2022-09-12 15:43:51,486:INFO:Visual Rendered Successfully
2022-09-12 15:43:51,883:INFO:plot_model() succesfully completed......................................
2022-09-12 15:44:47,651:INFO:Initializing save_model()
2022-09-12 15:44:47,653:INFO:save_model(model=HuberRegressor(alpha=0.15, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), model_name=AI_models/corrosion_regressor_less_data_norm, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=['dosis_IC_ppm',
                                                          'CO2_gas'],
                                      target='mpy', time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=N...
                                                  target='mpy')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='mpy')),
                ('fix_perfect', Remove_100(target='mpy')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True, kwargs={})
2022-09-12 15:44:47,654:INFO:Adding model into prep_pipe
2022-09-12 15:45:02,924:INFO:Initializing save_model()
2022-09-12 15:45:02,924:INFO:save_model(model=HuberRegressor(alpha=0.15, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), model_name=corrosion_regressor_less_data_norm, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=['dosis_IC_ppm',
                                                          'CO2_gas'],
                                      target='mpy', time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=N...
                                                  target='mpy')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='mpy')),
                ('fix_perfect', Remove_100(target='mpy')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True, kwargs={})
2022-09-12 15:45:02,925:INFO:Adding model into prep_pipe
2022-09-12 15:45:02,949:INFO:corrosion_regressor_less_data_norm.pkl saved in current working directory
2022-09-12 15:45:02,967:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=['dosis_IC_ppm',
                                                          'CO2_gas'],
                                      target='mpy', time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=N...
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='mpy')),
                ('fix_perfect', Remove_100(target='mpy')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 HuberRegressor(alpha=0.15, epsilon=1.35, fit_intercept=True,
                                max_iter=100, tol=1e-05, warm_start=False)]],
         verbose=False)
2022-09-12 15:45:02,967:INFO:save_model() successfully completed......................................
2022-09-12 20:32:24,903:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-09-12 20:32:24,905:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-09-12 20:32:24,906:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-09-12 20:32:24,907:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-09-12 20:32:28,654:INFO:PyCaret RegressionExperiment
2022-09-12 20:32:28,654:INFO:Logging name: reg-default-name
2022-09-12 20:32:28,654:INFO:ML Usecase: MLUsecase.REGRESSION
2022-09-12 20:32:28,654:INFO:version 3.0.0.rc3
2022-09-12 20:32:28,654:INFO:Initializing setup()
2022-09-12 20:32:28,654:INFO:self.USI: b95c
2022-09-12 20:32:28,654:INFO:self.variable_keys: {'_ml_usecase', 'display_container', 'y_train', 'USI', '_all_metrics', 'fold_generator', 'exp_name_log', 'logging_param', 'y_test', 'log_plots_param', 'fold_shuffle_param', 'fold_groups_param', '_all_models_internal', 'transform_target_method_param', 'n_jobs_param', 'exp_id', 'gpu_param', 'seed', 'X_test', 'data', 'X_train', 'X', 'pipeline', 'master_model_container', 'y', '_all_models', 'memory', 'target_param', 'html_param', 'transform_target_param', '_available_plots', 'variable_keys', '_gpu_n_jobs_param', 'idx'}
2022-09-12 20:32:28,654:INFO:Checking environment
2022-09-12 20:32:28,654:INFO:python_version: 3.9.12
2022-09-12 20:32:28,654:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-09-12 20:32:28,654:INFO:machine: AMD64
2022-09-12 20:32:28,654:INFO:platform: Windows-10-10.0.22000-SP0
2022-09-12 20:32:28,654:INFO:Memory: svmem(total=12710350848, available=3869028352, percent=69.6, used=8841322496, free=3869028352)
2022-09-12 20:32:28,654:INFO:Physical Core: 4
2022-09-12 20:32:28,654:INFO:Logical Core: 8
2022-09-12 20:32:28,654:INFO:Checking libraries
2022-09-12 20:32:28,654:INFO:System:
2022-09-12 20:32:28,654:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2022-09-12 20:32:28,654:INFO:executable: C:\Users\saint\anaconda3\python.exe
2022-09-12 20:32:28,654:INFO:   machine: Windows-10-10.0.22000-SP0
2022-09-12 20:32:28,654:INFO:PyCaret required dependencies:
2022-09-12 20:32:28,654:WARNING:C:\Users\saint\anaconda3\lib\site-packages\_distutils_hack\__init__.py:33: UserWarning: Setuptools is replacing distutils.
  warnings.warn("Setuptools is replacing distutils.")

2022-09-12 20:32:30,040:INFO:                 pip: 22.1.2
2022-09-12 20:32:30,040:INFO:          setuptools: 63.4.1
2022-09-12 20:32:30,040:INFO:             pycaret: 3.0.0.rc3
2022-09-12 20:32:30,040:INFO:             IPython: 7.31.1
2022-09-12 20:32:30,040:INFO:          ipywidgets: 7.6.5
2022-09-12 20:32:30,040:INFO:                tqdm: 4.64.0
2022-09-12 20:32:30,040:INFO:               numpy: 1.21.5
2022-09-12 20:32:30,040:INFO:              pandas: 1.4.3
2022-09-12 20:32:30,040:INFO:              jinja2: 2.11.3
2022-09-12 20:32:30,040:INFO:               scipy: 1.7.3
2022-09-12 20:32:30,040:INFO:              joblib: 1.1.0
2022-09-12 20:32:30,040:INFO:             sklearn: 1.1.1
2022-09-12 20:32:30,040:INFO:                pyod: Installed but version unavailable
2022-09-12 20:32:30,040:INFO:            imblearn: 0.9.1
2022-09-12 20:32:30,040:INFO:   category_encoders: 2.5.0
2022-09-12 20:32:30,040:INFO:            lightgbm: 3.3.2
2022-09-12 20:32:30,040:INFO:               numba: 0.55.1
2022-09-12 20:32:30,040:INFO:            requests: 2.28.1
2022-09-12 20:32:30,040:INFO:          matplotlib: 3.5.2
2022-09-12 20:32:30,040:INFO:          scikitplot: 0.3.7
2022-09-12 20:32:30,040:INFO:         yellowbrick: 1.5
2022-09-12 20:32:30,040:INFO:              plotly: 5.9.0
2022-09-12 20:32:30,040:INFO:             kaleido: 0.2.1
2022-09-12 20:32:30,040:INFO:         statsmodels: 0.13.2
2022-09-12 20:32:30,040:INFO:              sktime: 0.11.4
2022-09-12 20:32:30,040:INFO:               tbats: Installed but version unavailable
2022-09-12 20:32:30,040:INFO:            pmdarima: 2.0.1
2022-09-12 20:32:30,040:INFO:              psutil: 5.9.0
2022-09-12 20:32:30,040:INFO:None
2022-09-12 20:32:30,040:INFO:Set up data.
2022-09-12 20:32:30,040:INFO:Set up train/test split.
2022-09-12 20:32:30,055:INFO:Set up folding strategy.
2022-09-12 20:32:30,055:INFO:Assigning column types.
2022-09-12 20:32:30,055:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-09-12 20:32:30,055:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-09-12 20:32:30,055:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:32:30,071:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:32:30,165:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:32:30,227:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:32:30,243:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:32:30,243:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:32:30,243:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-09-12 20:32:30,243:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:32:30,259:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:32:30,368:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:32:30,462:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:32:30,462:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:32:30,462:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:32:30,462:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-09-12 20:32:30,477:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:32:30,493:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:32:30,587:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:32:30,649:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:32:30,649:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:32:30,649:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:32:30,665:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:32:30,665:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:32:30,758:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:32:30,837:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:32:30,837:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:32:30,837:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:32:30,837:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-09-12 20:32:30,852:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:32:30,962:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:32:31,040:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:32:31,040:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:32:31,040:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:32:31,055:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:32:31,180:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:32:31,305:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:32:31,305:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:32:31,305:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:32:31,305:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-09-12 20:32:31,430:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:32:31,524:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:32:31,524:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:32:31,524:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:32:31,696:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:32:31,770:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:32:31,786:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:32:31,786:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:32:31,786:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-09-12 20:32:31,900:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:32:31,963:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:32:31,963:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:32:32,072:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:32:32,166:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:32:32,166:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:32:32,166:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-09-12 20:32:32,447:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:32:32,447:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:32:32,724:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:32:32,726:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:32:32,730:INFO:Preparing preprocessing pipeline...
2022-09-12 20:32:32,731:INFO:Set up simple imputation.
2022-09-12 20:32:32,731:INFO:Set up variance threshold.
2022-09-12 20:32:32,833:INFO:Finished creating preprocessing pipeline.
2022-09-12 20:32:32,845:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\saint\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['dosis_IC_ppm', 'CO2_gas'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-09-12 20:32:32,845:INFO:Creating final display dataframe.
2022-09-12 20:32:33,266:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target               mpy
2              Target type        Regression
3               Data shape          (77, 11)
4         Train data shape          (53, 11)
5          Test data shape          (24, 11)
6         Numeric features                 2
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU             False
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              b95c
2022-09-12 20:32:33,513:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:32:33,517:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:32:33,810:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:32:33,812:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:32:33,825:INFO:setup() successfully completed in 5.17s...............
2022-09-12 20:33:03,061:INFO:Initializing compare_models()
2022-09-12 20:33:03,061:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6519B0D60>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001F6519B0D60>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-09-12 20:33:03,062:INFO:Checking exceptions
2022-09-12 20:33:03,065:INFO:Preparing display monitor
2022-09-12 20:33:03,172:INFO:Initializing Linear Regression
2022-09-12 20:33:03,173:INFO:Total runtime is 1.6589959462483723e-05 minutes
2022-09-12 20:33:03,184:INFO:SubProcess create_model() called ==================================
2022-09-12 20:33:03,185:INFO:Initializing create_model()
2022-09-12 20:33:03,187:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6519B0D60>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652F44FA0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:33:03,187:INFO:Checking exceptions
2022-09-12 20:33:03,191:INFO:Importing libraries
2022-09-12 20:33:03,192:INFO:Copying training dataset
2022-09-12 20:33:03,199:INFO:Defining folds
2022-09-12 20:33:03,199:INFO:Declaring metric variables
2022-09-12 20:33:03,209:INFO:Importing untrained model
2022-09-12 20:33:03,219:INFO:Linear Regression Imported successfully
2022-09-12 20:33:03,250:INFO:Starting cross validation
2022-09-12 20:33:03,272:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:33:15,660:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:15,676:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:15,816:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:15,910:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:15,957:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:16,082:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:16,129:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:16,222:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:16,441:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:16,457:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:16,675:INFO:Calculating mean and std
2022-09-12 20:33:16,675:INFO:Creating metrics dataframe
2022-09-12 20:33:16,691:INFO:Uploading results into container
2022-09-12 20:33:16,691:INFO:Uploading model into container now
2022-09-12 20:33:16,691:INFO:master_model_container: 1
2022-09-12 20:33:16,691:INFO:display_container: 2
2022-09-12 20:33:16,691:INFO:LinearRegression(n_jobs=-1)
2022-09-12 20:33:16,696:INFO:create_model() successfully completed......................................
2022-09-12 20:33:16,860:INFO:SubProcess create_model() end ==================================
2022-09-12 20:33:16,861:INFO:Creating metrics dataframe
2022-09-12 20:33:16,875:INFO:Initializing Lasso Regression
2022-09-12 20:33:16,875:INFO:Total runtime is 0.22838929096857707 minutes
2022-09-12 20:33:16,890:INFO:SubProcess create_model() called ==================================
2022-09-12 20:33:16,890:INFO:Initializing create_model()
2022-09-12 20:33:16,890:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6519B0D60>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652F44FA0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:33:16,890:INFO:Checking exceptions
2022-09-12 20:33:16,890:INFO:Importing libraries
2022-09-12 20:33:16,890:INFO:Copying training dataset
2022-09-12 20:33:16,906:INFO:Defining folds
2022-09-12 20:33:16,906:INFO:Declaring metric variables
2022-09-12 20:33:16,919:INFO:Importing untrained model
2022-09-12 20:33:16,933:INFO:Lasso Regression Imported successfully
2022-09-12 20:33:16,952:INFO:Starting cross validation
2022-09-12 20:33:16,955:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:33:17,084:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:17,100:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:17,115:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:17,147:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:17,178:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:17,209:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:17,240:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:17,240:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:17,256:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:17,287:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:17,350:INFO:Calculating mean and std
2022-09-12 20:33:17,350:INFO:Creating metrics dataframe
2022-09-12 20:33:17,370:INFO:Uploading results into container
2022-09-12 20:33:17,372:INFO:Uploading model into container now
2022-09-12 20:33:17,373:INFO:master_model_container: 2
2022-09-12 20:33:17,373:INFO:display_container: 2
2022-09-12 20:33:17,374:INFO:Lasso(random_state=123)
2022-09-12 20:33:17,374:INFO:create_model() successfully completed......................................
2022-09-12 20:33:17,568:INFO:SubProcess create_model() end ==================================
2022-09-12 20:33:17,568:INFO:Creating metrics dataframe
2022-09-12 20:33:17,600:INFO:Initializing Ridge Regression
2022-09-12 20:33:17,600:INFO:Total runtime is 0.24046840270360312 minutes
2022-09-12 20:33:17,615:INFO:SubProcess create_model() called ==================================
2022-09-12 20:33:17,615:INFO:Initializing create_model()
2022-09-12 20:33:17,615:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6519B0D60>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652F44FA0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:33:17,615:INFO:Checking exceptions
2022-09-12 20:33:17,615:INFO:Importing libraries
2022-09-12 20:33:17,615:INFO:Copying training dataset
2022-09-12 20:33:17,662:INFO:Defining folds
2022-09-12 20:33:17,662:INFO:Declaring metric variables
2022-09-12 20:33:17,681:INFO:Importing untrained model
2022-09-12 20:33:17,703:INFO:Ridge Regression Imported successfully
2022-09-12 20:33:17,740:INFO:Starting cross validation
2022-09-12 20:33:17,743:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:33:17,853:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:17,869:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:17,884:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:17,915:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:17,931:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:17,947:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:17,978:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:17,994:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:18,009:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:18,025:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:18,072:INFO:Calculating mean and std
2022-09-12 20:33:18,072:INFO:Creating metrics dataframe
2022-09-12 20:33:18,072:INFO:Uploading results into container
2022-09-12 20:33:18,072:INFO:Uploading model into container now
2022-09-12 20:33:18,072:INFO:master_model_container: 3
2022-09-12 20:33:18,072:INFO:display_container: 2
2022-09-12 20:33:18,072:INFO:Ridge(random_state=123)
2022-09-12 20:33:18,072:INFO:create_model() successfully completed......................................
2022-09-12 20:33:18,253:INFO:SubProcess create_model() end ==================================
2022-09-12 20:33:18,253:INFO:Creating metrics dataframe
2022-09-12 20:33:18,268:INFO:Initializing Elastic Net
2022-09-12 20:33:18,268:INFO:Total runtime is 0.2516113996505737 minutes
2022-09-12 20:33:18,284:INFO:SubProcess create_model() called ==================================
2022-09-12 20:33:18,284:INFO:Initializing create_model()
2022-09-12 20:33:18,284:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6519B0D60>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652F44FA0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:33:18,284:INFO:Checking exceptions
2022-09-12 20:33:18,284:INFO:Importing libraries
2022-09-12 20:33:18,284:INFO:Copying training dataset
2022-09-12 20:33:18,299:INFO:Defining folds
2022-09-12 20:33:18,299:INFO:Declaring metric variables
2022-09-12 20:33:18,309:INFO:Importing untrained model
2022-09-12 20:33:18,318:INFO:Elastic Net Imported successfully
2022-09-12 20:33:18,338:INFO:Starting cross validation
2022-09-12 20:33:18,340:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:33:18,421:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:18,437:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:18,468:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:18,468:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:18,499:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:18,515:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:18,530:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:18,546:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:18,562:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:18,562:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:18,593:INFO:Calculating mean and std
2022-09-12 20:33:18,593:INFO:Creating metrics dataframe
2022-09-12 20:33:18,613:INFO:Uploading results into container
2022-09-12 20:33:18,615:INFO:Uploading model into container now
2022-09-12 20:33:18,616:INFO:master_model_container: 4
2022-09-12 20:33:18,616:INFO:display_container: 2
2022-09-12 20:33:18,617:INFO:ElasticNet(random_state=123)
2022-09-12 20:33:18,617:INFO:create_model() successfully completed......................................
2022-09-12 20:33:18,753:INFO:SubProcess create_model() end ==================================
2022-09-12 20:33:18,753:INFO:Creating metrics dataframe
2022-09-12 20:33:18,769:INFO:Initializing Least Angle Regression
2022-09-12 20:33:18,769:INFO:Total runtime is 0.2599527398745219 minutes
2022-09-12 20:33:18,784:INFO:SubProcess create_model() called ==================================
2022-09-12 20:33:18,784:INFO:Initializing create_model()
2022-09-12 20:33:18,784:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6519B0D60>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652F44FA0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:33:18,784:INFO:Checking exceptions
2022-09-12 20:33:18,784:INFO:Importing libraries
2022-09-12 20:33:18,784:INFO:Copying training dataset
2022-09-12 20:33:18,784:INFO:Defining folds
2022-09-12 20:33:18,784:INFO:Declaring metric variables
2022-09-12 20:33:18,807:INFO:Importing untrained model
2022-09-12 20:33:18,818:INFO:Least Angle Regression Imported successfully
2022-09-12 20:33:18,839:INFO:Starting cross validation
2022-09-12 20:33:18,842:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:33:18,904:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:33:18,919:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:18,935:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:33:18,935:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:33:18,935:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:18,935:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:18,950:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:33:18,950:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:18,966:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:33:18,966:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:18,982:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:33:18,997:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:18,997:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:33:18,997:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:19,013:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:33:19,029:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:19,029:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:33:19,044:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:19,060:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:33:19,060:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:19,075:INFO:Calculating mean and std
2022-09-12 20:33:19,075:INFO:Creating metrics dataframe
2022-09-12 20:33:19,091:INFO:Uploading results into container
2022-09-12 20:33:19,091:INFO:Uploading model into container now
2022-09-12 20:33:19,091:INFO:master_model_container: 5
2022-09-12 20:33:19,091:INFO:display_container: 2
2022-09-12 20:33:19,091:INFO:Lars(random_state=123)
2022-09-12 20:33:19,091:INFO:create_model() successfully completed......................................
2022-09-12 20:33:19,251:INFO:SubProcess create_model() end ==================================
2022-09-12 20:33:19,251:INFO:Creating metrics dataframe
2022-09-12 20:33:19,266:INFO:Initializing Lasso Least Angle Regression
2022-09-12 20:33:19,266:INFO:Total runtime is 0.2682486613591512 minutes
2022-09-12 20:33:19,282:INFO:SubProcess create_model() called ==================================
2022-09-12 20:33:19,282:INFO:Initializing create_model()
2022-09-12 20:33:19,282:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6519B0D60>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652F44FA0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:33:19,282:INFO:Checking exceptions
2022-09-12 20:33:19,282:INFO:Importing libraries
2022-09-12 20:33:19,282:INFO:Copying training dataset
2022-09-12 20:33:19,282:INFO:Defining folds
2022-09-12 20:33:19,282:INFO:Declaring metric variables
2022-09-12 20:33:19,303:INFO:Importing untrained model
2022-09-12 20:33:19,312:INFO:Lasso Least Angle Regression Imported successfully
2022-09-12 20:33:19,327:INFO:Starting cross validation
2022-09-12 20:33:19,331:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:33:19,419:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:33:19,419:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:19,435:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:33:19,435:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:19,450:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:33:19,450:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:19,466:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:33:19,466:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:19,497:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:33:19,497:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:19,520:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:33:19,521:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:19,539:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:33:19,540:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:19,554:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:33:19,555:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:19,574:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:33:19,576:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:19,591:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:33:19,593:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:19,623:INFO:Calculating mean and std
2022-09-12 20:33:19,627:INFO:Creating metrics dataframe
2022-09-12 20:33:19,633:INFO:Uploading results into container
2022-09-12 20:33:19,634:INFO:Uploading model into container now
2022-09-12 20:33:19,635:INFO:master_model_container: 6
2022-09-12 20:33:19,635:INFO:display_container: 2
2022-09-12 20:33:19,635:INFO:LassoLars(random_state=123)
2022-09-12 20:33:19,636:INFO:create_model() successfully completed......................................
2022-09-12 20:33:19,801:INFO:SubProcess create_model() end ==================================
2022-09-12 20:33:19,801:INFO:Creating metrics dataframe
2022-09-12 20:33:19,830:INFO:Initializing Orthogonal Matching Pursuit
2022-09-12 20:33:19,831:INFO:Total runtime is 0.27766286929448447 minutes
2022-09-12 20:33:19,838:INFO:SubProcess create_model() called ==================================
2022-09-12 20:33:19,839:INFO:Initializing create_model()
2022-09-12 20:33:19,839:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6519B0D60>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652F44FA0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:33:19,839:INFO:Checking exceptions
2022-09-12 20:33:19,842:INFO:Importing libraries
2022-09-12 20:33:19,842:INFO:Copying training dataset
2022-09-12 20:33:19,847:INFO:Defining folds
2022-09-12 20:33:19,847:INFO:Declaring metric variables
2022-09-12 20:33:19,856:INFO:Importing untrained model
2022-09-12 20:33:19,865:INFO:Orthogonal Matching Pursuit Imported successfully
2022-09-12 20:33:19,882:INFO:Starting cross validation
2022-09-12 20:33:19,883:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:33:19,969:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:33:19,975:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:19,987:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:33:19,990:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:20,009:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:33:20,014:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:20,022:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:33:20,026:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:20,042:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:33:20,047:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:20,059:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:33:20,065:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:20,075:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:33:20,079:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:20,093:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:33:20,097:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:20,112:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:33:20,116:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:20,128:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:33:20,133:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:20,169:INFO:Calculating mean and std
2022-09-12 20:33:20,173:INFO:Creating metrics dataframe
2022-09-12 20:33:20,181:INFO:Uploading results into container
2022-09-12 20:33:20,183:INFO:Uploading model into container now
2022-09-12 20:33:20,184:INFO:master_model_container: 7
2022-09-12 20:33:20,184:INFO:display_container: 2
2022-09-12 20:33:20,185:INFO:OrthogonalMatchingPursuit()
2022-09-12 20:33:20,185:INFO:create_model() successfully completed......................................
2022-09-12 20:33:20,406:INFO:SubProcess create_model() end ==================================
2022-09-12 20:33:20,407:INFO:Creating metrics dataframe
2022-09-12 20:33:20,433:INFO:Initializing Bayesian Ridge
2022-09-12 20:33:20,434:INFO:Total runtime is 0.2877047618230184 minutes
2022-09-12 20:33:20,443:INFO:SubProcess create_model() called ==================================
2022-09-12 20:33:20,444:INFO:Initializing create_model()
2022-09-12 20:33:20,444:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6519B0D60>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652F44FA0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:33:20,445:INFO:Checking exceptions
2022-09-12 20:33:20,448:INFO:Importing libraries
2022-09-12 20:33:20,449:INFO:Copying training dataset
2022-09-12 20:33:20,458:INFO:Defining folds
2022-09-12 20:33:20,458:INFO:Declaring metric variables
2022-09-12 20:33:20,470:INFO:Importing untrained model
2022-09-12 20:33:20,483:INFO:Bayesian Ridge Imported successfully
2022-09-12 20:33:20,508:INFO:Starting cross validation
2022-09-12 20:33:20,510:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:33:20,634:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:20,637:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:20,658:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:20,676:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:20,695:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:20,715:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:20,735:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:20,746:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:20,769:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:20,779:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:20,805:INFO:Calculating mean and std
2022-09-12 20:33:20,808:INFO:Creating metrics dataframe
2022-09-12 20:33:20,813:INFO:Uploading results into container
2022-09-12 20:33:20,814:INFO:Uploading model into container now
2022-09-12 20:33:20,815:INFO:master_model_container: 8
2022-09-12 20:33:20,815:INFO:display_container: 2
2022-09-12 20:33:20,815:INFO:BayesianRidge()
2022-09-12 20:33:20,816:INFO:create_model() successfully completed......................................
2022-09-12 20:33:20,982:INFO:SubProcess create_model() end ==================================
2022-09-12 20:33:20,982:INFO:Creating metrics dataframe
2022-09-12 20:33:21,001:INFO:Initializing Passive Aggressive Regressor
2022-09-12 20:33:21,001:INFO:Total runtime is 0.2971634070078532 minutes
2022-09-12 20:33:21,009:INFO:SubProcess create_model() called ==================================
2022-09-12 20:33:21,010:INFO:Initializing create_model()
2022-09-12 20:33:21,010:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6519B0D60>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652F44FA0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:33:21,010:INFO:Checking exceptions
2022-09-12 20:33:21,014:INFO:Importing libraries
2022-09-12 20:33:21,015:INFO:Copying training dataset
2022-09-12 20:33:21,023:INFO:Defining folds
2022-09-12 20:33:21,023:INFO:Declaring metric variables
2022-09-12 20:33:21,030:INFO:Importing untrained model
2022-09-12 20:33:21,041:INFO:Passive Aggressive Regressor Imported successfully
2022-09-12 20:33:21,057:INFO:Starting cross validation
2022-09-12 20:33:21,059:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:33:21,146:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:21,160:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:21,177:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:21,188:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:21,201:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:21,221:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:21,239:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:21,255:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:21,270:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:21,291:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:21,310:INFO:Calculating mean and std
2022-09-12 20:33:21,313:INFO:Creating metrics dataframe
2022-09-12 20:33:21,318:INFO:Uploading results into container
2022-09-12 20:33:21,319:INFO:Uploading model into container now
2022-09-12 20:33:21,320:INFO:master_model_container: 9
2022-09-12 20:33:21,320:INFO:display_container: 2
2022-09-12 20:33:21,320:INFO:PassiveAggressiveRegressor(random_state=123)
2022-09-12 20:33:21,321:INFO:create_model() successfully completed......................................
2022-09-12 20:33:21,452:INFO:SubProcess create_model() end ==================================
2022-09-12 20:33:21,452:INFO:Creating metrics dataframe
2022-09-12 20:33:21,479:INFO:Initializing Huber Regressor
2022-09-12 20:33:21,481:INFO:Total runtime is 0.30514223178227745 minutes
2022-09-12 20:33:21,489:INFO:SubProcess create_model() called ==================================
2022-09-12 20:33:21,490:INFO:Initializing create_model()
2022-09-12 20:33:21,490:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6519B0D60>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652F44FA0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:33:21,490:INFO:Checking exceptions
2022-09-12 20:33:21,498:INFO:Importing libraries
2022-09-12 20:33:21,498:INFO:Copying training dataset
2022-09-12 20:33:21,506:INFO:Defining folds
2022-09-12 20:33:21,507:INFO:Declaring metric variables
2022-09-12 20:33:21,515:INFO:Importing untrained model
2022-09-12 20:33:21,529:INFO:Huber Regressor Imported successfully
2022-09-12 20:33:21,544:INFO:Starting cross validation
2022-09-12 20:33:21,545:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:33:21,730:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:33:21,731:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:21,758:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:33:21,759:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:21,774:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:33:21,775:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:21,796:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:33:21,796:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:21,800:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:33:21,801:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:21,807:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:33:21,807:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:21,816:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:33:21,816:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:21,818:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:33:21,818:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:21,862:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:33:21,863:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:21,882:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:33:21,883:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:21,903:INFO:Calculating mean and std
2022-09-12 20:33:21,906:INFO:Creating metrics dataframe
2022-09-12 20:33:21,913:INFO:Uploading results into container
2022-09-12 20:33:21,914:INFO:Uploading model into container now
2022-09-12 20:33:21,915:INFO:master_model_container: 10
2022-09-12 20:33:21,915:INFO:display_container: 2
2022-09-12 20:33:21,915:INFO:HuberRegressor()
2022-09-12 20:33:21,916:INFO:create_model() successfully completed......................................
2022-09-12 20:33:22,065:INFO:SubProcess create_model() end ==================================
2022-09-12 20:33:22,065:INFO:Creating metrics dataframe
2022-09-12 20:33:22,088:INFO:Initializing K Neighbors Regressor
2022-09-12 20:33:22,088:INFO:Total runtime is 0.31528157790501915 minutes
2022-09-12 20:33:22,093:INFO:SubProcess create_model() called ==================================
2022-09-12 20:33:22,093:INFO:Initializing create_model()
2022-09-12 20:33:22,094:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6519B0D60>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652F44FA0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:33:22,094:INFO:Checking exceptions
2022-09-12 20:33:22,097:INFO:Importing libraries
2022-09-12 20:33:22,097:INFO:Copying training dataset
2022-09-12 20:33:22,102:INFO:Defining folds
2022-09-12 20:33:22,102:INFO:Declaring metric variables
2022-09-12 20:33:22,108:INFO:Importing untrained model
2022-09-12 20:33:22,118:INFO:K Neighbors Regressor Imported successfully
2022-09-12 20:33:22,141:INFO:Starting cross validation
2022-09-12 20:33:22,143:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:33:22,228:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:22,239:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:22,257:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:22,274:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:22,293:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:22,312:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:22,324:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:22,351:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:22,370:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:22,388:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:22,430:INFO:Calculating mean and std
2022-09-12 20:33:22,432:INFO:Creating metrics dataframe
2022-09-12 20:33:22,440:INFO:Uploading results into container
2022-09-12 20:33:22,441:INFO:Uploading model into container now
2022-09-12 20:33:22,442:INFO:master_model_container: 11
2022-09-12 20:33:22,442:INFO:display_container: 2
2022-09-12 20:33:22,443:INFO:KNeighborsRegressor(n_jobs=-1)
2022-09-12 20:33:22,443:INFO:create_model() successfully completed......................................
2022-09-12 20:33:22,602:INFO:SubProcess create_model() end ==================================
2022-09-12 20:33:22,603:INFO:Creating metrics dataframe
2022-09-12 20:33:22,628:INFO:Initializing Decision Tree Regressor
2022-09-12 20:33:22,628:INFO:Total runtime is 0.324274218082428 minutes
2022-09-12 20:33:22,635:INFO:SubProcess create_model() called ==================================
2022-09-12 20:33:22,635:INFO:Initializing create_model()
2022-09-12 20:33:22,636:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6519B0D60>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652F44FA0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:33:22,636:INFO:Checking exceptions
2022-09-12 20:33:22,640:INFO:Importing libraries
2022-09-12 20:33:22,640:INFO:Copying training dataset
2022-09-12 20:33:22,647:INFO:Defining folds
2022-09-12 20:33:22,648:INFO:Declaring metric variables
2022-09-12 20:33:22,655:INFO:Importing untrained model
2022-09-12 20:33:22,667:INFO:Decision Tree Regressor Imported successfully
2022-09-12 20:33:22,689:INFO:Starting cross validation
2022-09-12 20:33:22,692:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:33:22,767:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:22,786:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:22,795:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:22,818:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:22,831:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:22,847:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:22,857:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:22,882:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:22,889:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:22,904:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:22,925:INFO:Calculating mean and std
2022-09-12 20:33:22,928:INFO:Creating metrics dataframe
2022-09-12 20:33:22,933:INFO:Uploading results into container
2022-09-12 20:33:22,934:INFO:Uploading model into container now
2022-09-12 20:33:22,935:INFO:master_model_container: 12
2022-09-12 20:33:22,935:INFO:display_container: 2
2022-09-12 20:33:22,935:INFO:DecisionTreeRegressor(random_state=123)
2022-09-12 20:33:22,936:INFO:create_model() successfully completed......................................
2022-09-12 20:33:23,072:INFO:SubProcess create_model() end ==================================
2022-09-12 20:33:23,072:INFO:Creating metrics dataframe
2022-09-12 20:33:23,092:INFO:Initializing Random Forest Regressor
2022-09-12 20:33:23,092:INFO:Total runtime is 0.3320142428080241 minutes
2022-09-12 20:33:23,098:INFO:SubProcess create_model() called ==================================
2022-09-12 20:33:23,099:INFO:Initializing create_model()
2022-09-12 20:33:23,099:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6519B0D60>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652F44FA0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:33:23,099:INFO:Checking exceptions
2022-09-12 20:33:23,102:INFO:Importing libraries
2022-09-12 20:33:23,103:INFO:Copying training dataset
2022-09-12 20:33:23,110:INFO:Defining folds
2022-09-12 20:33:23,111:INFO:Declaring metric variables
2022-09-12 20:33:23,119:INFO:Importing untrained model
2022-09-12 20:33:23,135:INFO:Random Forest Regressor Imported successfully
2022-09-12 20:33:23,151:INFO:Starting cross validation
2022-09-12 20:33:23,153:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:33:23,635:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:23,651:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:23,667:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:23,729:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:23,776:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:23,823:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:23,885:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:24,057:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:24,057:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:24,120:INFO:Calculating mean and std
2022-09-12 20:33:24,120:INFO:Creating metrics dataframe
2022-09-12 20:33:24,141:INFO:Uploading results into container
2022-09-12 20:33:24,142:INFO:Uploading model into container now
2022-09-12 20:33:24,143:INFO:master_model_container: 13
2022-09-12 20:33:24,144:INFO:display_container: 2
2022-09-12 20:33:24,145:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-09-12 20:33:24,145:INFO:create_model() successfully completed......................................
2022-09-12 20:33:24,280:INFO:SubProcess create_model() end ==================================
2022-09-12 20:33:24,280:INFO:Creating metrics dataframe
2022-09-12 20:33:24,312:INFO:Initializing Extra Trees Regressor
2022-09-12 20:33:24,312:INFO:Total runtime is 0.3523332913716634 minutes
2022-09-12 20:33:24,312:INFO:SubProcess create_model() called ==================================
2022-09-12 20:33:24,312:INFO:Initializing create_model()
2022-09-12 20:33:24,312:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6519B0D60>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652F44FA0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:33:24,312:INFO:Checking exceptions
2022-09-12 20:33:24,312:INFO:Importing libraries
2022-09-12 20:33:24,312:INFO:Copying training dataset
2022-09-12 20:33:24,327:INFO:Defining folds
2022-09-12 20:33:24,327:INFO:Declaring metric variables
2022-09-12 20:33:24,337:INFO:Importing untrained model
2022-09-12 20:33:24,347:INFO:Extra Trees Regressor Imported successfully
2022-09-12 20:33:24,360:INFO:Starting cross validation
2022-09-12 20:33:24,363:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:33:24,704:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:24,720:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:24,720:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:24,736:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:24,767:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:24,845:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:24,876:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:24,892:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:25,064:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:25,064:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:25,110:INFO:Calculating mean and std
2022-09-12 20:33:25,110:INFO:Creating metrics dataframe
2022-09-12 20:33:25,119:INFO:Uploading results into container
2022-09-12 20:33:25,120:INFO:Uploading model into container now
2022-09-12 20:33:25,121:INFO:master_model_container: 14
2022-09-12 20:33:25,121:INFO:display_container: 2
2022-09-12 20:33:25,121:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-09-12 20:33:25,121:INFO:create_model() successfully completed......................................
2022-09-12 20:33:25,256:INFO:SubProcess create_model() end ==================================
2022-09-12 20:33:25,256:INFO:Creating metrics dataframe
2022-09-12 20:33:25,271:INFO:Initializing AdaBoost Regressor
2022-09-12 20:33:25,271:INFO:Total runtime is 0.3683278242746989 minutes
2022-09-12 20:33:25,287:INFO:SubProcess create_model() called ==================================
2022-09-12 20:33:25,287:INFO:Initializing create_model()
2022-09-12 20:33:25,287:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6519B0D60>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652F44FA0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:33:25,287:INFO:Checking exceptions
2022-09-12 20:33:25,287:INFO:Importing libraries
2022-09-12 20:33:25,287:INFO:Copying training dataset
2022-09-12 20:33:25,287:INFO:Defining folds
2022-09-12 20:33:25,287:INFO:Declaring metric variables
2022-09-12 20:33:25,306:INFO:Importing untrained model
2022-09-12 20:33:25,314:INFO:AdaBoost Regressor Imported successfully
2022-09-12 20:33:25,328:INFO:Starting cross validation
2022-09-12 20:33:25,330:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:33:25,529:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:25,560:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:25,591:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:25,622:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:25,638:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:25,653:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:25,653:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:25,685:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:25,747:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:25,763:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:25,794:INFO:Calculating mean and std
2022-09-12 20:33:25,794:INFO:Creating metrics dataframe
2022-09-12 20:33:25,794:INFO:Uploading results into container
2022-09-12 20:33:25,794:INFO:Uploading model into container now
2022-09-12 20:33:25,794:INFO:master_model_container: 15
2022-09-12 20:33:25,794:INFO:display_container: 2
2022-09-12 20:33:25,794:INFO:AdaBoostRegressor(random_state=123)
2022-09-12 20:33:25,794:INFO:create_model() successfully completed......................................
2022-09-12 20:33:25,938:INFO:SubProcess create_model() end ==================================
2022-09-12 20:33:25,938:INFO:Creating metrics dataframe
2022-09-12 20:33:25,953:INFO:Initializing Gradient Boosting Regressor
2022-09-12 20:33:25,953:INFO:Total runtime is 0.37969541549682617 minutes
2022-09-12 20:33:25,953:INFO:SubProcess create_model() called ==================================
2022-09-12 20:33:25,953:INFO:Initializing create_model()
2022-09-12 20:33:25,953:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6519B0D60>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652F44FA0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:33:25,953:INFO:Checking exceptions
2022-09-12 20:33:25,969:INFO:Importing libraries
2022-09-12 20:33:25,969:INFO:Copying training dataset
2022-09-12 20:33:25,969:INFO:Defining folds
2022-09-12 20:33:25,969:INFO:Declaring metric variables
2022-09-12 20:33:25,969:INFO:Importing untrained model
2022-09-12 20:33:25,988:INFO:Gradient Boosting Regressor Imported successfully
2022-09-12 20:33:26,005:INFO:Starting cross validation
2022-09-12 20:33:26,006:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:33:26,153:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:26,169:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:26,200:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:26,231:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:26,231:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:26,231:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:26,247:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:26,309:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:26,309:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:26,324:INFO:Calculating mean and std
2022-09-12 20:33:26,324:INFO:Creating metrics dataframe
2022-09-12 20:33:26,342:INFO:Uploading results into container
2022-09-12 20:33:26,343:INFO:Uploading model into container now
2022-09-12 20:33:26,344:INFO:master_model_container: 16
2022-09-12 20:33:26,345:INFO:display_container: 2
2022-09-12 20:33:26,346:INFO:GradientBoostingRegressor(random_state=123)
2022-09-12 20:33:26,346:INFO:create_model() successfully completed......................................
2022-09-12 20:33:26,485:INFO:SubProcess create_model() end ==================================
2022-09-12 20:33:26,485:INFO:Creating metrics dataframe
2022-09-12 20:33:26,517:INFO:Initializing Light Gradient Boosting Machine
2022-09-12 20:33:26,517:INFO:Total runtime is 0.3890838623046875 minutes
2022-09-12 20:33:26,517:INFO:SubProcess create_model() called ==================================
2022-09-12 20:33:26,517:INFO:Initializing create_model()
2022-09-12 20:33:26,517:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6519B0D60>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652F44FA0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:33:26,517:INFO:Checking exceptions
2022-09-12 20:33:26,517:INFO:Importing libraries
2022-09-12 20:33:26,517:INFO:Copying training dataset
2022-09-12 20:33:26,532:INFO:Defining folds
2022-09-12 20:33:26,532:INFO:Declaring metric variables
2022-09-12 20:33:26,532:INFO:Importing untrained model
2022-09-12 20:33:26,548:INFO:Light Gradient Boosting Machine Imported successfully
2022-09-12 20:33:26,568:INFO:Starting cross validation
2022-09-12 20:33:26,569:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:33:29,672:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:29,673:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:29,696:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:29,745:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:29,772:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:29,779:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:29,781:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:29,785:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:29,789:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:29,860:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:29,877:INFO:Calculating mean and std
2022-09-12 20:33:29,880:INFO:Creating metrics dataframe
2022-09-12 20:33:29,885:INFO:Uploading results into container
2022-09-12 20:33:29,886:INFO:Uploading model into container now
2022-09-12 20:33:29,887:INFO:master_model_container: 17
2022-09-12 20:33:29,887:INFO:display_container: 2
2022-09-12 20:33:29,888:INFO:LGBMRegressor(random_state=123)
2022-09-12 20:33:29,888:INFO:create_model() successfully completed......................................
2022-09-12 20:33:30,010:INFO:SubProcess create_model() end ==================================
2022-09-12 20:33:30,011:INFO:Creating metrics dataframe
2022-09-12 20:33:30,031:INFO:Initializing Dummy Regressor
2022-09-12 20:33:30,031:INFO:Total runtime is 0.44765759706497193 minutes
2022-09-12 20:33:30,037:INFO:SubProcess create_model() called ==================================
2022-09-12 20:33:30,038:INFO:Initializing create_model()
2022-09-12 20:33:30,038:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6519B0D60>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652F44FA0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:33:30,038:INFO:Checking exceptions
2022-09-12 20:33:30,042:INFO:Importing libraries
2022-09-12 20:33:30,042:INFO:Copying training dataset
2022-09-12 20:33:30,049:INFO:Defining folds
2022-09-12 20:33:30,049:INFO:Declaring metric variables
2022-09-12 20:33:30,055:INFO:Importing untrained model
2022-09-12 20:33:30,064:INFO:Dummy Regressor Imported successfully
2022-09-12 20:33:30,082:INFO:Starting cross validation
2022-09-12 20:33:30,084:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:33:30,165:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:30,181:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:30,194:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:30,211:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:30,227:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:30,242:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:30,268:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:30,279:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:30,295:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:30,305:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:33:30,323:INFO:Calculating mean and std
2022-09-12 20:33:30,325:INFO:Creating metrics dataframe
2022-09-12 20:33:30,330:INFO:Uploading results into container
2022-09-12 20:33:30,331:INFO:Uploading model into container now
2022-09-12 20:33:30,332:INFO:master_model_container: 18
2022-09-12 20:33:30,332:INFO:display_container: 2
2022-09-12 20:33:30,332:INFO:DummyRegressor()
2022-09-12 20:33:30,332:INFO:create_model() successfully completed......................................
2022-09-12 20:33:30,480:INFO:SubProcess create_model() end ==================================
2022-09-12 20:33:30,480:INFO:Creating metrics dataframe
2022-09-12 20:33:30,525:INFO:Initializing create_model()
2022-09-12 20:33:30,525:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F6519B0D60>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:33:30,525:INFO:Checking exceptions
2022-09-12 20:33:30,531:INFO:Importing libraries
2022-09-12 20:33:30,532:INFO:Copying training dataset
2022-09-12 20:33:30,536:INFO:Defining folds
2022-09-12 20:33:30,537:INFO:Declaring metric variables
2022-09-12 20:33:30,537:INFO:Importing untrained model
2022-09-12 20:33:30,538:INFO:Declaring custom model
2022-09-12 20:33:30,538:INFO:Huber Regressor Imported successfully
2022-09-12 20:33:30,539:INFO:Cross validation set to False
2022-09-12 20:33:30,539:INFO:Fitting Model
2022-09-12 20:33:30,733:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:33:30,734:INFO:HuberRegressor()
2022-09-12 20:33:30,734:INFO:create_model() successfully completed......................................
2022-09-12 20:33:30,916:INFO:master_model_container: 18
2022-09-12 20:33:30,916:INFO:display_container: 2
2022-09-12 20:33:30,917:INFO:HuberRegressor()
2022-09-12 20:33:30,917:INFO:compare_models() successfully completed......................................
2022-09-12 20:34:12,240:INFO:PyCaret RegressionExperiment
2022-09-12 20:34:12,240:INFO:Logging name: reg-default-name
2022-09-12 20:34:12,240:INFO:ML Usecase: MLUsecase.REGRESSION
2022-09-12 20:34:12,240:INFO:version 3.0.0.rc3
2022-09-12 20:34:12,240:INFO:Initializing setup()
2022-09-12 20:34:12,240:INFO:self.USI: 7bfb
2022-09-12 20:34:12,240:INFO:self.variable_keys: {'_ml_usecase', 'display_container', 'y_train', 'USI', '_all_metrics', 'fold_generator', 'exp_name_log', 'logging_param', 'y_test', 'log_plots_param', 'fold_shuffle_param', 'fold_groups_param', '_all_models_internal', 'transform_target_method_param', 'n_jobs_param', 'exp_id', 'gpu_param', 'seed', 'X_test', 'data', 'X_train', 'X', 'pipeline', 'master_model_container', 'y', '_all_models', 'memory', 'target_param', 'html_param', 'transform_target_param', '_available_plots', 'variable_keys', '_gpu_n_jobs_param', 'idx'}
2022-09-12 20:34:12,240:INFO:Checking environment
2022-09-12 20:34:12,240:INFO:python_version: 3.9.12
2022-09-12 20:34:12,240:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-09-12 20:34:12,240:INFO:machine: AMD64
2022-09-12 20:34:12,240:INFO:platform: Windows-10-10.0.22000-SP0
2022-09-12 20:34:12,240:INFO:Memory: svmem(total=12710350848, available=2637570048, percent=79.2, used=10072780800, free=2637570048)
2022-09-12 20:34:12,240:INFO:Physical Core: 4
2022-09-12 20:34:12,240:INFO:Logical Core: 8
2022-09-12 20:34:12,240:INFO:Checking libraries
2022-09-12 20:34:12,240:INFO:System:
2022-09-12 20:34:12,240:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2022-09-12 20:34:12,240:INFO:executable: C:\Users\saint\anaconda3\python.exe
2022-09-12 20:34:12,240:INFO:   machine: Windows-10-10.0.22000-SP0
2022-09-12 20:34:12,240:INFO:PyCaret required dependencies:
2022-09-12 20:34:12,240:INFO:                 pip: 22.1.2
2022-09-12 20:34:12,240:INFO:          setuptools: 63.4.1
2022-09-12 20:34:12,240:INFO:             pycaret: 3.0.0.rc3
2022-09-12 20:34:12,240:INFO:             IPython: 7.31.1
2022-09-12 20:34:12,240:INFO:          ipywidgets: 7.6.5
2022-09-12 20:34:12,240:INFO:                tqdm: 4.64.0
2022-09-12 20:34:12,240:INFO:               numpy: 1.21.5
2022-09-12 20:34:12,240:INFO:              pandas: 1.4.3
2022-09-12 20:34:12,240:INFO:              jinja2: 2.11.3
2022-09-12 20:34:12,240:INFO:               scipy: 1.7.3
2022-09-12 20:34:12,240:INFO:              joblib: 1.1.0
2022-09-12 20:34:12,240:INFO:             sklearn: 1.1.1
2022-09-12 20:34:12,240:INFO:                pyod: Installed but version unavailable
2022-09-12 20:34:12,240:INFO:            imblearn: 0.9.1
2022-09-12 20:34:12,240:INFO:   category_encoders: 2.5.0
2022-09-12 20:34:12,240:INFO:            lightgbm: 3.3.2
2022-09-12 20:34:12,240:INFO:               numba: 0.55.1
2022-09-12 20:34:12,240:INFO:            requests: 2.28.1
2022-09-12 20:34:12,240:INFO:          matplotlib: 3.5.2
2022-09-12 20:34:12,240:INFO:          scikitplot: 0.3.7
2022-09-12 20:34:12,240:INFO:         yellowbrick: 1.5
2022-09-12 20:34:12,240:INFO:              plotly: 5.9.0
2022-09-12 20:34:12,240:INFO:             kaleido: 0.2.1
2022-09-12 20:34:12,240:INFO:         statsmodels: 0.13.2
2022-09-12 20:34:12,240:INFO:              sktime: 0.11.4
2022-09-12 20:34:12,240:INFO:               tbats: Installed but version unavailable
2022-09-12 20:34:12,240:INFO:            pmdarima: 2.0.1
2022-09-12 20:34:12,240:INFO:              psutil: 5.9.0
2022-09-12 20:34:12,240:INFO:None
2022-09-12 20:34:12,240:INFO:Set up data.
2022-09-12 20:34:12,256:INFO:Set up train/test split.
2022-09-12 20:34:12,271:INFO:Set up folding strategy.
2022-09-12 20:34:12,271:INFO:Assigning column types.
2022-09-12 20:34:12,279:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-09-12 20:34:12,279:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-09-12 20:34:12,288:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:34:12,304:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:34:12,460:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:34:12,554:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:34:12,554:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:12,554:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:12,554:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-09-12 20:34:12,569:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:34:12,569:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:34:12,918:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:34:13,003:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:34:13,003:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:13,003:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:13,003:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-09-12 20:34:13,018:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:34:13,018:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:34:13,112:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:34:13,170:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:34:13,170:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:13,170:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:13,186:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:34:13,186:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:34:13,264:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:34:13,342:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:34:13,342:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:13,342:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:13,342:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-09-12 20:34:13,357:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:34:13,451:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:34:13,514:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:34:13,514:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:13,514:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:13,529:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:34:13,607:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:34:13,670:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:34:13,670:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:13,670:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:13,670:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-09-12 20:34:13,764:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:34:13,826:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:34:13,826:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:13,826:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:13,904:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:34:13,967:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:34:13,967:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:13,967:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:13,967:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-09-12 20:34:14,045:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:34:14,092:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:14,092:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:14,170:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:34:14,217:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:14,217:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:14,217:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-09-12 20:34:14,357:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:14,357:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:14,513:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:14,513:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:14,513:INFO:Preparing preprocessing pipeline...
2022-09-12 20:34:14,513:INFO:Set up simple imputation.
2022-09-12 20:34:14,513:INFO:Set up variance threshold.
2022-09-12 20:34:14,545:INFO:Finished creating preprocessing pipeline.
2022-09-12 20:34:14,545:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\saint\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['dosis_IC_ppm', 'CO2_gas'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-09-12 20:34:14,545:INFO:Creating final display dataframe.
2022-09-12 20:34:14,638:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target               mpy
2              Target type        Regression
3               Data shape          (77, 11)
4         Train data shape          (53, 11)
5          Test data shape          (24, 11)
6         Numeric features                 2
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU             False
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              7bfb
2022-09-12 20:34:14,819:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:14,819:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:14,978:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:14,978:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:14,993:INFO:setup() successfully completed in 2.75s...............
2022-09-12 20:34:16,908:INFO:Initializing compare_models()
2022-09-12 20:34:16,908:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652622490>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001F652622490>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-09-12 20:34:16,908:INFO:Checking exceptions
2022-09-12 20:34:16,908:INFO:Preparing display monitor
2022-09-12 20:34:16,973:INFO:Initializing Linear Regression
2022-09-12 20:34:16,973:INFO:Total runtime is 0.0 minutes
2022-09-12 20:34:16,980:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:16,981:INFO:Initializing create_model()
2022-09-12 20:34:16,981:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652622490>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652600CD0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:16,981:INFO:Checking exceptions
2022-09-12 20:34:16,984:INFO:Importing libraries
2022-09-12 20:34:16,984:INFO:Copying training dataset
2022-09-12 20:34:16,989:INFO:Defining folds
2022-09-12 20:34:16,990:INFO:Declaring metric variables
2022-09-12 20:34:16,995:INFO:Importing untrained model
2022-09-12 20:34:17,001:INFO:Linear Regression Imported successfully
2022-09-12 20:34:17,011:INFO:Starting cross validation
2022-09-12 20:34:17,016:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:17,074:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:17,078:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:17,107:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:17,119:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:17,121:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:17,137:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:17,152:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:17,168:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:17,184:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:17,199:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:17,215:INFO:Calculating mean and std
2022-09-12 20:34:17,215:INFO:Creating metrics dataframe
2022-09-12 20:34:17,215:INFO:Uploading results into container
2022-09-12 20:34:17,215:INFO:Uploading model into container now
2022-09-12 20:34:17,215:INFO:master_model_container: 1
2022-09-12 20:34:17,215:INFO:display_container: 2
2022-09-12 20:34:17,215:INFO:LinearRegression(n_jobs=-1)
2022-09-12 20:34:17,215:INFO:create_model() successfully completed......................................
2022-09-12 20:34:17,436:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:17,436:INFO:Creating metrics dataframe
2022-09-12 20:34:17,469:INFO:Initializing Lasso Regression
2022-09-12 20:34:17,469:INFO:Total runtime is 0.008274714152018229 minutes
2022-09-12 20:34:17,469:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:17,469:INFO:Initializing create_model()
2022-09-12 20:34:17,469:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652622490>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652600CD0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:17,469:INFO:Checking exceptions
2022-09-12 20:34:17,485:INFO:Importing libraries
2022-09-12 20:34:17,485:INFO:Copying training dataset
2022-09-12 20:34:17,485:INFO:Defining folds
2022-09-12 20:34:17,485:INFO:Declaring metric variables
2022-09-12 20:34:17,501:INFO:Importing untrained model
2022-09-12 20:34:17,501:INFO:Lasso Regression Imported successfully
2022-09-12 20:34:17,516:INFO:Starting cross validation
2022-09-12 20:34:17,516:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:17,611:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:17,627:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:17,652:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:17,667:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:17,699:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:17,714:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:17,730:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:17,748:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:17,773:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:17,789:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:17,820:INFO:Calculating mean and std
2022-09-12 20:34:17,820:INFO:Creating metrics dataframe
2022-09-12 20:34:17,820:INFO:Uploading results into container
2022-09-12 20:34:17,820:INFO:Uploading model into container now
2022-09-12 20:34:17,820:INFO:master_model_container: 2
2022-09-12 20:34:17,820:INFO:display_container: 2
2022-09-12 20:34:17,820:INFO:Lasso(random_state=123)
2022-09-12 20:34:17,820:INFO:create_model() successfully completed......................................
2022-09-12 20:34:17,945:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:17,945:INFO:Creating metrics dataframe
2022-09-12 20:34:17,961:INFO:Initializing Ridge Regression
2022-09-12 20:34:17,961:INFO:Total runtime is 0.01646726131439209 minutes
2022-09-12 20:34:17,961:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:17,961:INFO:Initializing create_model()
2022-09-12 20:34:17,961:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652622490>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652600CD0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:17,961:INFO:Checking exceptions
2022-09-12 20:34:17,977:INFO:Importing libraries
2022-09-12 20:34:17,977:INFO:Copying training dataset
2022-09-12 20:34:17,977:INFO:Defining folds
2022-09-12 20:34:17,977:INFO:Declaring metric variables
2022-09-12 20:34:17,977:INFO:Importing untrained model
2022-09-12 20:34:17,992:INFO:Ridge Regression Imported successfully
2022-09-12 20:34:17,992:INFO:Starting cross validation
2022-09-12 20:34:18,008:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:18,055:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:18,070:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:18,086:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:18,102:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:18,117:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:18,117:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:18,148:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:18,148:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:18,164:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:18,180:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:18,195:INFO:Calculating mean and std
2022-09-12 20:34:18,195:INFO:Creating metrics dataframe
2022-09-12 20:34:18,211:INFO:Uploading results into container
2022-09-12 20:34:18,211:INFO:Uploading model into container now
2022-09-12 20:34:18,211:INFO:master_model_container: 3
2022-09-12 20:34:18,211:INFO:display_container: 2
2022-09-12 20:34:18,211:INFO:Ridge(random_state=123)
2022-09-12 20:34:18,211:INFO:create_model() successfully completed......................................
2022-09-12 20:34:18,351:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:18,351:INFO:Creating metrics dataframe
2022-09-12 20:34:18,351:INFO:Initializing Elastic Net
2022-09-12 20:34:18,351:INFO:Total runtime is 0.022975548108418783 minutes
2022-09-12 20:34:18,367:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:18,367:INFO:Initializing create_model()
2022-09-12 20:34:18,367:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652622490>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652600CD0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:18,367:INFO:Checking exceptions
2022-09-12 20:34:18,367:INFO:Importing libraries
2022-09-12 20:34:18,367:INFO:Copying training dataset
2022-09-12 20:34:18,367:INFO:Defining folds
2022-09-12 20:34:18,367:INFO:Declaring metric variables
2022-09-12 20:34:18,383:INFO:Importing untrained model
2022-09-12 20:34:18,383:INFO:Elastic Net Imported successfully
2022-09-12 20:34:18,398:INFO:Starting cross validation
2022-09-12 20:34:18,398:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:18,480:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:18,505:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:18,528:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:18,543:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:18,555:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:18,570:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:18,586:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:18,601:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:18,617:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:18,633:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:18,648:INFO:Calculating mean and std
2022-09-12 20:34:18,648:INFO:Creating metrics dataframe
2022-09-12 20:34:18,664:INFO:Uploading results into container
2022-09-12 20:34:18,664:INFO:Uploading model into container now
2022-09-12 20:34:18,664:INFO:master_model_container: 4
2022-09-12 20:34:18,664:INFO:display_container: 2
2022-09-12 20:34:18,664:INFO:ElasticNet(random_state=123)
2022-09-12 20:34:18,664:INFO:create_model() successfully completed......................................
2022-09-12 20:34:18,801:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:18,801:INFO:Creating metrics dataframe
2022-09-12 20:34:18,817:INFO:Initializing Least Angle Regression
2022-09-12 20:34:18,817:INFO:Total runtime is 0.03073071638743083 minutes
2022-09-12 20:34:18,817:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:18,832:INFO:Initializing create_model()
2022-09-12 20:34:18,832:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652622490>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652600CD0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:18,832:INFO:Checking exceptions
2022-09-12 20:34:18,832:INFO:Importing libraries
2022-09-12 20:34:18,832:INFO:Copying training dataset
2022-09-12 20:34:18,832:INFO:Defining folds
2022-09-12 20:34:18,832:INFO:Declaring metric variables
2022-09-12 20:34:18,832:INFO:Importing untrained model
2022-09-12 20:34:18,854:INFO:Least Angle Regression Imported successfully
2022-09-12 20:34:18,873:INFO:Starting cross validation
2022-09-12 20:34:18,874:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:18,934:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:18,949:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:18,965:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:18,965:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:18,965:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:18,980:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:18,996:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:18,996:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:19,012:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:19,012:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:19,027:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:19,027:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:19,043:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:19,043:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:19,059:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:19,059:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:19,059:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:19,074:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:19,074:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:19,090:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:19,105:INFO:Calculating mean and std
2022-09-12 20:34:19,105:INFO:Creating metrics dataframe
2022-09-12 20:34:19,105:INFO:Uploading results into container
2022-09-12 20:34:19,105:INFO:Uploading model into container now
2022-09-12 20:34:19,121:INFO:master_model_container: 5
2022-09-12 20:34:19,121:INFO:display_container: 2
2022-09-12 20:34:19,121:INFO:Lars(random_state=123)
2022-09-12 20:34:19,121:INFO:create_model() successfully completed......................................
2022-09-12 20:34:19,254:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:19,254:INFO:Creating metrics dataframe
2022-09-12 20:34:19,270:INFO:Initializing Lasso Least Angle Regression
2022-09-12 20:34:19,270:INFO:Total runtime is 0.038286256790161136 minutes
2022-09-12 20:34:19,270:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:19,270:INFO:Initializing create_model()
2022-09-12 20:34:19,270:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652622490>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652600CD0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:19,270:INFO:Checking exceptions
2022-09-12 20:34:19,270:INFO:Importing libraries
2022-09-12 20:34:19,270:INFO:Copying training dataset
2022-09-12 20:34:19,286:INFO:Defining folds
2022-09-12 20:34:19,286:INFO:Declaring metric variables
2022-09-12 20:34:19,298:INFO:Importing untrained model
2022-09-12 20:34:19,306:INFO:Lasso Least Angle Regression Imported successfully
2022-09-12 20:34:19,318:INFO:Starting cross validation
2022-09-12 20:34:19,320:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:19,384:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:34:19,384:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:19,415:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:34:19,416:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:19,421:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:34:19,421:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:19,436:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:34:19,436:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:19,452:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:34:19,452:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:19,468:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:34:19,468:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:19,483:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:34:19,483:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:19,515:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:34:19,515:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:19,530:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:34:19,530:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:19,530:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:34:19,530:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:19,561:INFO:Calculating mean and std
2022-09-12 20:34:19,561:INFO:Creating metrics dataframe
2022-09-12 20:34:19,577:INFO:Uploading results into container
2022-09-12 20:34:19,577:INFO:Uploading model into container now
2022-09-12 20:34:19,577:INFO:master_model_container: 6
2022-09-12 20:34:19,577:INFO:display_container: 2
2022-09-12 20:34:19,577:INFO:LassoLars(random_state=123)
2022-09-12 20:34:19,577:INFO:create_model() successfully completed......................................
2022-09-12 20:34:19,718:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:19,718:INFO:Creating metrics dataframe
2022-09-12 20:34:19,734:INFO:Initializing Orthogonal Matching Pursuit
2022-09-12 20:34:19,734:INFO:Total runtime is 0.046014153957366945 minutes
2022-09-12 20:34:19,734:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:19,734:INFO:Initializing create_model()
2022-09-12 20:34:19,734:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652622490>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652600CD0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:19,734:INFO:Checking exceptions
2022-09-12 20:34:19,734:INFO:Importing libraries
2022-09-12 20:34:19,734:INFO:Copying training dataset
2022-09-12 20:34:19,749:INFO:Defining folds
2022-09-12 20:34:19,749:INFO:Declaring metric variables
2022-09-12 20:34:19,763:INFO:Importing untrained model
2022-09-12 20:34:19,773:INFO:Orthogonal Matching Pursuit Imported successfully
2022-09-12 20:34:19,793:INFO:Starting cross validation
2022-09-12 20:34:19,796:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:19,872:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:19,875:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:19,897:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:19,901:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:19,909:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:19,912:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:19,924:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:19,928:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:19,942:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:19,947:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:19,962:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:19,967:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:19,975:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:19,980:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:19,995:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:19,998:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:20,001:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:20,003:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:20,017:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:20,019:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:20,040:INFO:Calculating mean and std
2022-09-12 20:34:20,044:INFO:Creating metrics dataframe
2022-09-12 20:34:20,051:INFO:Uploading results into container
2022-09-12 20:34:20,052:INFO:Uploading model into container now
2022-09-12 20:34:20,052:INFO:master_model_container: 7
2022-09-12 20:34:20,052:INFO:display_container: 2
2022-09-12 20:34:20,053:INFO:OrthogonalMatchingPursuit()
2022-09-12 20:34:20,053:INFO:create_model() successfully completed......................................
2022-09-12 20:34:20,188:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:20,188:INFO:Creating metrics dataframe
2022-09-12 20:34:20,210:INFO:Initializing Bayesian Ridge
2022-09-12 20:34:20,210:INFO:Total runtime is 0.05395112832387289 minutes
2022-09-12 20:34:20,216:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:20,216:INFO:Initializing create_model()
2022-09-12 20:34:20,216:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652622490>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652600CD0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:20,216:INFO:Checking exceptions
2022-09-12 20:34:20,219:INFO:Importing libraries
2022-09-12 20:34:20,219:INFO:Copying training dataset
2022-09-12 20:34:20,224:INFO:Defining folds
2022-09-12 20:34:20,224:INFO:Declaring metric variables
2022-09-12 20:34:20,230:INFO:Importing untrained model
2022-09-12 20:34:20,238:INFO:Bayesian Ridge Imported successfully
2022-09-12 20:34:20,253:INFO:Starting cross validation
2022-09-12 20:34:20,255:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:20,345:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:20,361:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:20,381:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:20,399:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:20,412:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:20,436:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:20,452:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:20,475:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:20,493:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:20,507:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:20,531:INFO:Calculating mean and std
2022-09-12 20:34:20,533:INFO:Creating metrics dataframe
2022-09-12 20:34:20,539:INFO:Uploading results into container
2022-09-12 20:34:20,540:INFO:Uploading model into container now
2022-09-12 20:34:20,540:INFO:master_model_container: 8
2022-09-12 20:34:20,541:INFO:display_container: 2
2022-09-12 20:34:20,541:INFO:BayesianRidge()
2022-09-12 20:34:20,541:INFO:create_model() successfully completed......................................
2022-09-12 20:34:20,681:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:20,681:INFO:Creating metrics dataframe
2022-09-12 20:34:20,698:INFO:Initializing Passive Aggressive Regressor
2022-09-12 20:34:20,698:INFO:Total runtime is 0.06209097703297933 minutes
2022-09-12 20:34:20,705:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:20,706:INFO:Initializing create_model()
2022-09-12 20:34:20,706:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652622490>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652600CD0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:20,707:INFO:Checking exceptions
2022-09-12 20:34:20,711:INFO:Importing libraries
2022-09-12 20:34:20,711:INFO:Copying training dataset
2022-09-12 20:34:20,718:INFO:Defining folds
2022-09-12 20:34:20,718:INFO:Declaring metric variables
2022-09-12 20:34:20,728:INFO:Importing untrained model
2022-09-12 20:34:20,739:INFO:Passive Aggressive Regressor Imported successfully
2022-09-12 20:34:20,756:INFO:Starting cross validation
2022-09-12 20:34:20,758:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:20,842:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:20,862:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:20,873:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:20,879:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:20,893:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:20,910:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:20,926:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:20,944:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:20,958:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:20,969:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:20,985:INFO:Calculating mean and std
2022-09-12 20:34:20,987:INFO:Creating metrics dataframe
2022-09-12 20:34:20,992:INFO:Uploading results into container
2022-09-12 20:34:20,993:INFO:Uploading model into container now
2022-09-12 20:34:20,994:INFO:master_model_container: 9
2022-09-12 20:34:20,994:INFO:display_container: 2
2022-09-12 20:34:20,995:INFO:PassiveAggressiveRegressor(random_state=123)
2022-09-12 20:34:20,995:INFO:create_model() successfully completed......................................
2022-09-12 20:34:21,126:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:21,126:INFO:Creating metrics dataframe
2022-09-12 20:34:21,143:INFO:Initializing Huber Regressor
2022-09-12 20:34:21,143:INFO:Total runtime is 0.06949703693389893 minutes
2022-09-12 20:34:21,148:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:21,148:INFO:Initializing create_model()
2022-09-12 20:34:21,148:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652622490>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652600CD0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:21,149:INFO:Checking exceptions
2022-09-12 20:34:21,152:INFO:Importing libraries
2022-09-12 20:34:21,152:INFO:Copying training dataset
2022-09-12 20:34:21,157:INFO:Defining folds
2022-09-12 20:34:21,157:INFO:Declaring metric variables
2022-09-12 20:34:21,163:INFO:Importing untrained model
2022-09-12 20:34:21,171:INFO:Huber Regressor Imported successfully
2022-09-12 20:34:21,182:INFO:Starting cross validation
2022-09-12 20:34:21,183:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:21,304:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:34:21,304:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:21,334:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:34:21,334:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:21,336:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:34:21,337:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:21,340:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:34:21,341:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:21,366:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:34:21,366:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:21,385:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:34:21,385:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:21,404:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:34:21,404:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:21,410:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:34:21,410:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:21,448:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:34:21,448:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:21,462:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:34:21,462:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:21,487:INFO:Calculating mean and std
2022-09-12 20:34:21,491:INFO:Creating metrics dataframe
2022-09-12 20:34:21,499:INFO:Uploading results into container
2022-09-12 20:34:21,500:INFO:Uploading model into container now
2022-09-12 20:34:21,500:INFO:master_model_container: 10
2022-09-12 20:34:21,501:INFO:display_container: 2
2022-09-12 20:34:21,501:INFO:HuberRegressor()
2022-09-12 20:34:21,501:INFO:create_model() successfully completed......................................
2022-09-12 20:34:21,643:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:21,643:INFO:Creating metrics dataframe
2022-09-12 20:34:21,665:INFO:Initializing K Neighbors Regressor
2022-09-12 20:34:21,666:INFO:Total runtime is 0.07821689049402873 minutes
2022-09-12 20:34:21,672:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:21,672:INFO:Initializing create_model()
2022-09-12 20:34:21,672:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652622490>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652600CD0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:21,673:INFO:Checking exceptions
2022-09-12 20:34:21,676:INFO:Importing libraries
2022-09-12 20:34:21,677:INFO:Copying training dataset
2022-09-12 20:34:21,686:INFO:Defining folds
2022-09-12 20:34:21,687:INFO:Declaring metric variables
2022-09-12 20:34:21,697:INFO:Importing untrained model
2022-09-12 20:34:21,711:INFO:K Neighbors Regressor Imported successfully
2022-09-12 20:34:21,730:INFO:Starting cross validation
2022-09-12 20:34:21,731:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:21,801:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:21,812:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:21,838:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:21,859:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:21,873:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:21,888:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:21,899:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:21,916:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:21,935:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:21,946:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:21,978:INFO:Calculating mean and std
2022-09-12 20:34:21,980:INFO:Creating metrics dataframe
2022-09-12 20:34:21,985:INFO:Uploading results into container
2022-09-12 20:34:21,986:INFO:Uploading model into container now
2022-09-12 20:34:21,987:INFO:master_model_container: 11
2022-09-12 20:34:21,987:INFO:display_container: 2
2022-09-12 20:34:21,987:INFO:KNeighborsRegressor(n_jobs=-1)
2022-09-12 20:34:21,988:INFO:create_model() successfully completed......................................
2022-09-12 20:34:22,115:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:22,115:INFO:Creating metrics dataframe
2022-09-12 20:34:22,135:INFO:Initializing Decision Tree Regressor
2022-09-12 20:34:22,135:INFO:Total runtime is 0.08603305419286092 minutes
2022-09-12 20:34:22,141:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:22,141:INFO:Initializing create_model()
2022-09-12 20:34:22,141:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652622490>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652600CD0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:22,141:INFO:Checking exceptions
2022-09-12 20:34:22,145:INFO:Importing libraries
2022-09-12 20:34:22,145:INFO:Copying training dataset
2022-09-12 20:34:22,150:INFO:Defining folds
2022-09-12 20:34:22,151:INFO:Declaring metric variables
2022-09-12 20:34:22,157:INFO:Importing untrained model
2022-09-12 20:34:22,166:INFO:Decision Tree Regressor Imported successfully
2022-09-12 20:34:22,183:INFO:Starting cross validation
2022-09-12 20:34:22,184:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:22,255:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:22,263:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:22,284:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:22,303:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:22,317:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:22,335:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:22,352:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:22,366:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:22,377:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:22,385:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:22,405:INFO:Calculating mean and std
2022-09-12 20:34:22,408:INFO:Creating metrics dataframe
2022-09-12 20:34:22,413:INFO:Uploading results into container
2022-09-12 20:34:22,414:INFO:Uploading model into container now
2022-09-12 20:34:22,415:INFO:master_model_container: 12
2022-09-12 20:34:22,415:INFO:display_container: 2
2022-09-12 20:34:22,416:INFO:DecisionTreeRegressor(random_state=123)
2022-09-12 20:34:22,416:INFO:create_model() successfully completed......................................
2022-09-12 20:34:22,567:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:22,567:INFO:Creating metrics dataframe
2022-09-12 20:34:22,588:INFO:Initializing Random Forest Regressor
2022-09-12 20:34:22,588:INFO:Total runtime is 0.09357696771621704 minutes
2022-09-12 20:34:22,596:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:22,596:INFO:Initializing create_model()
2022-09-12 20:34:22,597:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652622490>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652600CD0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:22,597:INFO:Checking exceptions
2022-09-12 20:34:22,601:INFO:Importing libraries
2022-09-12 20:34:22,601:INFO:Copying training dataset
2022-09-12 20:34:22,607:INFO:Defining folds
2022-09-12 20:34:22,608:INFO:Declaring metric variables
2022-09-12 20:34:22,613:INFO:Importing untrained model
2022-09-12 20:34:22,621:INFO:Random Forest Regressor Imported successfully
2022-09-12 20:34:22,638:INFO:Starting cross validation
2022-09-12 20:34:22,640:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:23,059:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:23,075:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:23,137:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:23,153:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:23,153:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:23,168:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:23,231:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:23,325:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:23,512:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:23,512:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:23,575:INFO:Calculating mean and std
2022-09-12 20:34:23,575:INFO:Creating metrics dataframe
2022-09-12 20:34:23,595:INFO:Uploading results into container
2022-09-12 20:34:23,596:INFO:Uploading model into container now
2022-09-12 20:34:23,598:INFO:master_model_container: 13
2022-09-12 20:34:23,598:INFO:display_container: 2
2022-09-12 20:34:23,599:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-09-12 20:34:23,599:INFO:create_model() successfully completed......................................
2022-09-12 20:34:23,719:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:23,719:INFO:Creating metrics dataframe
2022-09-12 20:34:23,750:INFO:Initializing Extra Trees Regressor
2022-09-12 20:34:23,750:INFO:Total runtime is 0.1129496415456136 minutes
2022-09-12 20:34:23,750:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:23,750:INFO:Initializing create_model()
2022-09-12 20:34:23,750:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652622490>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652600CD0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:23,750:INFO:Checking exceptions
2022-09-12 20:34:23,750:INFO:Importing libraries
2022-09-12 20:34:23,750:INFO:Copying training dataset
2022-09-12 20:34:23,766:INFO:Defining folds
2022-09-12 20:34:23,766:INFO:Declaring metric variables
2022-09-12 20:34:23,778:INFO:Importing untrained model
2022-09-12 20:34:23,790:INFO:Extra Trees Regressor Imported successfully
2022-09-12 20:34:23,803:INFO:Starting cross validation
2022-09-12 20:34:23,804:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:24,136:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:24,136:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:24,136:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:24,151:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:24,167:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:24,292:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:24,307:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:24,307:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:24,495:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:24,495:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:24,557:INFO:Calculating mean and std
2022-09-12 20:34:24,557:INFO:Creating metrics dataframe
2022-09-12 20:34:24,572:INFO:Uploading results into container
2022-09-12 20:34:24,574:INFO:Uploading model into container now
2022-09-12 20:34:24,575:INFO:master_model_container: 14
2022-09-12 20:34:24,575:INFO:display_container: 2
2022-09-12 20:34:24,576:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-09-12 20:34:24,577:INFO:create_model() successfully completed......................................
2022-09-12 20:34:24,701:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:24,701:INFO:Creating metrics dataframe
2022-09-12 20:34:24,717:INFO:Initializing AdaBoost Regressor
2022-09-12 20:34:24,717:INFO:Total runtime is 0.12906195720036823 minutes
2022-09-12 20:34:24,732:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:24,732:INFO:Initializing create_model()
2022-09-12 20:34:24,732:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652622490>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652600CD0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:24,732:INFO:Checking exceptions
2022-09-12 20:34:24,732:INFO:Importing libraries
2022-09-12 20:34:24,732:INFO:Copying training dataset
2022-09-12 20:34:24,732:INFO:Defining folds
2022-09-12 20:34:24,732:INFO:Declaring metric variables
2022-09-12 20:34:24,748:INFO:Importing untrained model
2022-09-12 20:34:24,748:INFO:AdaBoost Regressor Imported successfully
2022-09-12 20:34:24,776:INFO:Starting cross validation
2022-09-12 20:34:24,777:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:24,919:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:24,997:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:25,029:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:25,044:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:25,044:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:25,075:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:25,107:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:25,122:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:25,138:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:25,185:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:25,200:INFO:Calculating mean and std
2022-09-12 20:34:25,200:INFO:Creating metrics dataframe
2022-09-12 20:34:25,221:INFO:Uploading results into container
2022-09-12 20:34:25,221:INFO:Uploading model into container now
2022-09-12 20:34:25,222:INFO:master_model_container: 15
2022-09-12 20:34:25,222:INFO:display_container: 2
2022-09-12 20:34:25,223:INFO:AdaBoostRegressor(random_state=123)
2022-09-12 20:34:25,223:INFO:create_model() successfully completed......................................
2022-09-12 20:34:25,353:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:25,353:INFO:Creating metrics dataframe
2022-09-12 20:34:25,370:INFO:Initializing Gradient Boosting Regressor
2022-09-12 20:34:25,370:INFO:Total runtime is 0.13994527260462442 minutes
2022-09-12 20:34:25,370:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:25,370:INFO:Initializing create_model()
2022-09-12 20:34:25,370:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652622490>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652600CD0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:25,370:INFO:Checking exceptions
2022-09-12 20:34:25,379:INFO:Importing libraries
2022-09-12 20:34:25,379:INFO:Copying training dataset
2022-09-12 20:34:25,384:INFO:Defining folds
2022-09-12 20:34:25,384:INFO:Declaring metric variables
2022-09-12 20:34:25,386:INFO:Importing untrained model
2022-09-12 20:34:25,386:INFO:Gradient Boosting Regressor Imported successfully
2022-09-12 20:34:25,410:INFO:Starting cross validation
2022-09-12 20:34:25,411:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:25,566:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:25,581:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:25,581:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:25,628:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:25,628:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:25,644:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:25,659:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:25,659:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:25,706:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:25,706:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:25,737:INFO:Calculating mean and std
2022-09-12 20:34:25,737:INFO:Creating metrics dataframe
2022-09-12 20:34:25,737:INFO:Uploading results into container
2022-09-12 20:34:25,737:INFO:Uploading model into container now
2022-09-12 20:34:25,737:INFO:master_model_container: 16
2022-09-12 20:34:25,737:INFO:display_container: 2
2022-09-12 20:34:25,737:INFO:GradientBoostingRegressor(random_state=123)
2022-09-12 20:34:25,737:INFO:create_model() successfully completed......................................
2022-09-12 20:34:25,888:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:25,888:INFO:Creating metrics dataframe
2022-09-12 20:34:25,919:INFO:Initializing Light Gradient Boosting Machine
2022-09-12 20:34:25,919:INFO:Total runtime is 0.14909769694010416 minutes
2022-09-12 20:34:25,919:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:25,919:INFO:Initializing create_model()
2022-09-12 20:34:25,919:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652622490>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652600CD0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:25,919:INFO:Checking exceptions
2022-09-12 20:34:25,934:INFO:Importing libraries
2022-09-12 20:34:25,934:INFO:Copying training dataset
2022-09-12 20:34:25,934:INFO:Defining folds
2022-09-12 20:34:25,934:INFO:Declaring metric variables
2022-09-12 20:34:25,949:INFO:Importing untrained model
2022-09-12 20:34:25,957:INFO:Light Gradient Boosting Machine Imported successfully
2022-09-12 20:34:25,972:INFO:Starting cross validation
2022-09-12 20:34:25,973:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:26,052:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:26,068:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:26,068:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:26,084:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:26,099:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:26,131:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:26,146:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:26,162:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:26,177:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:26,195:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:26,216:INFO:Calculating mean and std
2022-09-12 20:34:26,219:INFO:Creating metrics dataframe
2022-09-12 20:34:26,224:INFO:Uploading results into container
2022-09-12 20:34:26,225:INFO:Uploading model into container now
2022-09-12 20:34:26,225:INFO:master_model_container: 17
2022-09-12 20:34:26,225:INFO:display_container: 2
2022-09-12 20:34:26,226:INFO:LGBMRegressor(random_state=123)
2022-09-12 20:34:26,226:INFO:create_model() successfully completed......................................
2022-09-12 20:34:26,351:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:26,351:INFO:Creating metrics dataframe
2022-09-12 20:34:26,372:INFO:Initializing Dummy Regressor
2022-09-12 20:34:26,372:INFO:Total runtime is 0.1566544016202291 minutes
2022-09-12 20:34:26,377:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:26,377:INFO:Initializing create_model()
2022-09-12 20:34:26,378:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652622490>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F652600CD0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:26,378:INFO:Checking exceptions
2022-09-12 20:34:26,381:INFO:Importing libraries
2022-09-12 20:34:26,381:INFO:Copying training dataset
2022-09-12 20:34:26,387:INFO:Defining folds
2022-09-12 20:34:26,387:INFO:Declaring metric variables
2022-09-12 20:34:26,396:INFO:Importing untrained model
2022-09-12 20:34:26,406:INFO:Dummy Regressor Imported successfully
2022-09-12 20:34:26,418:INFO:Starting cross validation
2022-09-12 20:34:26,420:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:26,499:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:26,501:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:26,524:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:26,543:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:26,558:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:26,573:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:26,589:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:26,608:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:26,621:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:26,636:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:26,652:INFO:Calculating mean and std
2022-09-12 20:34:26,654:INFO:Creating metrics dataframe
2022-09-12 20:34:26,660:INFO:Uploading results into container
2022-09-12 20:34:26,662:INFO:Uploading model into container now
2022-09-12 20:34:26,663:INFO:master_model_container: 18
2022-09-12 20:34:26,663:INFO:display_container: 2
2022-09-12 20:34:26,663:INFO:DummyRegressor()
2022-09-12 20:34:26,663:INFO:create_model() successfully completed......................................
2022-09-12 20:34:26,810:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:26,810:INFO:Creating metrics dataframe
2022-09-12 20:34:26,856:INFO:Initializing create_model()
2022-09-12 20:34:26,856:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652622490>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:26,857:INFO:Checking exceptions
2022-09-12 20:34:26,866:INFO:Importing libraries
2022-09-12 20:34:26,867:INFO:Copying training dataset
2022-09-12 20:34:26,872:INFO:Defining folds
2022-09-12 20:34:26,873:INFO:Declaring metric variables
2022-09-12 20:34:26,873:INFO:Importing untrained model
2022-09-12 20:34:26,873:INFO:Declaring custom model
2022-09-12 20:34:26,874:INFO:Huber Regressor Imported successfully
2022-09-12 20:34:26,875:INFO:Cross validation set to False
2022-09-12 20:34:26,875:INFO:Fitting Model
2022-09-12 20:34:26,972:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:34:26,972:INFO:HuberRegressor()
2022-09-12 20:34:26,972:INFO:create_model() successfully completed......................................
2022-09-12 20:34:27,153:INFO:master_model_container: 18
2022-09-12 20:34:27,153:INFO:display_container: 2
2022-09-12 20:34:27,154:INFO:HuberRegressor()
2022-09-12 20:34:27,154:INFO:compare_models() successfully completed......................................
2022-09-12 20:34:28,853:INFO:PyCaret RegressionExperiment
2022-09-12 20:34:28,853:INFO:Logging name: reg-default-name
2022-09-12 20:34:28,853:INFO:ML Usecase: MLUsecase.REGRESSION
2022-09-12 20:34:28,853:INFO:version 3.0.0.rc3
2022-09-12 20:34:28,853:INFO:Initializing setup()
2022-09-12 20:34:28,853:INFO:self.USI: 54a7
2022-09-12 20:34:28,853:INFO:self.variable_keys: {'_ml_usecase', 'display_container', 'y_train', 'USI', '_all_metrics', 'fold_generator', 'exp_name_log', 'logging_param', 'y_test', 'log_plots_param', 'fold_shuffle_param', 'fold_groups_param', '_all_models_internal', 'transform_target_method_param', 'n_jobs_param', 'exp_id', 'gpu_param', 'seed', 'X_test', 'data', 'X_train', 'X', 'pipeline', 'master_model_container', 'y', '_all_models', 'memory', 'target_param', 'html_param', 'transform_target_param', '_available_plots', 'variable_keys', '_gpu_n_jobs_param', 'idx'}
2022-09-12 20:34:28,853:INFO:Checking environment
2022-09-12 20:34:28,853:INFO:python_version: 3.9.12
2022-09-12 20:34:28,853:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-09-12 20:34:28,853:INFO:machine: AMD64
2022-09-12 20:34:28,853:INFO:platform: Windows-10-10.0.22000-SP0
2022-09-12 20:34:28,853:INFO:Memory: svmem(total=12710350848, available=2504458240, percent=80.3, used=10205892608, free=2504458240)
2022-09-12 20:34:28,853:INFO:Physical Core: 4
2022-09-12 20:34:28,853:INFO:Logical Core: 8
2022-09-12 20:34:28,864:INFO:Checking libraries
2022-09-12 20:34:28,864:INFO:System:
2022-09-12 20:34:28,864:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2022-09-12 20:34:28,864:INFO:executable: C:\Users\saint\anaconda3\python.exe
2022-09-12 20:34:28,864:INFO:   machine: Windows-10-10.0.22000-SP0
2022-09-12 20:34:28,864:INFO:PyCaret required dependencies:
2022-09-12 20:34:28,864:INFO:                 pip: 22.1.2
2022-09-12 20:34:28,864:INFO:          setuptools: 63.4.1
2022-09-12 20:34:28,865:INFO:             pycaret: 3.0.0.rc3
2022-09-12 20:34:28,865:INFO:             IPython: 7.31.1
2022-09-12 20:34:28,865:INFO:          ipywidgets: 7.6.5
2022-09-12 20:34:28,865:INFO:                tqdm: 4.64.0
2022-09-12 20:34:28,865:INFO:               numpy: 1.21.5
2022-09-12 20:34:28,865:INFO:              pandas: 1.4.3
2022-09-12 20:34:28,865:INFO:              jinja2: 2.11.3
2022-09-12 20:34:28,865:INFO:               scipy: 1.7.3
2022-09-12 20:34:28,865:INFO:              joblib: 1.1.0
2022-09-12 20:34:28,865:INFO:             sklearn: 1.1.1
2022-09-12 20:34:28,866:INFO:                pyod: Installed but version unavailable
2022-09-12 20:34:28,866:INFO:            imblearn: 0.9.1
2022-09-12 20:34:28,866:INFO:   category_encoders: 2.5.0
2022-09-12 20:34:28,866:INFO:            lightgbm: 3.3.2
2022-09-12 20:34:28,866:INFO:               numba: 0.55.1
2022-09-12 20:34:28,866:INFO:            requests: 2.28.1
2022-09-12 20:34:28,866:INFO:          matplotlib: 3.5.2
2022-09-12 20:34:28,866:INFO:          scikitplot: 0.3.7
2022-09-12 20:34:28,866:INFO:         yellowbrick: 1.5
2022-09-12 20:34:28,866:INFO:              plotly: 5.9.0
2022-09-12 20:34:28,867:INFO:             kaleido: 0.2.1
2022-09-12 20:34:28,867:INFO:         statsmodels: 0.13.2
2022-09-12 20:34:28,867:INFO:              sktime: 0.11.4
2022-09-12 20:34:28,867:INFO:               tbats: Installed but version unavailable
2022-09-12 20:34:28,867:INFO:            pmdarima: 2.0.1
2022-09-12 20:34:28,867:INFO:              psutil: 5.9.0
2022-09-12 20:34:28,867:INFO:None
2022-09-12 20:34:28,867:INFO:Set up data.
2022-09-12 20:34:28,878:INFO:Set up train/test split.
2022-09-12 20:34:28,884:INFO:Set up folding strategy.
2022-09-12 20:34:28,884:INFO:Assigning column types.
2022-09-12 20:34:28,893:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-09-12 20:34:28,894:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-09-12 20:34:28,901:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:34:28,907:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:34:29,000:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:34:29,063:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:34:29,063:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:29,063:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:29,063:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-09-12 20:34:29,078:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:34:29,078:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:34:29,157:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:34:29,328:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:34:29,339:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:29,343:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:29,343:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-09-12 20:34:29,359:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:34:29,359:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:34:29,472:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:34:29,589:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:34:29,589:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:29,589:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:29,605:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:34:29,605:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:34:29,683:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:34:29,761:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:34:29,761:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:29,761:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:29,761:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-09-12 20:34:29,792:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:34:29,887:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:34:29,950:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:34:29,950:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:29,950:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:29,966:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:34:30,044:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:34:30,106:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:34:30,106:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:30,106:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:30,106:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-09-12 20:34:30,184:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:34:30,231:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:34:30,247:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:30,247:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:30,325:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:34:30,372:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:34:30,372:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:30,372:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:30,372:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-09-12 20:34:30,465:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:34:30,512:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:30,528:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:30,606:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:34:30,684:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:30,684:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:30,684:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-09-12 20:34:30,840:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:30,840:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:30,981:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:30,981:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:30,981:INFO:Preparing preprocessing pipeline...
2022-09-12 20:34:30,981:INFO:Set up simple imputation.
2022-09-12 20:34:30,981:INFO:Set up variance threshold.
2022-09-12 20:34:30,981:INFO:Set up feature normalization.
2022-09-12 20:34:31,028:INFO:Finished creating preprocessing pipeline.
2022-09-12 20:34:31,028:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\saint\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['dosis_IC_ppm', 'CO2_gas'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2022-09-12 20:34:31,028:INFO:Creating final display dataframe.
2022-09-12 20:34:31,231:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target               mpy
2              Target type        Regression
3               Data shape          (77, 11)
4         Train data shape          (53, 11)
5          Test data shape          (24, 11)
6         Numeric features                 2
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12               Normalize              True
13        Normalize method            zscore
14          Fold Generator             KFold
15             Fold Number                10
16                CPU Jobs                -1
17                 Use GPU             False
18          Log Experiment             False
19         Experiment Name  reg-default-name
20                     USI              54a7
2022-09-12 20:34:31,368:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:31,368:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:31,535:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:31,535:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:34:31,550:INFO:setup() successfully completed in 2.7s...............
2022-09-12 20:34:37,954:INFO:Initializing compare_models()
2022-09-12 20:34:37,954:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-09-12 20:34:37,954:INFO:Checking exceptions
2022-09-12 20:34:37,964:INFO:Preparing display monitor
2022-09-12 20:34:38,123:INFO:Initializing Linear Regression
2022-09-12 20:34:38,123:INFO:Total runtime is 0.0 minutes
2022-09-12 20:34:38,123:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:38,123:INFO:Initializing create_model()
2022-09-12 20:34:38,123:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6525E2700>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:38,123:INFO:Checking exceptions
2022-09-12 20:34:38,123:INFO:Importing libraries
2022-09-12 20:34:38,123:INFO:Copying training dataset
2022-09-12 20:34:38,139:INFO:Defining folds
2022-09-12 20:34:38,139:INFO:Declaring metric variables
2022-09-12 20:34:38,155:INFO:Importing untrained model
2022-09-12 20:34:38,155:INFO:Linear Regression Imported successfully
2022-09-12 20:34:38,188:INFO:Starting cross validation
2022-09-12 20:34:38,205:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:38,743:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:38,759:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:38,774:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:38,821:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:38,837:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:38,868:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:38,915:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:38,930:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:39,128:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:39,128:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:39,231:INFO:Calculating mean and std
2022-09-12 20:34:39,231:INFO:Creating metrics dataframe
2022-09-12 20:34:39,231:INFO:Uploading results into container
2022-09-12 20:34:39,231:INFO:Uploading model into container now
2022-09-12 20:34:39,231:INFO:master_model_container: 1
2022-09-12 20:34:39,231:INFO:display_container: 2
2022-09-12 20:34:39,231:INFO:LinearRegression(n_jobs=-1)
2022-09-12 20:34:39,231:INFO:create_model() successfully completed......................................
2022-09-12 20:34:39,356:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:39,356:INFO:Creating metrics dataframe
2022-09-12 20:34:39,373:INFO:Initializing Lasso Regression
2022-09-12 20:34:39,373:INFO:Total runtime is 0.02082423766454061 minutes
2022-09-12 20:34:39,373:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:39,373:INFO:Initializing create_model()
2022-09-12 20:34:39,373:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6525E2700>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:39,373:INFO:Checking exceptions
2022-09-12 20:34:39,373:INFO:Importing libraries
2022-09-12 20:34:39,373:INFO:Copying training dataset
2022-09-12 20:34:39,373:INFO:Defining folds
2022-09-12 20:34:39,373:INFO:Declaring metric variables
2022-09-12 20:34:39,388:INFO:Importing untrained model
2022-09-12 20:34:39,388:INFO:Lasso Regression Imported successfully
2022-09-12 20:34:39,404:INFO:Starting cross validation
2022-09-12 20:34:39,404:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:39,467:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:39,482:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:39,498:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:39,523:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:39,566:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:39,578:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:39,597:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:39,610:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:39,610:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:39,654:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:39,685:INFO:Calculating mean and std
2022-09-12 20:34:39,685:INFO:Creating metrics dataframe
2022-09-12 20:34:39,705:INFO:Uploading results into container
2022-09-12 20:34:39,706:INFO:Uploading model into container now
2022-09-12 20:34:39,707:INFO:master_model_container: 2
2022-09-12 20:34:39,708:INFO:display_container: 2
2022-09-12 20:34:39,709:INFO:Lasso(random_state=123)
2022-09-12 20:34:39,710:INFO:create_model() successfully completed......................................
2022-09-12 20:34:39,836:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:39,836:INFO:Creating metrics dataframe
2022-09-12 20:34:39,852:INFO:Initializing Ridge Regression
2022-09-12 20:34:39,852:INFO:Total runtime is 0.02881116469701131 minutes
2022-09-12 20:34:39,852:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:39,868:INFO:Initializing create_model()
2022-09-12 20:34:39,868:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6525E2700>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:39,868:INFO:Checking exceptions
2022-09-12 20:34:39,868:INFO:Importing libraries
2022-09-12 20:34:39,868:INFO:Copying training dataset
2022-09-12 20:34:39,883:INFO:Defining folds
2022-09-12 20:34:39,883:INFO:Declaring metric variables
2022-09-12 20:34:39,883:INFO:Importing untrained model
2022-09-12 20:34:39,902:INFO:Ridge Regression Imported successfully
2022-09-12 20:34:39,911:INFO:Starting cross validation
2022-09-12 20:34:39,911:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:39,985:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:40,019:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:40,021:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:40,037:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:40,068:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:40,084:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:40,115:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:40,131:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:40,146:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:40,146:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:40,177:INFO:Calculating mean and std
2022-09-12 20:34:40,177:INFO:Creating metrics dataframe
2022-09-12 20:34:40,177:INFO:Uploading results into container
2022-09-12 20:34:40,177:INFO:Uploading model into container now
2022-09-12 20:34:40,177:INFO:master_model_container: 3
2022-09-12 20:34:40,177:INFO:display_container: 2
2022-09-12 20:34:40,177:INFO:Ridge(random_state=123)
2022-09-12 20:34:40,177:INFO:create_model() successfully completed......................................
2022-09-12 20:34:40,317:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:40,317:INFO:Creating metrics dataframe
2022-09-12 20:34:40,321:INFO:Initializing Elastic Net
2022-09-12 20:34:40,321:INFO:Total runtime is 0.03662205934524536 minutes
2022-09-12 20:34:40,336:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:40,336:INFO:Initializing create_model()
2022-09-12 20:34:40,336:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6525E2700>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:40,336:INFO:Checking exceptions
2022-09-12 20:34:40,336:INFO:Importing libraries
2022-09-12 20:34:40,336:INFO:Copying training dataset
2022-09-12 20:34:40,336:INFO:Defining folds
2022-09-12 20:34:40,336:INFO:Declaring metric variables
2022-09-12 20:34:40,354:INFO:Importing untrained model
2022-09-12 20:34:40,367:INFO:Elastic Net Imported successfully
2022-09-12 20:34:40,377:INFO:Starting cross validation
2022-09-12 20:34:40,377:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:40,454:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:40,470:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:40,486:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:40,501:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:40,517:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:40,548:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:40,548:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:40,564:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:40,595:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:40,611:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:40,642:INFO:Calculating mean and std
2022-09-12 20:34:40,642:INFO:Creating metrics dataframe
2022-09-12 20:34:40,642:INFO:Uploading results into container
2022-09-12 20:34:40,657:INFO:Uploading model into container now
2022-09-12 20:34:40,657:INFO:master_model_container: 4
2022-09-12 20:34:40,657:INFO:display_container: 2
2022-09-12 20:34:40,657:INFO:ElasticNet(random_state=123)
2022-09-12 20:34:40,661:INFO:create_model() successfully completed......................................
2022-09-12 20:34:40,785:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:40,785:INFO:Creating metrics dataframe
2022-09-12 20:34:40,801:INFO:Initializing Least Angle Regression
2022-09-12 20:34:40,801:INFO:Total runtime is 0.04462778568267822 minutes
2022-09-12 20:34:40,817:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:40,817:INFO:Initializing create_model()
2022-09-12 20:34:40,817:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6525E2700>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:40,817:INFO:Checking exceptions
2022-09-12 20:34:40,817:INFO:Importing libraries
2022-09-12 20:34:40,817:INFO:Copying training dataset
2022-09-12 20:34:40,817:INFO:Defining folds
2022-09-12 20:34:40,817:INFO:Declaring metric variables
2022-09-12 20:34:40,832:INFO:Importing untrained model
2022-09-12 20:34:40,843:INFO:Least Angle Regression Imported successfully
2022-09-12 20:34:40,860:INFO:Starting cross validation
2022-09-12 20:34:40,862:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:40,944:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:40,947:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:40,954:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:40,954:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:40,970:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:40,970:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:40,985:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:41,001:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:41,001:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:41,001:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:41,016:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:41,016:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:41,032:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:41,048:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:41,063:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:41,063:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:41,079:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:41,079:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:41,095:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:41,095:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:41,126:INFO:Calculating mean and std
2022-09-12 20:34:41,126:INFO:Creating metrics dataframe
2022-09-12 20:34:41,141:INFO:Uploading results into container
2022-09-12 20:34:41,141:INFO:Uploading model into container now
2022-09-12 20:34:41,141:INFO:master_model_container: 5
2022-09-12 20:34:41,141:INFO:display_container: 2
2022-09-12 20:34:41,141:INFO:Lars(random_state=123)
2022-09-12 20:34:41,141:INFO:create_model() successfully completed......................................
2022-09-12 20:34:41,265:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:41,265:INFO:Creating metrics dataframe
2022-09-12 20:34:41,291:INFO:Initializing Lasso Least Angle Regression
2022-09-12 20:34:41,291:INFO:Total runtime is 0.0527866800626119 minutes
2022-09-12 20:34:41,301:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:41,302:INFO:Initializing create_model()
2022-09-12 20:34:41,302:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6525E2700>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:41,303:INFO:Checking exceptions
2022-09-12 20:34:41,307:INFO:Importing libraries
2022-09-12 20:34:41,308:INFO:Copying training dataset
2022-09-12 20:34:41,316:INFO:Defining folds
2022-09-12 20:34:41,316:INFO:Declaring metric variables
2022-09-12 20:34:41,327:INFO:Importing untrained model
2022-09-12 20:34:41,338:INFO:Lasso Least Angle Regression Imported successfully
2022-09-12 20:34:41,349:INFO:Starting cross validation
2022-09-12 20:34:41,351:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:41,434:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:34:41,435:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:41,452:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:34:41,454:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:41,471:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:34:41,472:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:41,491:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:34:41,492:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:41,512:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:34:41,513:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:41,527:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:34:41,528:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:41,544:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:34:41,546:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:41,562:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:34:41,563:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:41,601:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:34:41,603:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:41,674:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:34:41,675:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:41,707:INFO:Calculating mean and std
2022-09-12 20:34:41,710:INFO:Creating metrics dataframe
2022-09-12 20:34:41,718:INFO:Uploading results into container
2022-09-12 20:34:41,720:INFO:Uploading model into container now
2022-09-12 20:34:41,721:INFO:master_model_container: 6
2022-09-12 20:34:41,721:INFO:display_container: 2
2022-09-12 20:34:41,723:INFO:LassoLars(random_state=123)
2022-09-12 20:34:41,723:INFO:create_model() successfully completed......................................
2022-09-12 20:34:41,872:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:41,873:INFO:Creating metrics dataframe
2022-09-12 20:34:41,901:INFO:Initializing Orthogonal Matching Pursuit
2022-09-12 20:34:41,901:INFO:Total runtime is 0.06295794248580933 minutes
2022-09-12 20:34:41,907:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:41,908:INFO:Initializing create_model()
2022-09-12 20:34:41,908:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6525E2700>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:41,909:INFO:Checking exceptions
2022-09-12 20:34:41,912:INFO:Importing libraries
2022-09-12 20:34:41,912:INFO:Copying training dataset
2022-09-12 20:34:41,918:INFO:Defining folds
2022-09-12 20:34:41,919:INFO:Declaring metric variables
2022-09-12 20:34:41,927:INFO:Importing untrained model
2022-09-12 20:34:41,937:INFO:Orthogonal Matching Pursuit Imported successfully
2022-09-12 20:34:41,954:INFO:Starting cross validation
2022-09-12 20:34:41,955:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:42,035:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:42,039:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:42,051:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:42,055:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:42,070:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:42,075:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:42,086:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:42,091:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:42,107:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:42,112:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:42,125:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:42,130:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:42,147:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:42,153:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:42,163:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:42,167:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:42,184:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:42,188:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:42,194:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:34:42,199:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:42,224:INFO:Calculating mean and std
2022-09-12 20:34:42,227:INFO:Creating metrics dataframe
2022-09-12 20:34:42,232:INFO:Uploading results into container
2022-09-12 20:34:42,232:INFO:Uploading model into container now
2022-09-12 20:34:42,233:INFO:master_model_container: 7
2022-09-12 20:34:42,233:INFO:display_container: 2
2022-09-12 20:34:42,234:INFO:OrthogonalMatchingPursuit()
2022-09-12 20:34:42,234:INFO:create_model() successfully completed......................................
2022-09-12 20:34:42,358:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:42,359:INFO:Creating metrics dataframe
2022-09-12 20:34:42,377:INFO:Initializing Bayesian Ridge
2022-09-12 20:34:42,377:INFO:Total runtime is 0.07089513142903646 minutes
2022-09-12 20:34:42,382:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:42,383:INFO:Initializing create_model()
2022-09-12 20:34:42,383:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6525E2700>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:42,384:INFO:Checking exceptions
2022-09-12 20:34:42,386:INFO:Importing libraries
2022-09-12 20:34:42,386:INFO:Copying training dataset
2022-09-12 20:34:42,391:INFO:Defining folds
2022-09-12 20:34:42,392:INFO:Declaring metric variables
2022-09-12 20:34:42,397:INFO:Importing untrained model
2022-09-12 20:34:42,405:INFO:Bayesian Ridge Imported successfully
2022-09-12 20:34:42,419:INFO:Starting cross validation
2022-09-12 20:34:42,421:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:42,505:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:42,525:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:42,528:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:42,546:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:42,561:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:42,582:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:42,598:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:42,618:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:42,632:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:42,651:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:42,676:INFO:Calculating mean and std
2022-09-12 20:34:42,679:INFO:Creating metrics dataframe
2022-09-12 20:34:42,684:INFO:Uploading results into container
2022-09-12 20:34:42,685:INFO:Uploading model into container now
2022-09-12 20:34:42,686:INFO:master_model_container: 8
2022-09-12 20:34:42,686:INFO:display_container: 2
2022-09-12 20:34:42,687:INFO:BayesianRidge()
2022-09-12 20:34:42,687:INFO:create_model() successfully completed......................................
2022-09-12 20:34:42,829:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:42,829:INFO:Creating metrics dataframe
2022-09-12 20:34:42,847:INFO:Initializing Passive Aggressive Regressor
2022-09-12 20:34:42,848:INFO:Total runtime is 0.0787427544593811 minutes
2022-09-12 20:34:42,853:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:42,854:INFO:Initializing create_model()
2022-09-12 20:34:42,854:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6525E2700>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:42,854:INFO:Checking exceptions
2022-09-12 20:34:42,858:INFO:Importing libraries
2022-09-12 20:34:42,858:INFO:Copying training dataset
2022-09-12 20:34:42,863:INFO:Defining folds
2022-09-12 20:34:42,864:INFO:Declaring metric variables
2022-09-12 20:34:42,871:INFO:Importing untrained model
2022-09-12 20:34:42,883:INFO:Passive Aggressive Regressor Imported successfully
2022-09-12 20:34:42,901:INFO:Starting cross validation
2022-09-12 20:34:42,903:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:42,983:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:42,998:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:43,028:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:43,047:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:43,068:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:43,086:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:43,110:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:43,126:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:43,141:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:43,158:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:43,182:INFO:Calculating mean and std
2022-09-12 20:34:43,184:INFO:Creating metrics dataframe
2022-09-12 20:34:43,193:INFO:Uploading results into container
2022-09-12 20:34:43,195:INFO:Uploading model into container now
2022-09-12 20:34:43,196:INFO:master_model_container: 9
2022-09-12 20:34:43,196:INFO:display_container: 2
2022-09-12 20:34:43,197:INFO:PassiveAggressiveRegressor(random_state=123)
2022-09-12 20:34:43,198:INFO:create_model() successfully completed......................................
2022-09-12 20:34:43,350:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:43,351:INFO:Creating metrics dataframe
2022-09-12 20:34:43,369:INFO:Initializing Huber Regressor
2022-09-12 20:34:43,369:INFO:Total runtime is 0.08743075132369994 minutes
2022-09-12 20:34:43,375:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:43,376:INFO:Initializing create_model()
2022-09-12 20:34:43,376:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6525E2700>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:43,376:INFO:Checking exceptions
2022-09-12 20:34:43,378:INFO:Importing libraries
2022-09-12 20:34:43,379:INFO:Copying training dataset
2022-09-12 20:34:43,384:INFO:Defining folds
2022-09-12 20:34:43,384:INFO:Declaring metric variables
2022-09-12 20:34:43,390:INFO:Importing untrained model
2022-09-12 20:34:43,399:INFO:Huber Regressor Imported successfully
2022-09-12 20:34:43,413:INFO:Starting cross validation
2022-09-12 20:34:43,414:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:43,499:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:43,513:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:43,539:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:43,561:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:43,573:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:43,592:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:43,611:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:43,631:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:43,650:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:43,670:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:43,703:INFO:Calculating mean and std
2022-09-12 20:34:43,707:INFO:Creating metrics dataframe
2022-09-12 20:34:43,716:INFO:Uploading results into container
2022-09-12 20:34:43,717:INFO:Uploading model into container now
2022-09-12 20:34:43,719:INFO:master_model_container: 10
2022-09-12 20:34:43,719:INFO:display_container: 2
2022-09-12 20:34:43,720:INFO:HuberRegressor()
2022-09-12 20:34:43,720:INFO:create_model() successfully completed......................................
2022-09-12 20:34:43,901:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:43,902:INFO:Creating metrics dataframe
2022-09-12 20:34:43,922:INFO:Initializing K Neighbors Regressor
2022-09-12 20:34:43,922:INFO:Total runtime is 0.09664181073506672 minutes
2022-09-12 20:34:43,928:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:43,929:INFO:Initializing create_model()
2022-09-12 20:34:43,929:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6525E2700>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:43,929:INFO:Checking exceptions
2022-09-12 20:34:43,932:INFO:Importing libraries
2022-09-12 20:34:43,932:INFO:Copying training dataset
2022-09-12 20:34:43,940:INFO:Defining folds
2022-09-12 20:34:43,940:INFO:Declaring metric variables
2022-09-12 20:34:43,948:INFO:Importing untrained model
2022-09-12 20:34:43,960:INFO:K Neighbors Regressor Imported successfully
2022-09-12 20:34:43,978:INFO:Starting cross validation
2022-09-12 20:34:43,981:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:44,069:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:44,093:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:44,114:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:44,131:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:44,164:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:44,185:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:44,201:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:44,219:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:44,284:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:44,299:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:44,342:INFO:Calculating mean and std
2022-09-12 20:34:44,347:INFO:Creating metrics dataframe
2022-09-12 20:34:44,354:INFO:Uploading results into container
2022-09-12 20:34:44,355:INFO:Uploading model into container now
2022-09-12 20:34:44,355:INFO:master_model_container: 11
2022-09-12 20:34:44,355:INFO:display_container: 2
2022-09-12 20:34:44,356:INFO:KNeighborsRegressor(n_jobs=-1)
2022-09-12 20:34:44,356:INFO:create_model() successfully completed......................................
2022-09-12 20:34:44,499:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:44,500:INFO:Creating metrics dataframe
2022-09-12 20:34:44,517:INFO:Initializing Decision Tree Regressor
2022-09-12 20:34:44,517:INFO:Total runtime is 0.10656609932581583 minutes
2022-09-12 20:34:44,522:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:44,522:INFO:Initializing create_model()
2022-09-12 20:34:44,523:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6525E2700>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:44,523:INFO:Checking exceptions
2022-09-12 20:34:44,525:INFO:Importing libraries
2022-09-12 20:34:44,525:INFO:Copying training dataset
2022-09-12 20:34:44,530:INFO:Defining folds
2022-09-12 20:34:44,530:INFO:Declaring metric variables
2022-09-12 20:34:44,537:INFO:Importing untrained model
2022-09-12 20:34:44,545:INFO:Decision Tree Regressor Imported successfully
2022-09-12 20:34:44,556:INFO:Starting cross validation
2022-09-12 20:34:44,558:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:44,631:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:44,644:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:44,654:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:44,676:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:44,693:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:44,713:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:44,727:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:44,741:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:44,756:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:44,774:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:44,798:INFO:Calculating mean and std
2022-09-12 20:34:44,800:INFO:Creating metrics dataframe
2022-09-12 20:34:44,805:INFO:Uploading results into container
2022-09-12 20:34:44,806:INFO:Uploading model into container now
2022-09-12 20:34:44,806:INFO:master_model_container: 12
2022-09-12 20:34:44,807:INFO:display_container: 2
2022-09-12 20:34:44,807:INFO:DecisionTreeRegressor(random_state=123)
2022-09-12 20:34:44,807:INFO:create_model() successfully completed......................................
2022-09-12 20:34:44,938:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:44,939:INFO:Creating metrics dataframe
2022-09-12 20:34:44,960:INFO:Initializing Random Forest Regressor
2022-09-12 20:34:44,960:INFO:Total runtime is 0.11393984158833821 minutes
2022-09-12 20:34:44,966:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:44,967:INFO:Initializing create_model()
2022-09-12 20:34:44,968:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6525E2700>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:44,968:INFO:Checking exceptions
2022-09-12 20:34:44,971:INFO:Importing libraries
2022-09-12 20:34:44,971:INFO:Copying training dataset
2022-09-12 20:34:44,978:INFO:Defining folds
2022-09-12 20:34:44,979:INFO:Declaring metric variables
2022-09-12 20:34:44,988:INFO:Importing untrained model
2022-09-12 20:34:45,005:INFO:Random Forest Regressor Imported successfully
2022-09-12 20:34:45,021:INFO:Starting cross validation
2022-09-12 20:34:45,021:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:45,433:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:45,480:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:45,480:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:45,480:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:45,496:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:45,543:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:45,621:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:45,730:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:45,886:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:45,902:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:45,949:INFO:Calculating mean and std
2022-09-12 20:34:45,964:INFO:Creating metrics dataframe
2022-09-12 20:34:45,971:INFO:Uploading results into container
2022-09-12 20:34:45,973:INFO:Uploading model into container now
2022-09-12 20:34:45,973:INFO:master_model_container: 13
2022-09-12 20:34:45,974:INFO:display_container: 2
2022-09-12 20:34:45,975:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-09-12 20:34:45,975:INFO:create_model() successfully completed......................................
2022-09-12 20:34:46,101:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:46,101:INFO:Creating metrics dataframe
2022-09-12 20:34:46,132:INFO:Initializing Extra Trees Regressor
2022-09-12 20:34:46,132:INFO:Total runtime is 0.13347601493199665 minutes
2022-09-12 20:34:46,132:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:46,132:INFO:Initializing create_model()
2022-09-12 20:34:46,132:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6525E2700>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:46,132:INFO:Checking exceptions
2022-09-12 20:34:46,132:INFO:Importing libraries
2022-09-12 20:34:46,132:INFO:Copying training dataset
2022-09-12 20:34:46,132:INFO:Defining folds
2022-09-12 20:34:46,132:INFO:Declaring metric variables
2022-09-12 20:34:46,148:INFO:Importing untrained model
2022-09-12 20:34:46,159:INFO:Extra Trees Regressor Imported successfully
2022-09-12 20:34:46,171:INFO:Starting cross validation
2022-09-12 20:34:46,172:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:46,442:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:46,457:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:46,489:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:46,504:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:46,551:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:46,582:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:46,598:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:46,614:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:46,785:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:46,802:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:46,848:INFO:Calculating mean and std
2022-09-12 20:34:46,848:INFO:Creating metrics dataframe
2022-09-12 20:34:46,848:INFO:Uploading results into container
2022-09-12 20:34:46,848:INFO:Uploading model into container now
2022-09-12 20:34:46,848:INFO:master_model_container: 14
2022-09-12 20:34:46,848:INFO:display_container: 2
2022-09-12 20:34:46,848:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-09-12 20:34:46,848:INFO:create_model() successfully completed......................................
2022-09-12 20:34:46,980:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:46,981:INFO:Creating metrics dataframe
2022-09-12 20:34:46,988:INFO:Initializing AdaBoost Regressor
2022-09-12 20:34:46,988:INFO:Total runtime is 0.14773899714152017 minutes
2022-09-12 20:34:47,003:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:47,003:INFO:Initializing create_model()
2022-09-12 20:34:47,003:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6525E2700>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:47,003:INFO:Checking exceptions
2022-09-12 20:34:47,003:INFO:Importing libraries
2022-09-12 20:34:47,003:INFO:Copying training dataset
2022-09-12 20:34:47,003:INFO:Defining folds
2022-09-12 20:34:47,003:INFO:Declaring metric variables
2022-09-12 20:34:47,018:INFO:Importing untrained model
2022-09-12 20:34:47,028:INFO:AdaBoost Regressor Imported successfully
2022-09-12 20:34:47,042:INFO:Starting cross validation
2022-09-12 20:34:47,043:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:47,136:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:47,230:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:47,230:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:47,261:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:47,277:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:47,293:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:47,308:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:47,324:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:47,340:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:47,386:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:47,423:INFO:Calculating mean and std
2022-09-12 20:34:47,424:INFO:Creating metrics dataframe
2022-09-12 20:34:47,424:INFO:Uploading results into container
2022-09-12 20:34:47,424:INFO:Uploading model into container now
2022-09-12 20:34:47,424:INFO:master_model_container: 15
2022-09-12 20:34:47,424:INFO:display_container: 2
2022-09-12 20:34:47,424:INFO:AdaBoostRegressor(random_state=123)
2022-09-12 20:34:47,424:INFO:create_model() successfully completed......................................
2022-09-12 20:34:47,527:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:47,527:INFO:Creating metrics dataframe
2022-09-12 20:34:47,548:INFO:Initializing Gradient Boosting Regressor
2022-09-12 20:34:47,549:INFO:Total runtime is 0.15708855787913004 minutes
2022-09-12 20:34:47,553:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:47,553:INFO:Initializing create_model()
2022-09-12 20:34:47,553:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6525E2700>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:47,553:INFO:Checking exceptions
2022-09-12 20:34:47,555:INFO:Importing libraries
2022-09-12 20:34:47,555:INFO:Copying training dataset
2022-09-12 20:34:47,561:INFO:Defining folds
2022-09-12 20:34:47,562:INFO:Declaring metric variables
2022-09-12 20:34:47,567:INFO:Importing untrained model
2022-09-12 20:34:47,572:INFO:Gradient Boosting Regressor Imported successfully
2022-09-12 20:34:47,581:INFO:Starting cross validation
2022-09-12 20:34:47,582:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:47,686:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:47,688:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:47,704:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:47,719:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:47,735:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:47,750:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:47,766:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:47,782:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:47,813:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:47,829:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:47,860:INFO:Calculating mean and std
2022-09-12 20:34:47,860:INFO:Creating metrics dataframe
2022-09-12 20:34:47,860:INFO:Uploading results into container
2022-09-12 20:34:47,860:INFO:Uploading model into container now
2022-09-12 20:34:47,860:INFO:master_model_container: 16
2022-09-12 20:34:47,860:INFO:display_container: 2
2022-09-12 20:34:47,860:INFO:GradientBoostingRegressor(random_state=123)
2022-09-12 20:34:47,860:INFO:create_model() successfully completed......................................
2022-09-12 20:34:47,985:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:47,985:INFO:Creating metrics dataframe
2022-09-12 20:34:48,000:INFO:Initializing Light Gradient Boosting Machine
2022-09-12 20:34:48,000:INFO:Total runtime is 0.16461767355600992 minutes
2022-09-12 20:34:48,016:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:48,016:INFO:Initializing create_model()
2022-09-12 20:34:48,016:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6525E2700>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:48,016:INFO:Checking exceptions
2022-09-12 20:34:48,016:INFO:Importing libraries
2022-09-12 20:34:48,016:INFO:Copying training dataset
2022-09-12 20:34:48,016:INFO:Defining folds
2022-09-12 20:34:48,016:INFO:Declaring metric variables
2022-09-12 20:34:48,032:INFO:Importing untrained model
2022-09-12 20:34:48,040:INFO:Light Gradient Boosting Machine Imported successfully
2022-09-12 20:34:48,051:INFO:Starting cross validation
2022-09-12 20:34:48,052:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:48,119:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:48,152:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:48,155:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:48,170:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:48,186:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:48,186:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:48,217:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:48,233:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:48,248:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:48,248:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:48,280:INFO:Calculating mean and std
2022-09-12 20:34:48,280:INFO:Creating metrics dataframe
2022-09-12 20:34:48,280:INFO:Uploading results into container
2022-09-12 20:34:48,280:INFO:Uploading model into container now
2022-09-12 20:34:48,280:INFO:master_model_container: 17
2022-09-12 20:34:48,280:INFO:display_container: 2
2022-09-12 20:34:48,280:INFO:LGBMRegressor(random_state=123)
2022-09-12 20:34:48,280:INFO:create_model() successfully completed......................................
2022-09-12 20:34:48,387:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:48,387:INFO:Creating metrics dataframe
2022-09-12 20:34:48,403:INFO:Initializing Dummy Regressor
2022-09-12 20:34:48,403:INFO:Total runtime is 0.1713293155034383 minutes
2022-09-12 20:34:48,419:INFO:SubProcess create_model() called ==================================
2022-09-12 20:34:48,419:INFO:Initializing create_model()
2022-09-12 20:34:48,419:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6525E2700>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:48,419:INFO:Checking exceptions
2022-09-12 20:34:48,419:INFO:Importing libraries
2022-09-12 20:34:48,419:INFO:Copying training dataset
2022-09-12 20:34:48,419:INFO:Defining folds
2022-09-12 20:34:48,419:INFO:Declaring metric variables
2022-09-12 20:34:48,419:INFO:Importing untrained model
2022-09-12 20:34:48,439:INFO:Dummy Regressor Imported successfully
2022-09-12 20:34:48,449:INFO:Starting cross validation
2022-09-12 20:34:48,450:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:48,503:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:48,503:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:48,519:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:48,543:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:48,550:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:48,554:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:48,570:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:48,586:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:48,601:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:48,601:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:48,617:INFO:Calculating mean and std
2022-09-12 20:34:48,617:INFO:Creating metrics dataframe
2022-09-12 20:34:48,617:INFO:Uploading results into container
2022-09-12 20:34:48,633:INFO:Uploading model into container now
2022-09-12 20:34:48,633:INFO:master_model_container: 18
2022-09-12 20:34:48,633:INFO:display_container: 2
2022-09-12 20:34:48,633:INFO:DummyRegressor()
2022-09-12 20:34:48,633:INFO:create_model() successfully completed......................................
2022-09-12 20:34:48,736:INFO:SubProcess create_model() end ==================================
2022-09-12 20:34:48,736:INFO:Creating metrics dataframe
2022-09-12 20:34:48,770:INFO:Initializing create_model()
2022-09-12 20:34:48,771:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:48,772:INFO:Checking exceptions
2022-09-12 20:34:48,778:INFO:Importing libraries
2022-09-12 20:34:48,778:INFO:Copying training dataset
2022-09-12 20:34:48,781:INFO:Defining folds
2022-09-12 20:34:48,781:INFO:Declaring metric variables
2022-09-12 20:34:48,781:INFO:Importing untrained model
2022-09-12 20:34:48,781:INFO:Declaring custom model
2022-09-12 20:34:48,782:INFO:Huber Regressor Imported successfully
2022-09-12 20:34:48,783:INFO:Cross validation set to False
2022-09-12 20:34:48,783:INFO:Fitting Model
2022-09-12 20:34:48,852:INFO:HuberRegressor()
2022-09-12 20:34:48,852:INFO:create_model() successfully completed......................................
2022-09-12 20:34:49,000:INFO:master_model_container: 18
2022-09-12 20:34:49,001:INFO:display_container: 2
2022-09-12 20:34:49,001:INFO:HuberRegressor()
2022-09-12 20:34:49,001:INFO:compare_models() successfully completed......................................
2022-09-12 20:34:52,161:INFO:Initializing create_model()
2022-09-12 20:34:52,162:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, estimator=huber, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:34:52,163:INFO:Checking exceptions
2022-09-12 20:34:52,246:INFO:Importing libraries
2022-09-12 20:34:52,249:INFO:Copying training dataset
2022-09-12 20:34:52,259:INFO:Defining folds
2022-09-12 20:34:52,259:INFO:Declaring metric variables
2022-09-12 20:34:52,268:INFO:Importing untrained model
2022-09-12 20:34:52,277:INFO:Huber Regressor Imported successfully
2022-09-12 20:34:52,289:INFO:Starting cross validation
2022-09-12 20:34:52,291:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:34:52,386:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:52,412:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:52,433:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:52,446:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:52,457:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:52,478:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:52,498:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:52,510:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:52,528:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:52,548:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:52,576:INFO:Calculating mean and std
2022-09-12 20:34:52,576:INFO:Creating metrics dataframe
2022-09-12 20:34:52,584:INFO:Finalizing model
2022-09-12 20:34:52,785:INFO:Uploading results into container
2022-09-12 20:34:52,787:INFO:Uploading model into container now
2022-09-12 20:34:52,808:INFO:master_model_container: 19
2022-09-12 20:34:52,808:INFO:display_container: 3
2022-09-12 20:34:52,809:INFO:HuberRegressor()
2022-09-12 20:34:52,809:INFO:create_model() successfully completed......................................
2022-09-12 20:34:55,085:INFO:Initializing tune_model()
2022-09-12 20:34:55,085:INFO:tune_model(estimator=HuberRegressor(), fold=None, round=4, n_iter=50, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>)
2022-09-12 20:34:55,085:INFO:Checking exceptions
2022-09-12 20:34:55,158:INFO:Copying training dataset
2022-09-12 20:34:55,166:INFO:Checking base model
2022-09-12 20:34:55,166:INFO:Base model : Huber Regressor
2022-09-12 20:34:55,174:INFO:Declaring metric variables
2022-09-12 20:34:55,183:INFO:Defining Hyperparameters
2022-09-12 20:34:55,341:INFO:Tuning with n_jobs=-1
2022-09-12 20:34:55,341:INFO:Initializing RandomizedSearchCV
2022-09-12 20:34:55,438:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:55,453:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:55,469:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:55,469:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:55,485:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:55,485:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:55,500:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:55,547:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:55,563:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:55,563:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:55,688:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:55,688:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:55,703:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:55,803:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:55,819:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:55,855:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:55,858:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:55,922:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,083:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,108:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,124:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,140:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,140:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,202:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,202:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,265:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,265:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,296:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,311:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,311:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,327:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,351:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,351:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,367:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,367:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,414:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,461:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,476:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,476:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,476:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,508:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,523:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,539:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,586:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,586:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,601:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,633:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,648:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,648:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,685:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,708:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,736:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,752:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,752:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,783:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,788:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,803:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,803:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,835:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,850:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,881:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,913:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,913:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,913:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,928:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,960:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,975:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:56,975:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,006:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,053:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,131:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,147:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,163:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,163:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,163:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,178:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,216:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:34:57,217:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,219:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:34:57,219:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,292:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,308:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,323:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,339:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,370:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,417:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,433:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,417:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,448:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,448:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,511:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,511:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:34:57,511:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,542:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,542:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,542:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:34:57,542:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,542:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,558:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,589:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,636:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,636:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,667:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,667:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,683:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,683:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,698:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,776:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,839:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,839:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,855:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,855:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,870:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,886:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,948:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,948:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,980:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:57,980:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,011:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,042:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,042:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,042:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,058:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,089:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,089:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,151:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,151:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,183:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,198:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,198:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,229:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,245:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,261:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,276:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,292:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,323:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,323:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,339:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,354:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,370:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,370:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,370:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,401:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,447:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,454:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,470:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,511:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,533:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,571:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,591:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,595:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,600:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,602:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,610:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,646:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,651:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,684:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,690:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,708:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,708:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,709:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,744:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,747:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,750:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,793:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,833:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,842:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,856:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,866:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,880:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,893:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,894:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,897:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,935:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,966:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:58,992:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,007:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,019:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,023:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,052:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,064:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,064:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,088:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,092:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,114:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,117:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,151:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,157:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,192:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,197:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,209:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,217:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,266:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,274:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,278:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,295:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,300:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,314:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,337:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,364:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,366:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,382:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,398:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,406:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,409:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,426:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,458:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,461:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,462:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,493:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,508:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,541:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,565:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,620:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,626:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,640:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,656:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,659:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,668:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,687:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,695:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,729:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,750:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,765:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,768:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,780:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,794:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,805:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,808:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,826:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,862:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,868:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,881:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,903:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,908:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,931:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,955:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,959:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,967:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:34:59,983:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,007:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,034:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,050:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,053:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,075:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,094:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,101:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,102:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,110:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,144:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,178:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,189:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,199:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,201:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,202:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,218:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,240:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,252:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,282:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,312:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,328:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,333:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,344:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,354:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,381:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,391:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,414:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,415:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,439:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,450:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,464:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,486:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,499:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,515:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,535:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,556:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,574:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,587:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,589:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,605:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,627:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,646:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,647:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,685:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,701:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,718:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,730:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,733:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,741:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,753:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,770:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,779:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,830:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,832:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,853:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,863:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,877:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,897:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,903:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,932:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,963:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,972:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,981:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,986:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:00,995:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,069:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,107:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,107:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,117:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,118:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,129:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,143:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,184:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,210:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,253:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,261:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,277:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,312:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,317:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,330:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,365:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,373:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,378:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,425:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,487:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,503:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,513:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,516:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,563:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,602:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,605:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,609:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:35:01,609:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,609:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,631:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,637:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:35:01,638:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,683:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,700:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,745:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,796:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,812:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,812:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,817:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,829:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,841:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,842:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,942:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,944:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,950:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,963:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,971:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,991:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:01,998:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:35:01,998:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,022:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,053:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,073:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,078:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,090:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,093:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,100:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,122:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,125:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,153:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,185:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,186:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,208:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,232:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,238:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,257:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,260:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,279:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,301:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,330:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,337:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,343:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,359:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,362:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,369:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,389:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,411:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,435:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,446:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,463:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,480:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,494:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,510:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,518:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,545:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,550:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,578:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,582:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,597:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,597:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,617:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,638:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,650:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,665:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,681:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,694:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,703:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,713:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,734:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,741:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,773:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,784:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,803:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,824:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,851:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,853:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,867:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,869:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,894:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,921:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,940:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:02,941:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,025:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,042:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,047:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,053:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,053:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,066:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,066:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,073:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,140:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,143:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,176:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,181:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,189:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,197:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,197:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,231:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,235:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,243:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,276:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,280:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,339:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,352:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,353:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,354:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,354:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,391:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,405:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,421:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,464:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,469:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,473:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,473:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,487:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,524:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,542:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,560:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,575:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,579:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,598:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,599:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,601:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,643:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,659:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,673:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,682:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,701:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,715:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,717:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,726:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,759:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,770:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,793:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,821:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,832:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,831:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,855:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,860:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,882:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,890:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,924:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,932:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,932:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,948:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,982:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,989:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,991:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:03,998:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,035:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,043:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,048:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,057:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,097:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,106:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,130:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,152:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,152:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,162:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,178:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,193:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,207:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,224:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,238:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,277:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,281:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,284:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,290:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,300:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,317:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,321:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,360:INFO:best_params: {'actual_estimator__fit_intercept': True, 'actual_estimator__epsilon': 1.35, 'actual_estimator__alpha': 0.15}
2022-09-12 20:35:04,362:INFO:Hyperparameter search completed
2022-09-12 20:35:04,362:INFO:SubProcess create_model() called ==================================
2022-09-12 20:35:04,363:INFO:Initializing create_model()
2022-09-12 20:35:04,364:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6525E2700>, model_only=True, return_train_score=False, kwargs={'fit_intercept': True, 'epsilon': 1.35, 'alpha': 0.15})
2022-09-12 20:35:04,364:INFO:Checking exceptions
2022-09-12 20:35:04,368:INFO:Importing libraries
2022-09-12 20:35:04,369:INFO:Copying training dataset
2022-09-12 20:35:04,374:INFO:Defining folds
2022-09-12 20:35:04,375:INFO:Declaring metric variables
2022-09-12 20:35:04,382:INFO:Importing untrained model
2022-09-12 20:35:04,382:INFO:Declaring custom model
2022-09-12 20:35:04,392:INFO:Huber Regressor Imported successfully
2022-09-12 20:35:04,407:INFO:Starting cross validation
2022-09-12 20:35:04,408:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:35:04,493:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,505:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,529:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,541:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,556:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,571:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,586:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,602:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,615:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,617:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,637:INFO:Calculating mean and std
2022-09-12 20:35:04,640:INFO:Creating metrics dataframe
2022-09-12 20:35:04,651:INFO:Finalizing model
2022-09-12 20:35:04,708:INFO:Uploading results into container
2022-09-12 20:35:04,710:INFO:Uploading model into container now
2022-09-12 20:35:04,710:INFO:master_model_container: 20
2022-09-12 20:35:04,710:INFO:display_container: 4
2022-09-12 20:35:04,711:INFO:HuberRegressor(alpha=0.15)
2022-09-12 20:35:04,711:INFO:create_model() successfully completed......................................
2022-09-12 20:35:04,833:INFO:SubProcess create_model() end ==================================
2022-09-12 20:35:04,833:INFO:choose_better activated
2022-09-12 20:35:04,838:INFO:SubProcess create_model() called ==================================
2022-09-12 20:35:04,839:INFO:Initializing create_model()
2022-09-12 20:35:04,839:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:35:04,839:INFO:Checking exceptions
2022-09-12 20:35:04,844:INFO:Importing libraries
2022-09-12 20:35:04,844:INFO:Copying training dataset
2022-09-12 20:35:04,847:INFO:Defining folds
2022-09-12 20:35:04,847:INFO:Declaring metric variables
2022-09-12 20:35:04,848:INFO:Importing untrained model
2022-09-12 20:35:04,848:INFO:Declaring custom model
2022-09-12 20:35:04,848:INFO:Huber Regressor Imported successfully
2022-09-12 20:35:04,849:INFO:Starting cross validation
2022-09-12 20:35:04,850:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:35:04,912:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,941:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,948:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,976:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:04,988:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:05,004:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:05,024:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:05,039:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:05,058:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:05,073:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:35:05,098:INFO:Calculating mean and std
2022-09-12 20:35:05,099:INFO:Creating metrics dataframe
2022-09-12 20:35:05,102:INFO:Finalizing model
2022-09-12 20:35:05,134:INFO:Uploading results into container
2022-09-12 20:35:05,135:INFO:Uploading model into container now
2022-09-12 20:35:05,135:INFO:master_model_container: 21
2022-09-12 20:35:05,136:INFO:display_container: 5
2022-09-12 20:35:05,136:INFO:HuberRegressor()
2022-09-12 20:35:05,136:INFO:create_model() successfully completed......................................
2022-09-12 20:35:05,240:INFO:SubProcess create_model() end ==================================
2022-09-12 20:35:05,241:INFO:HuberRegressor() result for R2 is -1.5037
2022-09-12 20:35:05,242:INFO:HuberRegressor(alpha=0.15) result for R2 is -1.4706
2022-09-12 20:35:05,242:INFO:HuberRegressor(alpha=0.15) is best model
2022-09-12 20:35:05,242:INFO:choose_better completed
2022-09-12 20:35:05,257:INFO:master_model_container: 21
2022-09-12 20:35:05,257:INFO:display_container: 4
2022-09-12 20:35:05,258:INFO:HuberRegressor(alpha=0.15)
2022-09-12 20:35:05,258:INFO:tune_model() successfully completed......................................
2022-09-12 20:35:09,729:INFO:Initializing evaluate_model()
2022-09-12 20:35:09,729:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, estimator=HuberRegressor(alpha=0.15), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2022-09-12 20:35:09,760:INFO:Initializing plot_model()
2022-09-12 20:35:09,769:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=HuberRegressor(alpha=0.15), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, system=True)
2022-09-12 20:35:09,769:INFO:Checking exceptions
2022-09-12 20:35:09,769:INFO:Preloading libraries
2022-09-12 20:35:09,769:INFO:Copying training dataset
2022-09-12 20:35:09,769:INFO:Plot type: pipeline
2022-09-12 20:35:10,479:INFO:Visual Rendered Successfully
2022-09-12 20:35:10,579:INFO:plot_model() successfully completed......................................
2022-09-12 20:35:14,240:INFO:Initializing plot_model()
2022-09-12 20:35:14,240:INFO:plot_model(plot=cooks, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=HuberRegressor(alpha=0.15), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, system=True)
2022-09-12 20:35:14,240:INFO:Checking exceptions
2022-09-12 20:35:14,244:INFO:Preloading libraries
2022-09-12 20:35:14,244:INFO:Copying training dataset
2022-09-12 20:35:14,245:INFO:Plot type: cooks
2022-09-12 20:35:14,436:INFO:Fitting Model
2022-09-12 20:35:15,187:INFO:Visual Rendered Successfully
2022-09-12 20:35:15,303:INFO:plot_model() successfully completed......................................
2022-09-12 20:35:15,319:INFO:Initializing plot_model()
2022-09-12 20:35:15,319:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=HuberRegressor(alpha=0.15), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, system=True)
2022-09-12 20:35:15,319:INFO:Checking exceptions
2022-09-12 20:35:15,319:INFO:Preloading libraries
2022-09-12 20:35:15,319:INFO:Copying training dataset
2022-09-12 20:35:15,319:INFO:Plot type: pipeline
2022-09-12 20:35:15,459:INFO:Visual Rendered Successfully
2022-09-12 20:35:15,584:INFO:plot_model() successfully completed......................................
2022-09-12 20:35:15,856:INFO:Initializing plot_model()
2022-09-12 20:35:15,856:INFO:plot_model(plot=cooks, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=HuberRegressor(alpha=0.15), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, system=True)
2022-09-12 20:35:15,857:INFO:Checking exceptions
2022-09-12 20:35:15,859:INFO:Preloading libraries
2022-09-12 20:35:15,859:INFO:Copying training dataset
2022-09-12 20:35:15,859:INFO:Plot type: cooks
2022-09-12 20:35:15,920:INFO:Fitting Model
2022-09-12 20:35:16,265:INFO:Visual Rendered Successfully
2022-09-12 20:35:16,369:INFO:plot_model() successfully completed......................................
2022-09-12 20:35:16,560:INFO:Initializing plot_model()
2022-09-12 20:35:16,560:INFO:plot_model(plot=vc, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=HuberRegressor(alpha=0.15), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, system=True)
2022-09-12 20:35:16,560:INFO:Checking exceptions
2022-09-12 20:35:16,563:INFO:Preloading libraries
2022-09-12 20:35:16,564:INFO:Copying training dataset
2022-09-12 20:35:16,564:INFO:Plot type: vc
2022-09-12 20:35:16,565:INFO:Determining param_name
2022-09-12 20:35:16,565:INFO:param_name: alpha
2022-09-12 20:35:16,644:INFO:Fitting Model
2022-09-12 20:35:17,345:INFO:Visual Rendered Successfully
2022-09-12 20:35:17,463:INFO:plot_model() successfully completed......................................
2022-09-12 20:35:17,485:INFO:Initializing plot_model()
2022-09-12 20:35:17,485:INFO:plot_model(plot=residuals_interactive, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=HuberRegressor(alpha=0.15), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, system=True)
2022-09-12 20:35:17,485:INFO:Checking exceptions
2022-09-12 20:35:17,489:INFO:Preloading libraries
2022-09-12 20:35:17,490:INFO:Copying training dataset
2022-09-12 20:35:17,490:INFO:Plot type: residuals_interactive
2022-09-12 20:35:17,601:INFO:Calculated model residuals
2022-09-12 20:35:18,840:INFO:Calculated Tunkey-Anscombe Plot
2022-09-12 20:35:18,900:INFO:Calculated Normal QQ Plot
2022-09-12 20:35:19,025:INFO:Calculated Scale-Location Plot
2022-09-12 20:35:19,283:INFO:Calculated Residual vs Leverage Plot inc. Cook's distance
2022-09-12 20:35:19,415:INFO:Visual Rendered Successfully
2022-09-12 20:35:19,538:INFO:plot_model() successfully completed......................................
2022-09-12 20:35:19,571:INFO:Initializing plot_model()
2022-09-12 20:35:19,571:INFO:plot_model(plot=feature, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=HuberRegressor(alpha=0.15), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, system=True)
2022-09-12 20:35:19,571:INFO:Checking exceptions
2022-09-12 20:35:19,574:INFO:Preloading libraries
2022-09-12 20:35:19,574:INFO:Copying training dataset
2022-09-12 20:35:19,574:INFO:Plot type: feature
2022-09-12 20:35:19,763:INFO:Visual Rendered Successfully
2022-09-12 20:35:19,873:INFO:plot_model() successfully completed......................................
2022-09-12 20:35:21,035:INFO:Initializing plot_model()
2022-09-12 20:35:21,035:INFO:plot_model(plot=parameter, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=HuberRegressor(alpha=0.15), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, system=True)
2022-09-12 20:35:21,035:INFO:Checking exceptions
2022-09-12 20:35:21,035:INFO:Preloading libraries
2022-09-12 20:35:21,035:INFO:Copying training dataset
2022-09-12 20:35:21,035:INFO:Plot type: parameter
2022-09-12 20:35:21,035:INFO:Visual Rendered Successfully
2022-09-12 20:35:21,145:INFO:plot_model() successfully completed......................................
2022-09-12 20:35:27,347:INFO:Initializing predict_model()
2022-09-12 20:35:27,348:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652E5E850>, estimator=HuberRegressor(alpha=0.15), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001F6553198B0>)
2022-09-12 20:35:27,348:INFO:Checking exceptions
2022-09-12 20:35:27,348:INFO:Preloading libraries
2022-09-12 20:36:41,648:INFO:PyCaret RegressionExperiment
2022-09-12 20:36:41,648:INFO:Logging name: reg-default-name
2022-09-12 20:36:41,648:INFO:ML Usecase: MLUsecase.REGRESSION
2022-09-12 20:36:41,648:INFO:version 3.0.0.rc3
2022-09-12 20:36:41,648:INFO:Initializing setup()
2022-09-12 20:36:41,648:INFO:self.USI: bc94
2022-09-12 20:36:41,648:INFO:self.variable_keys: {'_ml_usecase', 'display_container', 'y_train', 'USI', '_all_metrics', 'fold_generator', 'exp_name_log', 'logging_param', 'y_test', 'log_plots_param', 'fold_shuffle_param', 'fold_groups_param', '_all_models_internal', 'transform_target_method_param', 'n_jobs_param', 'exp_id', 'gpu_param', 'seed', 'X_test', 'data', 'X_train', 'X', 'pipeline', 'master_model_container', 'y', '_all_models', 'memory', 'target_param', 'html_param', 'transform_target_param', '_available_plots', 'variable_keys', '_gpu_n_jobs_param', 'idx'}
2022-09-12 20:36:41,648:INFO:Checking environment
2022-09-12 20:36:41,648:INFO:python_version: 3.9.12
2022-09-12 20:36:41,648:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-09-12 20:36:41,648:INFO:machine: AMD64
2022-09-12 20:36:41,648:INFO:platform: Windows-10-10.0.22000-SP0
2022-09-12 20:36:41,649:INFO:Memory: svmem(total=12710350848, available=2384080896, percent=81.2, used=10326269952, free=2384080896)
2022-09-12 20:36:41,649:INFO:Physical Core: 4
2022-09-12 20:36:41,649:INFO:Logical Core: 8
2022-09-12 20:36:41,649:INFO:Checking libraries
2022-09-12 20:36:41,649:INFO:System:
2022-09-12 20:36:41,649:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2022-09-12 20:36:41,649:INFO:executable: C:\Users\saint\anaconda3\python.exe
2022-09-12 20:36:41,649:INFO:   machine: Windows-10-10.0.22000-SP0
2022-09-12 20:36:41,649:INFO:PyCaret required dependencies:
2022-09-12 20:36:41,649:INFO:                 pip: 22.1.2
2022-09-12 20:36:41,649:INFO:          setuptools: 63.4.1
2022-09-12 20:36:41,649:INFO:             pycaret: 3.0.0.rc3
2022-09-12 20:36:41,649:INFO:             IPython: 7.31.1
2022-09-12 20:36:41,650:INFO:          ipywidgets: 7.6.5
2022-09-12 20:36:41,650:INFO:                tqdm: 4.64.0
2022-09-12 20:36:41,650:INFO:               numpy: 1.21.5
2022-09-12 20:36:41,650:INFO:              pandas: 1.4.3
2022-09-12 20:36:41,650:INFO:              jinja2: 2.11.3
2022-09-12 20:36:41,650:INFO:               scipy: 1.7.3
2022-09-12 20:36:41,650:INFO:              joblib: 1.1.0
2022-09-12 20:36:41,650:INFO:             sklearn: 1.1.1
2022-09-12 20:36:41,650:INFO:                pyod: Installed but version unavailable
2022-09-12 20:36:41,650:INFO:            imblearn: 0.9.1
2022-09-12 20:36:41,650:INFO:   category_encoders: 2.5.0
2022-09-12 20:36:41,650:INFO:            lightgbm: 3.3.2
2022-09-12 20:36:41,650:INFO:               numba: 0.55.1
2022-09-12 20:36:41,650:INFO:            requests: 2.28.1
2022-09-12 20:36:41,650:INFO:          matplotlib: 3.5.2
2022-09-12 20:36:41,650:INFO:          scikitplot: 0.3.7
2022-09-12 20:36:41,650:INFO:         yellowbrick: 1.5
2022-09-12 20:36:41,650:INFO:              plotly: 5.9.0
2022-09-12 20:36:41,651:INFO:             kaleido: 0.2.1
2022-09-12 20:36:41,651:INFO:         statsmodels: 0.13.2
2022-09-12 20:36:41,651:INFO:              sktime: 0.11.4
2022-09-12 20:36:41,651:INFO:               tbats: Installed but version unavailable
2022-09-12 20:36:41,651:INFO:            pmdarima: 2.0.1
2022-09-12 20:36:41,651:INFO:              psutil: 5.9.0
2022-09-12 20:36:41,651:INFO:None
2022-09-12 20:36:41,651:INFO:Set up data.
2022-09-12 20:36:41,662:INFO:Set up train/test split.
2022-09-12 20:36:41,666:INFO:Set up folding strategy.
2022-09-12 20:36:41,667:INFO:Assigning column types.
2022-09-12 20:36:41,670:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-09-12 20:36:41,671:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-09-12 20:36:41,676:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:36:41,681:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:36:41,749:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:36:41,804:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:36:41,806:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:36:41,807:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:36:41,807:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-09-12 20:36:41,813:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:36:41,818:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:36:41,886:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:36:41,937:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:36:41,939:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:36:41,940:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:36:41,941:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-09-12 20:36:41,946:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:36:41,951:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:36:42,015:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:36:42,066:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:36:42,067:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:36:42,069:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:36:42,075:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:36:42,081:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:36:42,163:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:36:42,223:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:36:42,224:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:36:42,226:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:36:42,226:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-09-12 20:36:42,239:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:36:42,317:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:36:42,397:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:36:42,400:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:36:42,402:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:36:42,416:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:36:42,497:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:36:42,572:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:36:42,574:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:36:42,575:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:36:42,576:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-09-12 20:36:42,688:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:36:42,747:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:36:42,749:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:36:42,750:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:36:42,833:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:36:42,888:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:36:42,889:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:36:42,891:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:36:42,891:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-09-12 20:36:42,970:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:36:43,028:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:36:43,029:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:36:43,115:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:36:43,177:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:36:43,179:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:36:43,179:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-09-12 20:36:43,345:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:36:43,346:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:36:43,522:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:36:43,524:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:36:43,525:INFO:Preparing preprocessing pipeline...
2022-09-12 20:36:43,526:INFO:Set up simple imputation.
2022-09-12 20:36:43,526:INFO:Set up variance threshold.
2022-09-12 20:36:43,549:INFO:Finished creating preprocessing pipeline.
2022-09-12 20:36:43,549:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\saint\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['dosis_IC_ppm', 'CO2_gas'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-09-12 20:36:43,549:INFO:Creating final display dataframe.
2022-09-12 20:36:43,689:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target               mpy
2              Target type        Regression
3               Data shape          (77, 11)
4         Train data shape          (53, 11)
5          Test data shape          (24, 11)
6         Numeric features                 2
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU             False
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              bc94
2022-09-12 20:36:43,859:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:36:43,860:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:36:44,012:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:36:44,014:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:36:44,021:INFO:setup() successfully completed in 2.38s...............
2022-09-12 20:37:01,917:INFO:PyCaret RegressionExperiment
2022-09-12 20:37:01,917:INFO:Logging name: reg-default-name
2022-09-12 20:37:01,918:INFO:ML Usecase: MLUsecase.REGRESSION
2022-09-12 20:37:01,918:INFO:version 3.0.0.rc3
2022-09-12 20:37:01,918:INFO:Initializing setup()
2022-09-12 20:37:01,918:INFO:self.USI: 97f0
2022-09-12 20:37:01,918:INFO:self.variable_keys: {'_ml_usecase', 'display_container', 'y_train', 'USI', '_all_metrics', 'fold_generator', 'exp_name_log', 'logging_param', 'y_test', 'log_plots_param', 'fold_shuffle_param', 'fold_groups_param', '_all_models_internal', 'transform_target_method_param', 'n_jobs_param', 'exp_id', 'gpu_param', 'seed', 'X_test', 'data', 'X_train', 'X', 'pipeline', 'master_model_container', 'y', '_all_models', 'memory', 'target_param', 'html_param', 'transform_target_param', '_available_plots', 'variable_keys', '_gpu_n_jobs_param', 'idx'}
2022-09-12 20:37:01,918:INFO:Checking environment
2022-09-12 20:37:01,918:INFO:python_version: 3.9.12
2022-09-12 20:37:01,918:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-09-12 20:37:01,919:INFO:machine: AMD64
2022-09-12 20:37:01,919:INFO:platform: Windows-10-10.0.22000-SP0
2022-09-12 20:37:01,919:INFO:Memory: svmem(total=12710350848, available=2428604416, percent=80.9, used=10281746432, free=2428604416)
2022-09-12 20:37:01,919:INFO:Physical Core: 4
2022-09-12 20:37:01,919:INFO:Logical Core: 8
2022-09-12 20:37:01,919:INFO:Checking libraries
2022-09-12 20:37:01,919:INFO:System:
2022-09-12 20:37:01,919:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2022-09-12 20:37:01,920:INFO:executable: C:\Users\saint\anaconda3\python.exe
2022-09-12 20:37:01,920:INFO:   machine: Windows-10-10.0.22000-SP0
2022-09-12 20:37:01,920:INFO:PyCaret required dependencies:
2022-09-12 20:37:01,920:INFO:                 pip: 22.1.2
2022-09-12 20:37:01,920:INFO:          setuptools: 63.4.1
2022-09-12 20:37:01,920:INFO:             pycaret: 3.0.0.rc3
2022-09-12 20:37:01,920:INFO:             IPython: 7.31.1
2022-09-12 20:37:01,921:INFO:          ipywidgets: 7.6.5
2022-09-12 20:37:01,921:INFO:                tqdm: 4.64.0
2022-09-12 20:37:01,921:INFO:               numpy: 1.21.5
2022-09-12 20:37:01,921:INFO:              pandas: 1.4.3
2022-09-12 20:37:01,921:INFO:              jinja2: 2.11.3
2022-09-12 20:37:01,921:INFO:               scipy: 1.7.3
2022-09-12 20:37:01,921:INFO:              joblib: 1.1.0
2022-09-12 20:37:01,921:INFO:             sklearn: 1.1.1
2022-09-12 20:37:01,921:INFO:                pyod: Installed but version unavailable
2022-09-12 20:37:01,921:INFO:            imblearn: 0.9.1
2022-09-12 20:37:01,922:INFO:   category_encoders: 2.5.0
2022-09-12 20:37:01,922:INFO:            lightgbm: 3.3.2
2022-09-12 20:37:01,922:INFO:               numba: 0.55.1
2022-09-12 20:37:01,922:INFO:            requests: 2.28.1
2022-09-12 20:37:01,922:INFO:          matplotlib: 3.5.2
2022-09-12 20:37:01,922:INFO:          scikitplot: 0.3.7
2022-09-12 20:37:01,922:INFO:         yellowbrick: 1.5
2022-09-12 20:37:01,922:INFO:              plotly: 5.9.0
2022-09-12 20:37:01,922:INFO:             kaleido: 0.2.1
2022-09-12 20:37:01,923:INFO:         statsmodels: 0.13.2
2022-09-12 20:37:01,923:INFO:              sktime: 0.11.4
2022-09-12 20:37:01,923:INFO:               tbats: Installed but version unavailable
2022-09-12 20:37:01,923:INFO:            pmdarima: 2.0.1
2022-09-12 20:37:01,923:INFO:              psutil: 5.9.0
2022-09-12 20:37:01,923:INFO:None
2022-09-12 20:37:01,923:INFO:Set up data.
2022-09-12 20:37:01,932:INFO:Set up train/test split.
2022-09-12 20:37:01,937:INFO:Set up folding strategy.
2022-09-12 20:37:01,938:INFO:Assigning column types.
2022-09-12 20:37:01,941:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-09-12 20:37:01,941:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-09-12 20:37:01,947:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:37:01,954:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:37:02,029:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:37:02,092:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:37:02,092:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:02,092:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:02,092:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-09-12 20:37:02,108:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:37:02,108:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:37:02,205:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:37:02,267:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:37:02,267:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:02,267:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:02,267:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-09-12 20:37:02,283:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:37:02,283:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:37:02,378:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:37:02,432:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:37:02,448:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:02,448:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:02,448:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:37:02,448:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:37:02,557:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:37:02,619:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:37:02,619:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:02,619:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:02,619:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-09-12 20:37:02,635:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:37:02,744:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:37:02,827:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:37:02,829:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:02,830:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:02,842:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:37:02,917:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:37:02,975:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:37:02,976:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:02,978:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:02,978:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-09-12 20:37:03,071:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:37:03,133:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:37:03,135:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:03,137:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:03,246:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:37:03,301:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:37:03,317:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:03,317:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:03,317:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-09-12 20:37:03,452:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:37:03,550:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:03,550:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:03,691:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:37:03,753:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:03,753:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:03,753:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-09-12 20:37:03,969:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:03,969:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:04,193:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:04,195:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:04,196:INFO:Preparing preprocessing pipeline...
2022-09-12 20:37:04,197:INFO:Set up simple imputation.
2022-09-12 20:37:04,197:INFO:Set up variance threshold.
2022-09-12 20:37:04,215:INFO:Finished creating preprocessing pipeline.
2022-09-12 20:37:04,227:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\saint\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['dosis_IC_ppm', 'CO2_gas'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-09-12 20:37:04,227:INFO:Creating final display dataframe.
2022-09-12 20:37:04,346:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target               mpy
2              Target type        Regression
3               Data shape          (77, 11)
4         Train data shape          (53, 11)
5          Test data shape          (24, 11)
6         Numeric features                 2
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU             False
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              97f0
2022-09-12 20:37:04,596:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:04,596:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:04,815:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:04,815:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:04,831:INFO:setup() successfully completed in 2.92s...............
2022-09-12 20:37:29,383:INFO:PyCaret RegressionExperiment
2022-09-12 20:37:29,384:INFO:Logging name: reg-default-name
2022-09-12 20:37:29,384:INFO:ML Usecase: MLUsecase.REGRESSION
2022-09-12 20:37:29,384:INFO:version 3.0.0.rc3
2022-09-12 20:37:29,384:INFO:Initializing setup()
2022-09-12 20:37:29,384:INFO:self.USI: 0a50
2022-09-12 20:37:29,384:INFO:self.variable_keys: {'_ml_usecase', 'display_container', 'y_train', 'USI', '_all_metrics', 'fold_generator', 'exp_name_log', 'logging_param', 'y_test', 'log_plots_param', 'fold_shuffle_param', 'fold_groups_param', '_all_models_internal', 'transform_target_method_param', 'n_jobs_param', 'exp_id', 'gpu_param', 'seed', 'X_test', 'data', 'X_train', 'X', 'pipeline', 'master_model_container', 'y', '_all_models', 'memory', 'target_param', 'html_param', 'transform_target_param', '_available_plots', 'variable_keys', '_gpu_n_jobs_param', 'idx'}
2022-09-12 20:37:29,384:INFO:Checking environment
2022-09-12 20:37:29,384:INFO:python_version: 3.9.12
2022-09-12 20:37:29,384:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-09-12 20:37:29,384:INFO:machine: AMD64
2022-09-12 20:37:29,385:INFO:platform: Windows-10-10.0.22000-SP0
2022-09-12 20:37:29,385:INFO:Memory: svmem(total=12710350848, available=2364882944, percent=81.4, used=10345467904, free=2364882944)
2022-09-12 20:37:29,385:INFO:Physical Core: 4
2022-09-12 20:37:29,385:INFO:Logical Core: 8
2022-09-12 20:37:29,385:INFO:Checking libraries
2022-09-12 20:37:29,385:INFO:System:
2022-09-12 20:37:29,385:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2022-09-12 20:37:29,385:INFO:executable: C:\Users\saint\anaconda3\python.exe
2022-09-12 20:37:29,385:INFO:   machine: Windows-10-10.0.22000-SP0
2022-09-12 20:37:29,385:INFO:PyCaret required dependencies:
2022-09-12 20:37:29,385:INFO:                 pip: 22.1.2
2022-09-12 20:37:29,386:INFO:          setuptools: 63.4.1
2022-09-12 20:37:29,386:INFO:             pycaret: 3.0.0.rc3
2022-09-12 20:37:29,386:INFO:             IPython: 7.31.1
2022-09-12 20:37:29,386:INFO:          ipywidgets: 7.6.5
2022-09-12 20:37:29,386:INFO:                tqdm: 4.64.0
2022-09-12 20:37:29,386:INFO:               numpy: 1.21.5
2022-09-12 20:37:29,386:INFO:              pandas: 1.4.3
2022-09-12 20:37:29,386:INFO:              jinja2: 2.11.3
2022-09-12 20:37:29,386:INFO:               scipy: 1.7.3
2022-09-12 20:37:29,387:INFO:              joblib: 1.1.0
2022-09-12 20:37:29,387:INFO:             sklearn: 1.1.1
2022-09-12 20:37:29,387:INFO:                pyod: Installed but version unavailable
2022-09-12 20:37:29,387:INFO:            imblearn: 0.9.1
2022-09-12 20:37:29,387:INFO:   category_encoders: 2.5.0
2022-09-12 20:37:29,387:INFO:            lightgbm: 3.3.2
2022-09-12 20:37:29,387:INFO:               numba: 0.55.1
2022-09-12 20:37:29,387:INFO:            requests: 2.28.1
2022-09-12 20:37:29,387:INFO:          matplotlib: 3.5.2
2022-09-12 20:37:29,388:INFO:          scikitplot: 0.3.7
2022-09-12 20:37:29,388:INFO:         yellowbrick: 1.5
2022-09-12 20:37:29,388:INFO:              plotly: 5.9.0
2022-09-12 20:37:29,388:INFO:             kaleido: 0.2.1
2022-09-12 20:37:29,388:INFO:         statsmodels: 0.13.2
2022-09-12 20:37:29,388:INFO:              sktime: 0.11.4
2022-09-12 20:37:29,388:INFO:               tbats: Installed but version unavailable
2022-09-12 20:37:29,388:INFO:            pmdarima: 2.0.1
2022-09-12 20:37:29,388:INFO:              psutil: 5.9.0
2022-09-12 20:37:29,388:INFO:None
2022-09-12 20:37:29,388:INFO:Set up data.
2022-09-12 20:37:29,400:INFO:Set up train/test split.
2022-09-12 20:37:29,405:INFO:Set up folding strategy.
2022-09-12 20:37:29,405:INFO:Assigning column types.
2022-09-12 20:37:29,411:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-09-12 20:37:29,411:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-09-12 20:37:29,417:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:37:29,423:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:37:29,499:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:37:29,568:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:37:29,569:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:29,571:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:29,571:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-09-12 20:37:29,577:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:37:29,589:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:37:29,669:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:37:29,728:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:37:29,729:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:29,731:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:29,731:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-09-12 20:37:29,737:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:37:29,743:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:37:29,821:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:37:29,881:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:37:29,882:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:29,884:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:29,890:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:37:29,897:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:37:29,974:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:37:30,055:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:37:30,058:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:30,062:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:30,063:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-09-12 20:37:30,080:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:37:30,173:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:37:30,252:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:37:30,254:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:30,256:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:30,280:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:37:30,398:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:37:30,465:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:37:30,467:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:30,468:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:30,469:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-09-12 20:37:30,568:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:37:30,638:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:37:30,640:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:30,642:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:30,765:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:37:30,822:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:37:30,825:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:30,826:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:30,827:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-09-12 20:37:30,916:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:37:30,974:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:30,975:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:31,062:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:37:31,121:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:31,122:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:31,123:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-09-12 20:37:31,291:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:31,292:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:31,491:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:31,492:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:31,494:INFO:Preparing preprocessing pipeline...
2022-09-12 20:37:31,495:INFO:Set up simple imputation.
2022-09-12 20:37:31,495:INFO:Set up variance threshold.
2022-09-12 20:37:31,588:INFO:Finished creating preprocessing pipeline.
2022-09-12 20:37:31,601:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\saint\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['BPPD', 'BAPD', 'Caudal_gas_MSCFD',
                                             'Presion_cabeza_psi',
                                             'Temperatura_cabeza_F',
                                             'Salinidad_ppm', 'CO2_gas',
                                             'bicarbonatos_ppm', 'dosis_IC_ppm',
                                             'Fe_ppm'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-09-12 20:37:31,602:INFO:Creating final display dataframe.
2022-09-12 20:37:31,904:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target               mpy
2              Target type        Regression
3               Data shape          (77, 11)
4         Train data shape          (53, 11)
5          Test data shape          (24, 11)
6         Numeric features                10
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU             False
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              0a50
2022-09-12 20:37:32,071:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:32,072:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:32,240:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:32,241:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:37:32,250:INFO:setup() successfully completed in 2.87s...............
2022-09-12 20:38:11,667:INFO:Initializing compare_models()
2022-09-12 20:38:11,667:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F654CE80A0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001F654CE80A0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-09-12 20:38:11,668:INFO:Checking exceptions
2022-09-12 20:38:11,672:INFO:Preparing display monitor
2022-09-12 20:38:11,758:INFO:Initializing Linear Regression
2022-09-12 20:38:11,759:INFO:Total runtime is 1.662572224934896e-05 minutes
2022-09-12 20:38:11,766:INFO:SubProcess create_model() called ==================================
2022-09-12 20:38:11,767:INFO:Initializing create_model()
2022-09-12 20:38:11,768:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F654CE80A0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6526222B0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:38:11,768:INFO:Checking exceptions
2022-09-12 20:38:11,771:INFO:Importing libraries
2022-09-12 20:38:11,771:INFO:Copying training dataset
2022-09-12 20:38:11,775:INFO:Defining folds
2022-09-12 20:38:11,775:INFO:Declaring metric variables
2022-09-12 20:38:11,781:INFO:Importing untrained model
2022-09-12 20:38:11,786:INFO:Linear Regression Imported successfully
2022-09-12 20:38:11,802:INFO:Starting cross validation
2022-09-12 20:38:11,808:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:38:12,269:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:12,325:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:12,339:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:12,382:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:12,405:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:12,588:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:12,589:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:12,654:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:13,117:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:13,128:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:13,277:INFO:Calculating mean and std
2022-09-12 20:38:13,281:INFO:Creating metrics dataframe
2022-09-12 20:38:13,286:INFO:Uploading results into container
2022-09-12 20:38:13,287:INFO:Uploading model into container now
2022-09-12 20:38:13,288:INFO:master_model_container: 1
2022-09-12 20:38:13,288:INFO:display_container: 2
2022-09-12 20:38:13,289:INFO:LinearRegression(n_jobs=-1)
2022-09-12 20:38:13,289:INFO:create_model() successfully completed......................................
2022-09-12 20:38:13,453:INFO:SubProcess create_model() end ==================================
2022-09-12 20:38:13,453:INFO:Creating metrics dataframe
2022-09-12 20:38:13,468:INFO:Initializing Lasso Regression
2022-09-12 20:38:13,468:INFO:Total runtime is 0.02850426435470581 minutes
2022-09-12 20:38:13,475:INFO:SubProcess create_model() called ==================================
2022-09-12 20:38:13,475:INFO:Initializing create_model()
2022-09-12 20:38:13,476:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F654CE80A0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6526222B0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:38:13,476:INFO:Checking exceptions
2022-09-12 20:38:13,479:INFO:Importing libraries
2022-09-12 20:38:13,480:INFO:Copying training dataset
2022-09-12 20:38:13,485:INFO:Defining folds
2022-09-12 20:38:13,486:INFO:Declaring metric variables
2022-09-12 20:38:13,493:INFO:Importing untrained model
2022-09-12 20:38:13,504:INFO:Lasso Regression Imported successfully
2022-09-12 20:38:13,520:INFO:Starting cross validation
2022-09-12 20:38:13,522:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:38:13,611:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:13,640:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:13,666:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:13,678:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:13,701:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:13,718:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:13,736:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:13,764:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:13,772:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:13,791:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:13,811:INFO:Calculating mean and std
2022-09-12 20:38:13,814:INFO:Creating metrics dataframe
2022-09-12 20:38:13,819:INFO:Uploading results into container
2022-09-12 20:38:13,820:INFO:Uploading model into container now
2022-09-12 20:38:13,821:INFO:master_model_container: 2
2022-09-12 20:38:13,821:INFO:display_container: 2
2022-09-12 20:38:13,822:INFO:Lasso(random_state=123)
2022-09-12 20:38:13,822:INFO:create_model() successfully completed......................................
2022-09-12 20:38:13,954:INFO:SubProcess create_model() end ==================================
2022-09-12 20:38:13,954:INFO:Creating metrics dataframe
2022-09-12 20:38:13,968:INFO:Initializing Ridge Regression
2022-09-12 20:38:13,968:INFO:Total runtime is 0.03683463335037231 minutes
2022-09-12 20:38:13,973:INFO:SubProcess create_model() called ==================================
2022-09-12 20:38:13,974:INFO:Initializing create_model()
2022-09-12 20:38:13,974:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F654CE80A0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6526222B0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:38:13,974:INFO:Checking exceptions
2022-09-12 20:38:13,977:INFO:Importing libraries
2022-09-12 20:38:13,978:INFO:Copying training dataset
2022-09-12 20:38:13,983:INFO:Defining folds
2022-09-12 20:38:13,984:INFO:Declaring metric variables
2022-09-12 20:38:13,992:INFO:Importing untrained model
2022-09-12 20:38:14,003:INFO:Ridge Regression Imported successfully
2022-09-12 20:38:14,017:INFO:Starting cross validation
2022-09-12 20:38:14,018:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:38:14,078:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:14,084:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:14,109:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:14,119:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:14,134:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:14,145:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:14,158:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:14,167:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:14,185:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:14,194:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:14,212:INFO:Calculating mean and std
2022-09-12 20:38:14,214:INFO:Creating metrics dataframe
2022-09-12 20:38:14,219:INFO:Uploading results into container
2022-09-12 20:38:14,220:INFO:Uploading model into container now
2022-09-12 20:38:14,221:INFO:master_model_container: 3
2022-09-12 20:38:14,221:INFO:display_container: 2
2022-09-12 20:38:14,222:INFO:Ridge(random_state=123)
2022-09-12 20:38:14,222:INFO:create_model() successfully completed......................................
2022-09-12 20:38:14,345:INFO:SubProcess create_model() end ==================================
2022-09-12 20:38:14,345:INFO:Creating metrics dataframe
2022-09-12 20:38:14,362:INFO:Initializing Elastic Net
2022-09-12 20:38:14,362:INFO:Total runtime is 0.043400422732035315 minutes
2022-09-12 20:38:14,368:INFO:SubProcess create_model() called ==================================
2022-09-12 20:38:14,369:INFO:Initializing create_model()
2022-09-12 20:38:14,369:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F654CE80A0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6526222B0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:38:14,369:INFO:Checking exceptions
2022-09-12 20:38:14,373:INFO:Importing libraries
2022-09-12 20:38:14,373:INFO:Copying training dataset
2022-09-12 20:38:14,382:INFO:Defining folds
2022-09-12 20:38:14,383:INFO:Declaring metric variables
2022-09-12 20:38:14,393:INFO:Importing untrained model
2022-09-12 20:38:14,404:INFO:Elastic Net Imported successfully
2022-09-12 20:38:14,420:INFO:Starting cross validation
2022-09-12 20:38:14,422:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:38:14,485:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:14,503:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:14,512:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:14,523:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:14,540:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:14,558:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:14,575:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:14,591:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:14,606:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:14,628:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:14,645:INFO:Calculating mean and std
2022-09-12 20:38:14,648:INFO:Creating metrics dataframe
2022-09-12 20:38:14,653:INFO:Uploading results into container
2022-09-12 20:38:14,654:INFO:Uploading model into container now
2022-09-12 20:38:14,655:INFO:master_model_container: 4
2022-09-12 20:38:14,655:INFO:display_container: 2
2022-09-12 20:38:14,656:INFO:ElasticNet(random_state=123)
2022-09-12 20:38:14,657:INFO:create_model() successfully completed......................................
2022-09-12 20:38:14,785:INFO:SubProcess create_model() end ==================================
2022-09-12 20:38:14,786:INFO:Creating metrics dataframe
2022-09-12 20:38:14,806:INFO:Initializing Least Angle Regression
2022-09-12 20:38:14,806:INFO:Total runtime is 0.050796973705291744 minutes
2022-09-12 20:38:14,813:INFO:SubProcess create_model() called ==================================
2022-09-12 20:38:14,813:INFO:Initializing create_model()
2022-09-12 20:38:14,813:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F654CE80A0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6526222B0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:38:14,814:INFO:Checking exceptions
2022-09-12 20:38:14,816:INFO:Importing libraries
2022-09-12 20:38:14,816:INFO:Copying training dataset
2022-09-12 20:38:14,821:INFO:Defining folds
2022-09-12 20:38:14,822:INFO:Declaring metric variables
2022-09-12 20:38:14,831:INFO:Importing untrained model
2022-09-12 20:38:14,841:INFO:Least Angle Regression Imported successfully
2022-09-12 20:38:14,858:INFO:Starting cross validation
2022-09-12 20:38:14,859:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:38:14,928:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:38:14,929:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:38:14,932:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:14,933:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:14,950:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:38:14,954:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:14,971:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:38:14,974:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:14,984:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:38:14,988:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:15,005:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:38:15,009:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:15,017:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:38:15,020:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:15,033:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:38:15,037:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:15,041:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:38:15,044:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:15,063:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:38:15,066:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:15,080:INFO:Calculating mean and std
2022-09-12 20:38:15,083:INFO:Creating metrics dataframe
2022-09-12 20:38:15,089:INFO:Uploading results into container
2022-09-12 20:38:15,090:INFO:Uploading model into container now
2022-09-12 20:38:15,091:INFO:master_model_container: 5
2022-09-12 20:38:15,091:INFO:display_container: 2
2022-09-12 20:38:15,092:INFO:Lars(random_state=123)
2022-09-12 20:38:15,092:INFO:create_model() successfully completed......................................
2022-09-12 20:38:15,208:INFO:SubProcess create_model() end ==================================
2022-09-12 20:38:15,208:INFO:Creating metrics dataframe
2022-09-12 20:38:15,232:INFO:Initializing Lasso Least Angle Regression
2022-09-12 20:38:15,232:INFO:Total runtime is 0.057908141613006586 minutes
2022-09-12 20:38:15,237:INFO:SubProcess create_model() called ==================================
2022-09-12 20:38:15,237:INFO:Initializing create_model()
2022-09-12 20:38:15,238:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F654CE80A0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6526222B0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:38:15,238:INFO:Checking exceptions
2022-09-12 20:38:15,240:INFO:Importing libraries
2022-09-12 20:38:15,241:INFO:Copying training dataset
2022-09-12 20:38:15,246:INFO:Defining folds
2022-09-12 20:38:15,246:INFO:Declaring metric variables
2022-09-12 20:38:15,251:INFO:Importing untrained model
2022-09-12 20:38:15,257:INFO:Lasso Least Angle Regression Imported successfully
2022-09-12 20:38:15,271:INFO:Starting cross validation
2022-09-12 20:38:15,273:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:38:15,322:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:38:15,323:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:15,337:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:38:15,338:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:15,346:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:38:15,347:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:15,370:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:38:15,371:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:15,387:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:38:15,389:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:15,402:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:38:15,403:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:15,413:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:38:15,414:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:15,434:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:38:15,435:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:15,446:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:38:15,447:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:15,459:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:38:15,461:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:15,479:INFO:Calculating mean and std
2022-09-12 20:38:15,481:INFO:Creating metrics dataframe
2022-09-12 20:38:15,486:INFO:Uploading results into container
2022-09-12 20:38:15,487:INFO:Uploading model into container now
2022-09-12 20:38:15,487:INFO:master_model_container: 6
2022-09-12 20:38:15,487:INFO:display_container: 2
2022-09-12 20:38:15,488:INFO:LassoLars(random_state=123)
2022-09-12 20:38:15,488:INFO:create_model() successfully completed......................................
2022-09-12 20:38:15,618:INFO:SubProcess create_model() end ==================================
2022-09-12 20:38:15,618:INFO:Creating metrics dataframe
2022-09-12 20:38:15,633:INFO:Initializing Orthogonal Matching Pursuit
2022-09-12 20:38:15,634:INFO:Total runtime is 0.06460307041803995 minutes
2022-09-12 20:38:15,639:INFO:SubProcess create_model() called ==================================
2022-09-12 20:38:15,640:INFO:Initializing create_model()
2022-09-12 20:38:15,640:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F654CE80A0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6526222B0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:38:15,640:INFO:Checking exceptions
2022-09-12 20:38:15,643:INFO:Importing libraries
2022-09-12 20:38:15,643:INFO:Copying training dataset
2022-09-12 20:38:15,650:INFO:Defining folds
2022-09-12 20:38:15,650:INFO:Declaring metric variables
2022-09-12 20:38:15,656:INFO:Importing untrained model
2022-09-12 20:38:15,665:INFO:Orthogonal Matching Pursuit Imported successfully
2022-09-12 20:38:15,679:INFO:Starting cross validation
2022-09-12 20:38:15,682:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:38:15,739:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:38:15,741:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:15,747:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:38:15,751:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:15,768:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:38:15,772:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:15,779:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:38:15,781:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:15,800:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:38:15,804:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:15,814:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:38:15,817:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:15,831:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:38:15,835:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:15,843:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:38:15,847:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:15,867:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:38:15,870:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:15,881:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:38:15,884:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:15,898:INFO:Calculating mean and std
2022-09-12 20:38:15,898:INFO:Creating metrics dataframe
2022-09-12 20:38:15,898:INFO:Uploading results into container
2022-09-12 20:38:15,898:INFO:Uploading model into container now
2022-09-12 20:38:15,898:INFO:master_model_container: 7
2022-09-12 20:38:15,898:INFO:display_container: 2
2022-09-12 20:38:15,898:INFO:OrthogonalMatchingPursuit()
2022-09-12 20:38:15,898:INFO:create_model() successfully completed......................................
2022-09-12 20:38:16,012:INFO:SubProcess create_model() end ==================================
2022-09-12 20:38:16,012:INFO:Creating metrics dataframe
2022-09-12 20:38:16,028:INFO:Initializing Bayesian Ridge
2022-09-12 20:38:16,028:INFO:Total runtime is 0.07116769552230834 minutes
2022-09-12 20:38:16,047:INFO:SubProcess create_model() called ==================================
2022-09-12 20:38:16,047:INFO:Initializing create_model()
2022-09-12 20:38:16,047:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F654CE80A0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6526222B0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:38:16,047:INFO:Checking exceptions
2022-09-12 20:38:16,050:INFO:Importing libraries
2022-09-12 20:38:16,050:INFO:Copying training dataset
2022-09-12 20:38:16,054:INFO:Defining folds
2022-09-12 20:38:16,055:INFO:Declaring metric variables
2022-09-12 20:38:16,060:INFO:Importing untrained model
2022-09-12 20:38:16,069:INFO:Bayesian Ridge Imported successfully
2022-09-12 20:38:16,080:INFO:Starting cross validation
2022-09-12 20:38:16,081:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:38:16,127:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:16,134:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:16,144:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:16,148:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:16,163:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:16,179:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:16,179:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:16,179:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:16,210:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:16,226:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:16,241:INFO:Calculating mean and std
2022-09-12 20:38:16,244:INFO:Creating metrics dataframe
2022-09-12 20:38:16,248:INFO:Uploading results into container
2022-09-12 20:38:16,249:INFO:Uploading model into container now
2022-09-12 20:38:16,249:INFO:master_model_container: 8
2022-09-12 20:38:16,249:INFO:display_container: 2
2022-09-12 20:38:16,249:INFO:BayesianRidge()
2022-09-12 20:38:16,249:INFO:create_model() successfully completed......................................
2022-09-12 20:38:16,343:INFO:SubProcess create_model() end ==================================
2022-09-12 20:38:16,343:INFO:Creating metrics dataframe
2022-09-12 20:38:16,359:INFO:Initializing Passive Aggressive Regressor
2022-09-12 20:38:16,375:INFO:Total runtime is 0.0769468863805135 minutes
2022-09-12 20:38:16,375:INFO:SubProcess create_model() called ==================================
2022-09-12 20:38:16,375:INFO:Initializing create_model()
2022-09-12 20:38:16,375:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F654CE80A0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6526222B0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:38:16,375:INFO:Checking exceptions
2022-09-12 20:38:16,382:INFO:Importing libraries
2022-09-12 20:38:16,382:INFO:Copying training dataset
2022-09-12 20:38:16,387:INFO:Defining folds
2022-09-12 20:38:16,387:INFO:Declaring metric variables
2022-09-12 20:38:16,392:INFO:Importing untrained model
2022-09-12 20:38:16,401:INFO:Passive Aggressive Regressor Imported successfully
2022-09-12 20:38:16,432:INFO:Starting cross validation
2022-09-12 20:38:16,434:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:38:16,487:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:16,497:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:16,513:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:16,513:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:16,528:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:16,544:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:16,560:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:16,575:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:16,591:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:16,591:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:16,607:INFO:Calculating mean and std
2022-09-12 20:38:16,607:INFO:Creating metrics dataframe
2022-09-12 20:38:16,607:INFO:Uploading results into container
2022-09-12 20:38:16,607:INFO:Uploading model into container now
2022-09-12 20:38:16,607:INFO:master_model_container: 9
2022-09-12 20:38:16,607:INFO:display_container: 2
2022-09-12 20:38:16,607:INFO:PassiveAggressiveRegressor(random_state=123)
2022-09-12 20:38:16,607:INFO:create_model() successfully completed......................................
2022-09-12 20:38:16,732:INFO:SubProcess create_model() end ==================================
2022-09-12 20:38:16,732:INFO:Creating metrics dataframe
2022-09-12 20:38:16,752:INFO:Initializing Huber Regressor
2022-09-12 20:38:16,753:INFO:Total runtime is 0.08325072129567464 minutes
2022-09-12 20:38:16,758:INFO:SubProcess create_model() called ==================================
2022-09-12 20:38:16,759:INFO:Initializing create_model()
2022-09-12 20:38:16,759:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F654CE80A0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6526222B0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:38:16,759:INFO:Checking exceptions
2022-09-12 20:38:16,761:INFO:Importing libraries
2022-09-12 20:38:16,762:INFO:Copying training dataset
2022-09-12 20:38:16,767:INFO:Defining folds
2022-09-12 20:38:16,767:INFO:Declaring metric variables
2022-09-12 20:38:16,772:INFO:Importing untrained model
2022-09-12 20:38:16,777:INFO:Huber Regressor Imported successfully
2022-09-12 20:38:16,792:INFO:Starting cross validation
2022-09-12 20:38:16,794:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:38:16,880:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:38:16,880:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:16,912:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:38:16,927:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:16,931:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:38:16,931:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:16,946:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:38:16,946:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:16,962:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:38:16,962:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:16,977:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:38:16,977:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:16,993:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:38:16,993:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:17,009:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:38:17,009:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:17,024:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:38:17,024:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:17,040:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:38:17,040:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:17,040:INFO:Calculating mean and std
2022-09-12 20:38:17,056:INFO:Creating metrics dataframe
2022-09-12 20:38:17,056:INFO:Uploading results into container
2022-09-12 20:38:17,056:INFO:Uploading model into container now
2022-09-12 20:38:17,056:INFO:master_model_container: 10
2022-09-12 20:38:17,056:INFO:display_container: 2
2022-09-12 20:38:17,056:INFO:HuberRegressor()
2022-09-12 20:38:17,056:INFO:create_model() successfully completed......................................
2022-09-12 20:38:17,175:INFO:SubProcess create_model() end ==================================
2022-09-12 20:38:17,175:INFO:Creating metrics dataframe
2022-09-12 20:38:17,190:INFO:Initializing K Neighbors Regressor
2022-09-12 20:38:17,193:INFO:Total runtime is 0.09058614571889241 minutes
2022-09-12 20:38:17,195:INFO:SubProcess create_model() called ==================================
2022-09-12 20:38:17,195:INFO:Initializing create_model()
2022-09-12 20:38:17,195:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F654CE80A0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6526222B0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:38:17,195:INFO:Checking exceptions
2022-09-12 20:38:17,199:INFO:Importing libraries
2022-09-12 20:38:17,199:INFO:Copying training dataset
2022-09-12 20:38:17,203:INFO:Defining folds
2022-09-12 20:38:17,204:INFO:Declaring metric variables
2022-09-12 20:38:17,209:INFO:Importing untrained model
2022-09-12 20:38:17,214:INFO:K Neighbors Regressor Imported successfully
2022-09-12 20:38:17,227:INFO:Starting cross validation
2022-09-12 20:38:17,228:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:38:17,277:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:17,289:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:17,297:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:17,309:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:17,329:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:17,336:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:17,345:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:17,360:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:17,360:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:17,376:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:17,407:INFO:Calculating mean and std
2022-09-12 20:38:17,407:INFO:Creating metrics dataframe
2022-09-12 20:38:17,423:INFO:Uploading results into container
2022-09-12 20:38:17,423:INFO:Uploading model into container now
2022-09-12 20:38:17,423:INFO:master_model_container: 11
2022-09-12 20:38:17,423:INFO:display_container: 2
2022-09-12 20:38:17,423:INFO:KNeighborsRegressor(n_jobs=-1)
2022-09-12 20:38:17,423:INFO:create_model() successfully completed......................................
2022-09-12 20:38:17,526:INFO:SubProcess create_model() end ==================================
2022-09-12 20:38:17,526:INFO:Creating metrics dataframe
2022-09-12 20:38:17,542:INFO:Initializing Decision Tree Regressor
2022-09-12 20:38:17,542:INFO:Total runtime is 0.09640502134958903 minutes
2022-09-12 20:38:17,559:INFO:SubProcess create_model() called ==================================
2022-09-12 20:38:17,560:INFO:Initializing create_model()
2022-09-12 20:38:17,560:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F654CE80A0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6526222B0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:38:17,560:INFO:Checking exceptions
2022-09-12 20:38:17,562:INFO:Importing libraries
2022-09-12 20:38:17,562:INFO:Copying training dataset
2022-09-12 20:38:17,567:INFO:Defining folds
2022-09-12 20:38:17,567:INFO:Declaring metric variables
2022-09-12 20:38:17,572:INFO:Importing untrained model
2022-09-12 20:38:17,582:INFO:Decision Tree Regressor Imported successfully
2022-09-12 20:38:17,594:INFO:Starting cross validation
2022-09-12 20:38:17,596:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:38:17,650:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:17,659:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:17,663:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:17,679:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:17,679:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:17,694:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:17,710:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:17,726:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:17,726:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:17,741:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:17,757:INFO:Calculating mean and std
2022-09-12 20:38:17,757:INFO:Creating metrics dataframe
2022-09-12 20:38:17,773:INFO:Uploading results into container
2022-09-12 20:38:17,773:INFO:Uploading model into container now
2022-09-12 20:38:17,773:INFO:master_model_container: 12
2022-09-12 20:38:17,773:INFO:display_container: 2
2022-09-12 20:38:17,773:INFO:DecisionTreeRegressor(random_state=123)
2022-09-12 20:38:17,773:INFO:create_model() successfully completed......................................
2022-09-12 20:38:17,892:INFO:SubProcess create_model() end ==================================
2022-09-12 20:38:17,892:INFO:Creating metrics dataframe
2022-09-12 20:38:17,911:INFO:Initializing Random Forest Regressor
2022-09-12 20:38:17,912:INFO:Total runtime is 0.10256755352020264 minutes
2022-09-12 20:38:17,916:INFO:SubProcess create_model() called ==================================
2022-09-12 20:38:17,917:INFO:Initializing create_model()
2022-09-12 20:38:17,917:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F654CE80A0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6526222B0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:38:17,917:INFO:Checking exceptions
2022-09-12 20:38:17,919:INFO:Importing libraries
2022-09-12 20:38:17,919:INFO:Copying training dataset
2022-09-12 20:38:17,925:INFO:Defining folds
2022-09-12 20:38:17,925:INFO:Declaring metric variables
2022-09-12 20:38:17,933:INFO:Importing untrained model
2022-09-12 20:38:17,938:INFO:Random Forest Regressor Imported successfully
2022-09-12 20:38:17,953:INFO:Starting cross validation
2022-09-12 20:38:17,954:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:38:18,228:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:18,291:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:18,291:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:18,322:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:18,338:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:18,368:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:18,399:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:18,478:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:18,666:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:18,682:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:18,729:INFO:Calculating mean and std
2022-09-12 20:38:18,729:INFO:Creating metrics dataframe
2022-09-12 20:38:18,748:INFO:Uploading results into container
2022-09-12 20:38:18,749:INFO:Uploading model into container now
2022-09-12 20:38:18,750:INFO:master_model_container: 13
2022-09-12 20:38:18,750:INFO:display_container: 2
2022-09-12 20:38:18,751:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-09-12 20:38:18,751:INFO:create_model() successfully completed......................................
2022-09-12 20:38:18,856:INFO:SubProcess create_model() end ==================================
2022-09-12 20:38:18,856:INFO:Creating metrics dataframe
2022-09-12 20:38:18,872:INFO:Initializing Extra Trees Regressor
2022-09-12 20:38:18,888:INFO:Total runtime is 0.1188329299290975 minutes
2022-09-12 20:38:18,892:INFO:SubProcess create_model() called ==================================
2022-09-12 20:38:18,892:INFO:Initializing create_model()
2022-09-12 20:38:18,893:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F654CE80A0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6526222B0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:38:18,893:INFO:Checking exceptions
2022-09-12 20:38:18,895:INFO:Importing libraries
2022-09-12 20:38:18,895:INFO:Copying training dataset
2022-09-12 20:38:18,900:INFO:Defining folds
2022-09-12 20:38:18,900:INFO:Declaring metric variables
2022-09-12 20:38:18,905:INFO:Importing untrained model
2022-09-12 20:38:18,913:INFO:Extra Trees Regressor Imported successfully
2022-09-12 20:38:18,928:INFO:Starting cross validation
2022-09-12 20:38:18,929:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:38:19,153:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:19,200:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:19,200:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:19,278:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:19,262:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:19,280:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:19,296:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:19,358:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:19,499:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:19,515:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:19,561:INFO:Calculating mean and std
2022-09-12 20:38:19,561:INFO:Creating metrics dataframe
2022-09-12 20:38:19,577:INFO:Uploading results into container
2022-09-12 20:38:19,577:INFO:Uploading model into container now
2022-09-12 20:38:19,577:INFO:master_model_container: 14
2022-09-12 20:38:19,577:INFO:display_container: 2
2022-09-12 20:38:19,577:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-09-12 20:38:19,577:INFO:create_model() successfully completed......................................
2022-09-12 20:38:19,689:INFO:SubProcess create_model() end ==================================
2022-09-12 20:38:19,689:INFO:Creating metrics dataframe
2022-09-12 20:38:19,723:INFO:Initializing AdaBoost Regressor
2022-09-12 20:38:19,724:INFO:Total runtime is 0.1327670415242513 minutes
2022-09-12 20:38:19,730:INFO:SubProcess create_model() called ==================================
2022-09-12 20:38:19,731:INFO:Initializing create_model()
2022-09-12 20:38:19,731:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F654CE80A0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6526222B0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:38:19,731:INFO:Checking exceptions
2022-09-12 20:38:19,733:INFO:Importing libraries
2022-09-12 20:38:19,733:INFO:Copying training dataset
2022-09-12 20:38:19,738:INFO:Defining folds
2022-09-12 20:38:19,739:INFO:Declaring metric variables
2022-09-12 20:38:19,745:INFO:Importing untrained model
2022-09-12 20:38:19,752:INFO:AdaBoost Regressor Imported successfully
2022-09-12 20:38:19,768:INFO:Starting cross validation
2022-09-12 20:38:19,769:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:38:19,889:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:19,958:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:19,971:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:19,991:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:20,009:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:20,016:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:20,037:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:20,050:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:20,070:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:20,101:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:20,121:INFO:Calculating mean and std
2022-09-12 20:38:20,123:INFO:Creating metrics dataframe
2022-09-12 20:38:20,128:INFO:Uploading results into container
2022-09-12 20:38:20,129:INFO:Uploading model into container now
2022-09-12 20:38:20,130:INFO:master_model_container: 15
2022-09-12 20:38:20,130:INFO:display_container: 2
2022-09-12 20:38:20,130:INFO:AdaBoostRegressor(random_state=123)
2022-09-12 20:38:20,130:INFO:create_model() successfully completed......................................
2022-09-12 20:38:20,242:INFO:SubProcess create_model() end ==================================
2022-09-12 20:38:20,242:INFO:Creating metrics dataframe
2022-09-12 20:38:20,260:INFO:Initializing Gradient Boosting Regressor
2022-09-12 20:38:20,260:INFO:Total runtime is 0.14170931975046794 minutes
2022-09-12 20:38:20,267:INFO:SubProcess create_model() called ==================================
2022-09-12 20:38:20,268:INFO:Initializing create_model()
2022-09-12 20:38:20,268:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F654CE80A0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6526222B0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:38:20,268:INFO:Checking exceptions
2022-09-12 20:38:20,270:INFO:Importing libraries
2022-09-12 20:38:20,271:INFO:Copying training dataset
2022-09-12 20:38:20,275:INFO:Defining folds
2022-09-12 20:38:20,275:INFO:Declaring metric variables
2022-09-12 20:38:20,280:INFO:Importing untrained model
2022-09-12 20:38:20,286:INFO:Gradient Boosting Regressor Imported successfully
2022-09-12 20:38:20,297:INFO:Starting cross validation
2022-09-12 20:38:20,298:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:38:20,390:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:20,392:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:20,422:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:20,422:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:20,438:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:20,453:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:20,469:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:20,484:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:20,500:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:20,516:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:20,531:INFO:Calculating mean and std
2022-09-12 20:38:20,531:INFO:Creating metrics dataframe
2022-09-12 20:38:20,531:INFO:Uploading results into container
2022-09-12 20:38:20,531:INFO:Uploading model into container now
2022-09-12 20:38:20,531:INFO:master_model_container: 16
2022-09-12 20:38:20,531:INFO:display_container: 2
2022-09-12 20:38:20,531:INFO:GradientBoostingRegressor(random_state=123)
2022-09-12 20:38:20,531:INFO:create_model() successfully completed......................................
2022-09-12 20:38:20,656:INFO:SubProcess create_model() end ==================================
2022-09-12 20:38:20,656:INFO:Creating metrics dataframe
2022-09-12 20:38:20,676:INFO:Initializing Light Gradient Boosting Machine
2022-09-12 20:38:20,676:INFO:Total runtime is 0.14864636262257894 minutes
2022-09-12 20:38:20,682:INFO:SubProcess create_model() called ==================================
2022-09-12 20:38:20,683:INFO:Initializing create_model()
2022-09-12 20:38:20,683:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F654CE80A0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6526222B0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:38:20,684:INFO:Checking exceptions
2022-09-12 20:38:20,687:INFO:Importing libraries
2022-09-12 20:38:20,687:INFO:Copying training dataset
2022-09-12 20:38:20,692:INFO:Defining folds
2022-09-12 20:38:20,692:INFO:Declaring metric variables
2022-09-12 20:38:20,698:INFO:Importing untrained model
2022-09-12 20:38:20,705:INFO:Light Gradient Boosting Machine Imported successfully
2022-09-12 20:38:20,717:INFO:Starting cross validation
2022-09-12 20:38:20,720:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:38:20,799:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:20,808:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:20,809:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:20,841:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:20,856:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:20,888:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:20,903:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:20,919:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:20,935:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:20,950:INFO:Calculating mean and std
2022-09-12 20:38:20,950:INFO:Creating metrics dataframe
2022-09-12 20:38:20,966:INFO:Uploading results into container
2022-09-12 20:38:20,966:INFO:Uploading model into container now
2022-09-12 20:38:20,966:INFO:master_model_container: 17
2022-09-12 20:38:20,966:INFO:display_container: 2
2022-09-12 20:38:20,966:INFO:LGBMRegressor(random_state=123)
2022-09-12 20:38:20,966:INFO:create_model() successfully completed......................................
2022-09-12 20:38:21,089:INFO:SubProcess create_model() end ==================================
2022-09-12 20:38:21,089:INFO:Creating metrics dataframe
2022-09-12 20:38:21,105:INFO:Initializing Dummy Regressor
2022-09-12 20:38:21,105:INFO:Total runtime is 0.15578300555547078 minutes
2022-09-12 20:38:21,120:INFO:SubProcess create_model() called ==================================
2022-09-12 20:38:21,120:INFO:Initializing create_model()
2022-09-12 20:38:21,120:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F654CE80A0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6526222B0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:38:21,120:INFO:Checking exceptions
2022-09-12 20:38:21,126:INFO:Importing libraries
2022-09-12 20:38:21,126:INFO:Copying training dataset
2022-09-12 20:38:21,131:INFO:Defining folds
2022-09-12 20:38:21,131:INFO:Declaring metric variables
2022-09-12 20:38:21,138:INFO:Importing untrained model
2022-09-12 20:38:21,144:INFO:Dummy Regressor Imported successfully
2022-09-12 20:38:21,157:INFO:Starting cross validation
2022-09-12 20:38:21,159:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:38:21,210:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:21,226:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:21,226:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:21,242:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:21,257:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:21,257:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:21,289:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:21,304:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:21,304:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:21,320:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:38:21,335:INFO:Calculating mean and std
2022-09-12 20:38:21,335:INFO:Creating metrics dataframe
2022-09-12 20:38:21,335:INFO:Uploading results into container
2022-09-12 20:38:21,335:INFO:Uploading model into container now
2022-09-12 20:38:21,335:INFO:master_model_container: 18
2022-09-12 20:38:21,335:INFO:display_container: 2
2022-09-12 20:38:21,335:INFO:DummyRegressor()
2022-09-12 20:38:21,335:INFO:create_model() successfully completed......................................
2022-09-12 20:38:21,454:INFO:SubProcess create_model() end ==================================
2022-09-12 20:38:21,454:INFO:Creating metrics dataframe
2022-09-12 20:38:21,491:INFO:Initializing create_model()
2022-09-12 20:38:21,491:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F654CE80A0>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:38:21,491:INFO:Checking exceptions
2022-09-12 20:38:21,511:INFO:Importing libraries
2022-09-12 20:38:21,511:INFO:Copying training dataset
2022-09-12 20:38:21,514:INFO:Defining folds
2022-09-12 20:38:21,514:INFO:Declaring metric variables
2022-09-12 20:38:21,514:INFO:Importing untrained model
2022-09-12 20:38:21,515:INFO:Declaring custom model
2022-09-12 20:38:21,515:INFO:Huber Regressor Imported successfully
2022-09-12 20:38:21,516:INFO:Cross validation set to False
2022-09-12 20:38:21,516:INFO:Fitting Model
2022-09-12 20:38:21,655:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning:

lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html


2022-09-12 20:38:21,655:INFO:HuberRegressor()
2022-09-12 20:38:21,655:INFO:create_model() successfully completed......................................
2022-09-12 20:38:21,848:INFO:master_model_container: 18
2022-09-12 20:38:21,848:INFO:display_container: 2
2022-09-12 20:38:21,849:INFO:HuberRegressor()
2022-09-12 20:38:21,849:INFO:compare_models() successfully completed......................................
2022-09-12 20:39:46,190:INFO:PyCaret RegressionExperiment
2022-09-12 20:39:46,190:INFO:Logging name: reg-default-name
2022-09-12 20:39:46,191:INFO:ML Usecase: MLUsecase.REGRESSION
2022-09-12 20:39:46,191:INFO:version 3.0.0.rc3
2022-09-12 20:39:46,191:INFO:Initializing setup()
2022-09-12 20:39:46,191:INFO:self.USI: 4032
2022-09-12 20:39:46,191:INFO:self.variable_keys: {'_ml_usecase', 'display_container', 'y_train', 'USI', '_all_metrics', 'fold_generator', 'exp_name_log', 'logging_param', 'y_test', 'log_plots_param', 'fold_shuffle_param', 'fold_groups_param', '_all_models_internal', 'transform_target_method_param', 'n_jobs_param', 'exp_id', 'gpu_param', 'seed', 'X_test', 'data', 'X_train', 'X', 'pipeline', 'master_model_container', 'y', '_all_models', 'memory', 'target_param', 'html_param', 'transform_target_param', '_available_plots', 'variable_keys', '_gpu_n_jobs_param', 'idx'}
2022-09-12 20:39:46,191:INFO:Checking environment
2022-09-12 20:39:46,191:INFO:python_version: 3.9.12
2022-09-12 20:39:46,191:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-09-12 20:39:46,192:INFO:machine: AMD64
2022-09-12 20:39:46,192:INFO:platform: Windows-10-10.0.22000-SP0
2022-09-12 20:39:46,192:INFO:Memory: svmem(total=12710350848, available=2347556864, percent=81.5, used=10362793984, free=2347556864)
2022-09-12 20:39:46,192:INFO:Physical Core: 4
2022-09-12 20:39:46,192:INFO:Logical Core: 8
2022-09-12 20:39:46,192:INFO:Checking libraries
2022-09-12 20:39:46,192:INFO:System:
2022-09-12 20:39:46,193:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2022-09-12 20:39:46,193:INFO:executable: C:\Users\saint\anaconda3\python.exe
2022-09-12 20:39:46,193:INFO:   machine: Windows-10-10.0.22000-SP0
2022-09-12 20:39:46,193:INFO:PyCaret required dependencies:
2022-09-12 20:39:46,193:INFO:                 pip: 22.1.2
2022-09-12 20:39:46,193:INFO:          setuptools: 63.4.1
2022-09-12 20:39:46,193:INFO:             pycaret: 3.0.0.rc3
2022-09-12 20:39:46,194:INFO:             IPython: 7.31.1
2022-09-12 20:39:46,194:INFO:          ipywidgets: 7.6.5
2022-09-12 20:39:46,194:INFO:                tqdm: 4.64.0
2022-09-12 20:39:46,194:INFO:               numpy: 1.21.5
2022-09-12 20:39:46,194:INFO:              pandas: 1.4.3
2022-09-12 20:39:46,194:INFO:              jinja2: 2.11.3
2022-09-12 20:39:46,194:INFO:               scipy: 1.7.3
2022-09-12 20:39:46,194:INFO:              joblib: 1.1.0
2022-09-12 20:39:46,194:INFO:             sklearn: 1.1.1
2022-09-12 20:39:46,195:INFO:                pyod: Installed but version unavailable
2022-09-12 20:39:46,195:INFO:            imblearn: 0.9.1
2022-09-12 20:39:46,195:INFO:   category_encoders: 2.5.0
2022-09-12 20:39:46,195:INFO:            lightgbm: 3.3.2
2022-09-12 20:39:46,195:INFO:               numba: 0.55.1
2022-09-12 20:39:46,195:INFO:            requests: 2.28.1
2022-09-12 20:39:46,195:INFO:          matplotlib: 3.5.2
2022-09-12 20:39:46,195:INFO:          scikitplot: 0.3.7
2022-09-12 20:39:46,196:INFO:         yellowbrick: 1.5
2022-09-12 20:39:46,196:INFO:              plotly: 5.9.0
2022-09-12 20:39:46,196:INFO:             kaleido: 0.2.1
2022-09-12 20:39:46,196:INFO:         statsmodels: 0.13.2
2022-09-12 20:39:46,196:INFO:              sktime: 0.11.4
2022-09-12 20:39:46,196:INFO:               tbats: Installed but version unavailable
2022-09-12 20:39:46,196:INFO:            pmdarima: 2.0.1
2022-09-12 20:39:46,196:INFO:              psutil: 5.9.0
2022-09-12 20:39:46,197:INFO:None
2022-09-12 20:39:46,197:INFO:Set up data.
2022-09-12 20:39:46,210:INFO:Set up train/test split.
2022-09-12 20:39:46,220:INFO:Set up folding strategy.
2022-09-12 20:39:46,221:INFO:Assigning column types.
2022-09-12 20:39:46,229:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-09-12 20:39:46,230:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-09-12 20:39:46,244:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:39:46,260:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:39:46,346:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:39:46,421:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:39:46,423:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:39:46,425:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:39:46,425:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-09-12 20:39:46,433:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:39:46,441:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:39:46,644:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:39:46,722:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:39:46,725:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:39:46,727:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:39:46,728:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-09-12 20:39:46,735:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:39:46,742:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:39:46,853:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:39:46,927:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:39:46,927:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:39:46,927:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:39:46,927:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:39:46,943:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:39:47,016:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:39:47,110:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:39:47,110:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:39:47,110:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:39:47,110:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-09-12 20:39:47,141:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:39:47,225:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:39:47,304:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:39:47,304:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:39:47,304:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:39:47,319:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:39:47,413:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:39:47,491:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:39:47,491:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:39:47,491:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:39:47,491:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-09-12 20:39:47,585:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:39:47,647:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:39:47,647:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:39:47,647:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:39:47,725:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:39:47,788:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:39:47,788:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:39:47,788:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:39:47,788:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-09-12 20:39:47,866:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:39:47,913:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:39:47,913:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:39:47,991:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:39:48,069:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:39:48,069:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:39:48,069:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-09-12 20:39:48,215:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:39:48,215:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:39:48,372:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:39:48,372:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:39:48,372:INFO:Preparing preprocessing pipeline...
2022-09-12 20:39:48,372:INFO:Set up simple imputation.
2022-09-12 20:39:48,372:INFO:Set up variance threshold.
2022-09-12 20:39:48,403:INFO:Finished creating preprocessing pipeline.
2022-09-12 20:39:48,403:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\saint\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['BPPD', 'BAPD', 'Caudal_gas_MSCFD',
                                             'Presion_cabeza_psi',
                                             'Temperatura_cabeza_F',
                                             'Salinidad_ppm', 'CO2_gas',
                                             'bicarbonatos_ppm', 'dosis_IC_ppm',
                                             'Fe_ppm'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-09-12 20:39:48,403:INFO:Creating final display dataframe.
2022-09-12 20:39:48,497:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target               mpy
2              Target type        Regression
3               Data shape          (77, 11)
4         Train data shape          (53, 11)
5          Test data shape          (24, 11)
6         Numeric features                10
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU             False
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              4032
2022-09-12 20:39:48,667:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:39:48,667:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:39:48,792:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:39:48,792:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:39:48,807:INFO:setup() successfully completed in 2.62s...............
2022-09-12 20:40:31,457:INFO:PyCaret RegressionExperiment
2022-09-12 20:40:31,457:INFO:Logging name: reg-default-name
2022-09-12 20:40:31,457:INFO:ML Usecase: MLUsecase.REGRESSION
2022-09-12 20:40:31,457:INFO:version 3.0.0.rc3
2022-09-12 20:40:31,457:INFO:Initializing setup()
2022-09-12 20:40:31,457:INFO:self.USI: 5726
2022-09-12 20:40:31,458:INFO:self.variable_keys: {'_ml_usecase', 'display_container', 'y_train', 'USI', '_all_metrics', 'fold_generator', 'exp_name_log', 'logging_param', 'y_test', 'log_plots_param', 'fold_shuffle_param', 'fold_groups_param', '_all_models_internal', 'transform_target_method_param', 'n_jobs_param', 'exp_id', 'gpu_param', 'seed', 'X_test', 'data', 'X_train', 'X', 'pipeline', 'master_model_container', 'y', '_all_models', 'memory', 'target_param', 'html_param', 'transform_target_param', '_available_plots', 'variable_keys', '_gpu_n_jobs_param', 'idx'}
2022-09-12 20:40:31,458:INFO:Checking environment
2022-09-12 20:40:31,458:INFO:python_version: 3.9.12
2022-09-12 20:40:31,458:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-09-12 20:40:31,458:INFO:machine: AMD64
2022-09-12 20:40:31,458:INFO:platform: Windows-10-10.0.22000-SP0
2022-09-12 20:40:31,458:INFO:Memory: svmem(total=12710350848, available=2345086976, percent=81.5, used=10365263872, free=2345086976)
2022-09-12 20:40:31,459:INFO:Physical Core: 4
2022-09-12 20:40:31,459:INFO:Logical Core: 8
2022-09-12 20:40:31,459:INFO:Checking libraries
2022-09-12 20:40:31,459:INFO:System:
2022-09-12 20:40:31,459:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2022-09-12 20:40:31,459:INFO:executable: C:\Users\saint\anaconda3\python.exe
2022-09-12 20:40:31,459:INFO:   machine: Windows-10-10.0.22000-SP0
2022-09-12 20:40:31,460:INFO:PyCaret required dependencies:
2022-09-12 20:40:31,460:INFO:                 pip: 22.1.2
2022-09-12 20:40:31,460:INFO:          setuptools: 63.4.1
2022-09-12 20:40:31,460:INFO:             pycaret: 3.0.0.rc3
2022-09-12 20:40:31,460:INFO:             IPython: 7.31.1
2022-09-12 20:40:31,460:INFO:          ipywidgets: 7.6.5
2022-09-12 20:40:31,460:INFO:                tqdm: 4.64.0
2022-09-12 20:40:31,461:INFO:               numpy: 1.21.5
2022-09-12 20:40:31,461:INFO:              pandas: 1.4.3
2022-09-12 20:40:31,461:INFO:              jinja2: 2.11.3
2022-09-12 20:40:31,461:INFO:               scipy: 1.7.3
2022-09-12 20:40:31,461:INFO:              joblib: 1.1.0
2022-09-12 20:40:31,461:INFO:             sklearn: 1.1.1
2022-09-12 20:40:31,461:INFO:                pyod: Installed but version unavailable
2022-09-12 20:40:31,462:INFO:            imblearn: 0.9.1
2022-09-12 20:40:31,462:INFO:   category_encoders: 2.5.0
2022-09-12 20:40:31,462:INFO:            lightgbm: 3.3.2
2022-09-12 20:40:31,462:INFO:               numba: 0.55.1
2022-09-12 20:40:31,462:INFO:            requests: 2.28.1
2022-09-12 20:40:31,462:INFO:          matplotlib: 3.5.2
2022-09-12 20:40:31,462:INFO:          scikitplot: 0.3.7
2022-09-12 20:40:31,462:INFO:         yellowbrick: 1.5
2022-09-12 20:40:31,463:INFO:              plotly: 5.9.0
2022-09-12 20:40:31,463:INFO:             kaleido: 0.2.1
2022-09-12 20:40:31,463:INFO:         statsmodels: 0.13.2
2022-09-12 20:40:31,463:INFO:              sktime: 0.11.4
2022-09-12 20:40:31,463:INFO:               tbats: Installed but version unavailable
2022-09-12 20:40:31,463:INFO:            pmdarima: 2.0.1
2022-09-12 20:40:31,463:INFO:              psutil: 5.9.0
2022-09-12 20:40:31,464:INFO:None
2022-09-12 20:40:31,464:INFO:Set up data.
2022-09-12 20:40:31,477:INFO:Set up train/test split.
2022-09-12 20:40:31,490:INFO:Set up folding strategy.
2022-09-12 20:40:31,491:INFO:Assigning column types.
2022-09-12 20:40:31,501:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-09-12 20:40:31,501:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-09-12 20:40:31,517:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:40:31,533:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:40:31,682:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:40:31,830:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:40:31,834:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:40:31,842:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:40:31,843:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-09-12 20:40:31,861:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:40:31,924:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:40:32,042:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:40:32,168:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:40:32,170:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:40:32,171:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:40:32,172:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-09-12 20:40:32,180:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:40:32,189:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:40:32,294:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:40:32,394:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:40:32,398:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:40:32,401:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:40:32,413:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:40:32,423:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:40:32,600:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:40:32,692:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:40:32,696:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:40:32,698:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:40:32,699:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-09-12 20:40:32,720:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:40:32,853:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:40:32,936:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:40:32,938:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:40:32,940:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:40:32,954:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:40:33,036:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:40:33,110:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:40:33,112:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:40:33,113:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:40:33,113:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-09-12 20:40:33,205:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:40:33,277:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:40:33,278:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:40:33,280:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:40:33,389:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:40:33,466:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:40:33,469:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:40:33,471:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:40:33,471:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-09-12 20:40:33,602:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:40:33,713:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:40:33,716:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:40:33,873:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:40:33,968:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:40:33,970:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:40:33,970:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-09-12 20:40:34,170:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:40:34,172:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:40:34,440:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:40:34,456:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:40:34,456:INFO:Preparing preprocessing pipeline...
2022-09-12 20:40:34,456:INFO:Set up simple imputation.
2022-09-12 20:40:34,456:INFO:Set up variance threshold.
2022-09-12 20:40:34,488:INFO:Finished creating preprocessing pipeline.
2022-09-12 20:40:34,498:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\saint\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['BPPD', 'BAPD', 'Caudal_gas_MSCFD',
                                             'Presion_cabeza_psi',
                                             'Temperatura_cabeza_F',
                                             'Salinidad_ppm', 'CO2_gas',
                                             'bicarbonatos_ppm', 'dosis_IC_ppm',
                                             'Fe_ppm'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-09-12 20:40:34,499:INFO:Creating final display dataframe.
2022-09-12 20:40:34,644:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target               mpy
2              Target type        Regression
3               Data shape          (77, 11)
4         Train data shape          (53, 11)
5          Test data shape          (24, 11)
6         Numeric features                10
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU             False
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              5726
2022-09-12 20:40:34,942:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:40:34,958:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:40:35,245:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:40:35,247:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:40:35,250:INFO:setup() successfully completed in 3.8s...............
2022-09-12 20:40:43,909:INFO:Initializing compare_models()
2022-09-12 20:40:43,910:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F655B9DE50>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001F655B9DE50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-09-12 20:40:43,910:INFO:Checking exceptions
2022-09-12 20:40:43,914:INFO:Preparing display monitor
2022-09-12 20:40:43,970:INFO:Initializing Linear Regression
2022-09-12 20:40:43,971:INFO:Total runtime is 1.660585403442383e-05 minutes
2022-09-12 20:40:43,979:INFO:SubProcess create_model() called ==================================
2022-09-12 20:40:43,979:INFO:Initializing create_model()
2022-09-12 20:40:43,979:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F655B9DE50>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655B9DDF0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:40:43,980:INFO:Checking exceptions
2022-09-12 20:40:43,983:INFO:Importing libraries
2022-09-12 20:40:43,983:INFO:Copying training dataset
2022-09-12 20:40:43,987:INFO:Defining folds
2022-09-12 20:40:43,988:INFO:Declaring metric variables
2022-09-12 20:40:43,993:INFO:Importing untrained model
2022-09-12 20:40:44,000:INFO:Linear Regression Imported successfully
2022-09-12 20:40:44,011:INFO:Starting cross validation
2022-09-12 20:40:44,016:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:40:44,083:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:44,084:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:44,100:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:44,115:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:44,131:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:44,162:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:44,162:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:44,178:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:44,192:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:44,220:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:44,235:INFO:Calculating mean and std
2022-09-12 20:40:44,235:INFO:Creating metrics dataframe
2022-09-12 20:40:44,251:INFO:Uploading results into container
2022-09-12 20:40:44,251:INFO:Uploading model into container now
2022-09-12 20:40:44,251:INFO:master_model_container: 1
2022-09-12 20:40:44,251:INFO:display_container: 2
2022-09-12 20:40:44,251:INFO:LinearRegression(n_jobs=-1)
2022-09-12 20:40:44,251:INFO:create_model() successfully completed......................................
2022-09-12 20:40:44,460:INFO:SubProcess create_model() end ==================================
2022-09-12 20:40:44,460:INFO:Creating metrics dataframe
2022-09-12 20:40:44,504:INFO:Initializing Lasso Regression
2022-09-12 20:40:44,504:INFO:Total runtime is 0.008906038602193196 minutes
2022-09-12 20:40:44,530:INFO:SubProcess create_model() called ==================================
2022-09-12 20:40:44,531:INFO:Initializing create_model()
2022-09-12 20:40:44,531:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F655B9DE50>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655B9DDF0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:40:44,531:INFO:Checking exceptions
2022-09-12 20:40:44,531:INFO:Importing libraries
2022-09-12 20:40:44,531:INFO:Copying training dataset
2022-09-12 20:40:44,540:INFO:Defining folds
2022-09-12 20:40:44,542:INFO:Declaring metric variables
2022-09-12 20:40:44,569:INFO:Importing untrained model
2022-09-12 20:40:44,585:INFO:Lasso Regression Imported successfully
2022-09-12 20:40:44,603:INFO:Starting cross validation
2022-09-12 20:40:44,622:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:40:44,771:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:44,793:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:44,826:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:44,826:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:44,862:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:44,877:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:44,912:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:44,943:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:44,971:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:44,984:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:45,015:INFO:Calculating mean and std
2022-09-12 20:40:45,015:INFO:Creating metrics dataframe
2022-09-12 20:40:45,033:INFO:Uploading results into container
2022-09-12 20:40:45,034:INFO:Uploading model into container now
2022-09-12 20:40:45,035:INFO:master_model_container: 2
2022-09-12 20:40:45,036:INFO:display_container: 2
2022-09-12 20:40:45,036:INFO:Lasso(random_state=123)
2022-09-12 20:40:45,037:INFO:create_model() successfully completed......................................
2022-09-12 20:40:45,200:INFO:SubProcess create_model() end ==================================
2022-09-12 20:40:45,200:INFO:Creating metrics dataframe
2022-09-12 20:40:45,228:INFO:Initializing Ridge Regression
2022-09-12 20:40:45,228:INFO:Total runtime is 0.02096426486968994 minutes
2022-09-12 20:40:45,228:INFO:SubProcess create_model() called ==================================
2022-09-12 20:40:45,228:INFO:Initializing create_model()
2022-09-12 20:40:45,228:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F655B9DE50>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655B9DDF0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:40:45,228:INFO:Checking exceptions
2022-09-12 20:40:45,228:INFO:Importing libraries
2022-09-12 20:40:45,228:INFO:Copying training dataset
2022-09-12 20:40:45,244:INFO:Defining folds
2022-09-12 20:40:45,244:INFO:Declaring metric variables
2022-09-12 20:40:45,244:INFO:Importing untrained model
2022-09-12 20:40:45,259:INFO:Ridge Regression Imported successfully
2022-09-12 20:40:45,275:INFO:Starting cross validation
2022-09-12 20:40:45,275:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:40:45,353:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:45,369:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:45,384:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:45,400:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:45,431:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:45,447:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:45,482:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:45,502:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:45,509:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:45,559:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:45,584:INFO:Calculating mean and std
2022-09-12 20:40:45,584:INFO:Creating metrics dataframe
2022-09-12 20:40:45,603:INFO:Uploading results into container
2022-09-12 20:40:45,604:INFO:Uploading model into container now
2022-09-12 20:40:45,605:INFO:master_model_container: 3
2022-09-12 20:40:45,605:INFO:display_container: 2
2022-09-12 20:40:45,606:INFO:Ridge(random_state=123)
2022-09-12 20:40:45,607:INFO:create_model() successfully completed......................................
2022-09-12 20:40:45,764:INFO:SubProcess create_model() end ==================================
2022-09-12 20:40:45,764:INFO:Creating metrics dataframe
2022-09-12 20:40:45,780:INFO:Initializing Elastic Net
2022-09-12 20:40:45,780:INFO:Total runtime is 0.030157240231831868 minutes
2022-09-12 20:40:45,780:INFO:SubProcess create_model() called ==================================
2022-09-12 20:40:45,780:INFO:Initializing create_model()
2022-09-12 20:40:45,780:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F655B9DE50>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655B9DDF0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:40:45,780:INFO:Checking exceptions
2022-09-12 20:40:45,795:INFO:Importing libraries
2022-09-12 20:40:45,795:INFO:Copying training dataset
2022-09-12 20:40:45,795:INFO:Defining folds
2022-09-12 20:40:45,795:INFO:Declaring metric variables
2022-09-12 20:40:45,811:INFO:Importing untrained model
2022-09-12 20:40:45,819:INFO:Elastic Net Imported successfully
2022-09-12 20:40:45,838:INFO:Starting cross validation
2022-09-12 20:40:45,840:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:40:45,906:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:45,917:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:45,933:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:45,948:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:45,964:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:45,979:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:45,979:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:46,011:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:46,026:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:46,042:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:46,073:INFO:Calculating mean and std
2022-09-12 20:40:46,073:INFO:Creating metrics dataframe
2022-09-12 20:40:46,073:INFO:Uploading results into container
2022-09-12 20:40:46,073:INFO:Uploading model into container now
2022-09-12 20:40:46,073:INFO:master_model_container: 4
2022-09-12 20:40:46,073:INFO:display_container: 2
2022-09-12 20:40:46,073:INFO:ElasticNet(random_state=123)
2022-09-12 20:40:46,073:INFO:create_model() successfully completed......................................
2022-09-12 20:40:46,231:INFO:SubProcess create_model() end ==================================
2022-09-12 20:40:46,231:INFO:Creating metrics dataframe
2022-09-12 20:40:46,247:INFO:Initializing Least Angle Regression
2022-09-12 20:40:46,247:INFO:Total runtime is 0.03794090747833252 minutes
2022-09-12 20:40:46,247:INFO:SubProcess create_model() called ==================================
2022-09-12 20:40:46,247:INFO:Initializing create_model()
2022-09-12 20:40:46,247:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F655B9DE50>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655B9DDF0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:40:46,247:INFO:Checking exceptions
2022-09-12 20:40:46,247:INFO:Importing libraries
2022-09-12 20:40:46,247:INFO:Copying training dataset
2022-09-12 20:40:46,262:INFO:Defining folds
2022-09-12 20:40:46,262:INFO:Declaring metric variables
2022-09-12 20:40:46,274:INFO:Importing untrained model
2022-09-12 20:40:46,280:INFO:Least Angle Regression Imported successfully
2022-09-12 20:40:46,292:INFO:Starting cross validation
2022-09-12 20:40:46,295:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:40:46,336:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:40:46,353:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:46,375:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:40:46,379:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:46,383:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:40:46,384:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:46,400:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:40:46,400:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:46,416:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:40:46,416:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:46,431:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:40:46,431:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:46,447:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:40:46,447:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:46,462:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:40:46,462:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:46,478:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:40:46,478:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:46,494:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:40:46,494:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:46,525:INFO:Calculating mean and std
2022-09-12 20:40:46,525:INFO:Creating metrics dataframe
2022-09-12 20:40:46,542:INFO:Uploading results into container
2022-09-12 20:40:46,544:INFO:Uploading model into container now
2022-09-12 20:40:46,545:INFO:master_model_container: 5
2022-09-12 20:40:46,546:INFO:display_container: 2
2022-09-12 20:40:46,547:INFO:Lars(random_state=123)
2022-09-12 20:40:46,548:INFO:create_model() successfully completed......................................
2022-09-12 20:40:46,714:INFO:SubProcess create_model() end ==================================
2022-09-12 20:40:46,714:INFO:Creating metrics dataframe
2022-09-12 20:40:46,729:INFO:Initializing Lasso Least Angle Regression
2022-09-12 20:40:46,729:INFO:Total runtime is 0.04598639806111654 minutes
2022-09-12 20:40:46,729:INFO:SubProcess create_model() called ==================================
2022-09-12 20:40:46,729:INFO:Initializing create_model()
2022-09-12 20:40:46,729:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F655B9DE50>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655B9DDF0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:40:46,729:INFO:Checking exceptions
2022-09-12 20:40:46,729:INFO:Importing libraries
2022-09-12 20:40:46,729:INFO:Copying training dataset
2022-09-12 20:40:46,745:INFO:Defining folds
2022-09-12 20:40:46,745:INFO:Declaring metric variables
2022-09-12 20:40:46,761:INFO:Importing untrained model
2022-09-12 20:40:46,771:INFO:Lasso Least Angle Regression Imported successfully
2022-09-12 20:40:46,792:INFO:Starting cross validation
2022-09-12 20:40:46,794:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:40:46,878:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:40:46,879:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:46,884:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:40:46,884:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:46,899:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:40:46,899:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:46,915:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:40:46,915:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:46,931:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:40:46,946:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:46,962:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:40:46,962:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:46,977:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:40:46,977:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:46,993:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:40:46,993:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:47,009:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:40:47,009:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:47,024:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:40:47,024:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:47,040:INFO:Calculating mean and std
2022-09-12 20:40:47,056:INFO:Creating metrics dataframe
2022-09-12 20:40:47,064:INFO:Uploading results into container
2022-09-12 20:40:47,066:INFO:Uploading model into container now
2022-09-12 20:40:47,067:INFO:master_model_container: 6
2022-09-12 20:40:47,067:INFO:display_container: 2
2022-09-12 20:40:47,067:INFO:LassoLars(random_state=123)
2022-09-12 20:40:47,068:INFO:create_model() successfully completed......................................
2022-09-12 20:40:47,218:INFO:SubProcess create_model() end ==================================
2022-09-12 20:40:47,218:INFO:Creating metrics dataframe
2022-09-12 20:40:47,233:INFO:Initializing Orthogonal Matching Pursuit
2022-09-12 20:40:47,233:INFO:Total runtime is 0.054386389255523686 minutes
2022-09-12 20:40:47,242:INFO:SubProcess create_model() called ==================================
2022-09-12 20:40:47,243:INFO:Initializing create_model()
2022-09-12 20:40:47,244:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F655B9DE50>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655B9DDF0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:40:47,244:INFO:Checking exceptions
2022-09-12 20:40:47,248:INFO:Importing libraries
2022-09-12 20:40:47,248:INFO:Copying training dataset
2022-09-12 20:40:47,254:INFO:Defining folds
2022-09-12 20:40:47,254:INFO:Declaring metric variables
2022-09-12 20:40:47,260:INFO:Importing untrained model
2022-09-12 20:40:47,270:INFO:Orthogonal Matching Pursuit Imported successfully
2022-09-12 20:40:47,281:INFO:Starting cross validation
2022-09-12 20:40:47,281:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:40:47,332:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:40:47,332:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:47,348:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:40:47,348:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:47,378:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:40:47,381:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:47,384:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:40:47,384:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:47,399:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:40:47,399:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:47,415:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:40:47,431:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:47,431:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:40:47,446:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:47,462:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:40:47,462:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:47,478:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:40:47,478:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:47,493:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:40:47,493:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:47,509:INFO:Calculating mean and std
2022-09-12 20:40:47,509:INFO:Creating metrics dataframe
2022-09-12 20:40:47,509:INFO:Uploading results into container
2022-09-12 20:40:47,509:INFO:Uploading model into container now
2022-09-12 20:40:47,509:INFO:master_model_container: 7
2022-09-12 20:40:47,509:INFO:display_container: 2
2022-09-12 20:40:47,525:INFO:OrthogonalMatchingPursuit()
2022-09-12 20:40:47,525:INFO:create_model() successfully completed......................................
2022-09-12 20:40:47,664:INFO:SubProcess create_model() end ==================================
2022-09-12 20:40:47,664:INFO:Creating metrics dataframe
2022-09-12 20:40:47,695:INFO:Initializing Bayesian Ridge
2022-09-12 20:40:47,695:INFO:Total runtime is 0.06207997004191081 minutes
2022-09-12 20:40:47,701:INFO:SubProcess create_model() called ==================================
2022-09-12 20:40:47,702:INFO:Initializing create_model()
2022-09-12 20:40:47,702:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F655B9DE50>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655B9DDF0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:40:47,702:INFO:Checking exceptions
2022-09-12 20:40:47,705:INFO:Importing libraries
2022-09-12 20:40:47,705:INFO:Copying training dataset
2022-09-12 20:40:47,710:INFO:Defining folds
2022-09-12 20:40:47,710:INFO:Declaring metric variables
2022-09-12 20:40:47,717:INFO:Importing untrained model
2022-09-12 20:40:47,726:INFO:Bayesian Ridge Imported successfully
2022-09-12 20:40:47,741:INFO:Starting cross validation
2022-09-12 20:40:47,743:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:40:47,812:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:47,831:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:47,844:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:47,858:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:47,874:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:47,892:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:47,906:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:47,920:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:47,933:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:47,951:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:47,967:INFO:Calculating mean and std
2022-09-12 20:40:47,969:INFO:Creating metrics dataframe
2022-09-12 20:40:47,974:INFO:Uploading results into container
2022-09-12 20:40:47,975:INFO:Uploading model into container now
2022-09-12 20:40:47,976:INFO:master_model_container: 8
2022-09-12 20:40:47,976:INFO:display_container: 2
2022-09-12 20:40:47,976:INFO:BayesianRidge()
2022-09-12 20:40:47,976:INFO:create_model() successfully completed......................................
2022-09-12 20:40:48,115:INFO:SubProcess create_model() end ==================================
2022-09-12 20:40:48,115:INFO:Creating metrics dataframe
2022-09-12 20:40:48,130:INFO:Initializing Passive Aggressive Regressor
2022-09-12 20:40:48,130:INFO:Total runtime is 0.069329039255778 minutes
2022-09-12 20:40:48,135:INFO:SubProcess create_model() called ==================================
2022-09-12 20:40:48,136:INFO:Initializing create_model()
2022-09-12 20:40:48,136:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F655B9DE50>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655B9DDF0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:40:48,136:INFO:Checking exceptions
2022-09-12 20:40:48,139:INFO:Importing libraries
2022-09-12 20:40:48,139:INFO:Copying training dataset
2022-09-12 20:40:48,143:INFO:Defining folds
2022-09-12 20:40:48,143:INFO:Declaring metric variables
2022-09-12 20:40:48,149:INFO:Importing untrained model
2022-09-12 20:40:48,155:INFO:Passive Aggressive Regressor Imported successfully
2022-09-12 20:40:48,168:INFO:Starting cross validation
2022-09-12 20:40:48,169:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:40:48,223:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:48,235:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:48,256:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:48,261:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:48,273:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:48,291:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:48,301:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:48,321:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:48,341:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:48,353:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:48,375:INFO:Calculating mean and std
2022-09-12 20:40:48,378:INFO:Creating metrics dataframe
2022-09-12 20:40:48,385:INFO:Uploading results into container
2022-09-12 20:40:48,386:INFO:Uploading model into container now
2022-09-12 20:40:48,387:INFO:master_model_container: 9
2022-09-12 20:40:48,387:INFO:display_container: 2
2022-09-12 20:40:48,388:INFO:PassiveAggressiveRegressor(random_state=123)
2022-09-12 20:40:48,388:INFO:create_model() successfully completed......................................
2022-09-12 20:40:48,531:INFO:SubProcess create_model() end ==================================
2022-09-12 20:40:48,531:INFO:Creating metrics dataframe
2022-09-12 20:40:48,556:INFO:Initializing Huber Regressor
2022-09-12 20:40:48,556:INFO:Total runtime is 0.07643609841664634 minutes
2022-09-12 20:40:48,564:INFO:SubProcess create_model() called ==================================
2022-09-12 20:40:48,565:INFO:Initializing create_model()
2022-09-12 20:40:48,566:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F655B9DE50>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655B9DDF0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:40:48,566:INFO:Checking exceptions
2022-09-12 20:40:48,570:INFO:Importing libraries
2022-09-12 20:40:48,570:INFO:Copying training dataset
2022-09-12 20:40:48,579:INFO:Defining folds
2022-09-12 20:40:48,579:INFO:Declaring metric variables
2022-09-12 20:40:48,587:INFO:Importing untrained model
2022-09-12 20:40:48,597:INFO:Huber Regressor Imported successfully
2022-09-12 20:40:48,611:INFO:Starting cross validation
2022-09-12 20:40:48,613:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:40:48,747:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:40:48,747:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:48,756:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:40:48,756:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:48,794:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:40:48,795:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:48,797:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:40:48,797:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:48,836:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:40:48,836:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:48,841:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:40:48,841:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:48,874:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:40:48,875:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:48,893:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:40:48,894:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:48,899:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:40:48,899:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:48,911:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:40:48,911:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:48,937:INFO:Calculating mean and std
2022-09-12 20:40:48,940:INFO:Creating metrics dataframe
2022-09-12 20:40:48,945:INFO:Uploading results into container
2022-09-12 20:40:48,946:INFO:Uploading model into container now
2022-09-12 20:40:48,946:INFO:master_model_container: 10
2022-09-12 20:40:48,946:INFO:display_container: 2
2022-09-12 20:40:48,947:INFO:HuberRegressor()
2022-09-12 20:40:48,947:INFO:create_model() successfully completed......................................
2022-09-12 20:40:49,095:INFO:SubProcess create_model() end ==================================
2022-09-12 20:40:49,096:INFO:Creating metrics dataframe
2022-09-12 20:40:49,118:INFO:Initializing K Neighbors Regressor
2022-09-12 20:40:49,118:INFO:Total runtime is 0.08580415248870851 minutes
2022-09-12 20:40:49,124:INFO:SubProcess create_model() called ==================================
2022-09-12 20:40:49,125:INFO:Initializing create_model()
2022-09-12 20:40:49,125:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F655B9DE50>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655B9DDF0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:40:49,125:INFO:Checking exceptions
2022-09-12 20:40:49,129:INFO:Importing libraries
2022-09-12 20:40:49,129:INFO:Copying training dataset
2022-09-12 20:40:49,134:INFO:Defining folds
2022-09-12 20:40:49,135:INFO:Declaring metric variables
2022-09-12 20:40:49,140:INFO:Importing untrained model
2022-09-12 20:40:49,148:INFO:K Neighbors Regressor Imported successfully
2022-09-12 20:40:49,163:INFO:Starting cross validation
2022-09-12 20:40:49,165:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:40:49,228:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:49,241:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:49,259:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:49,279:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:49,294:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:49,309:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:49,329:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:49,343:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:49,361:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:49,377:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:49,410:INFO:Calculating mean and std
2022-09-12 20:40:49,412:INFO:Creating metrics dataframe
2022-09-12 20:40:49,421:INFO:Uploading results into container
2022-09-12 20:40:49,422:INFO:Uploading model into container now
2022-09-12 20:40:49,423:INFO:master_model_container: 11
2022-09-12 20:40:49,423:INFO:display_container: 2
2022-09-12 20:40:49,424:INFO:KNeighborsRegressor(n_jobs=-1)
2022-09-12 20:40:49,424:INFO:create_model() successfully completed......................................
2022-09-12 20:40:49,576:INFO:SubProcess create_model() end ==================================
2022-09-12 20:40:49,576:INFO:Creating metrics dataframe
2022-09-12 20:40:49,594:INFO:Initializing Decision Tree Regressor
2022-09-12 20:40:49,594:INFO:Total runtime is 0.09372527599334718 minutes
2022-09-12 20:40:49,599:INFO:SubProcess create_model() called ==================================
2022-09-12 20:40:49,600:INFO:Initializing create_model()
2022-09-12 20:40:49,600:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F655B9DE50>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655B9DDF0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:40:49,600:INFO:Checking exceptions
2022-09-12 20:40:49,603:INFO:Importing libraries
2022-09-12 20:40:49,604:INFO:Copying training dataset
2022-09-12 20:40:49,611:INFO:Defining folds
2022-09-12 20:40:49,611:INFO:Declaring metric variables
2022-09-12 20:40:49,618:INFO:Importing untrained model
2022-09-12 20:40:49,628:INFO:Decision Tree Regressor Imported successfully
2022-09-12 20:40:49,641:INFO:Starting cross validation
2022-09-12 20:40:49,643:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:40:49,705:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:49,719:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:49,732:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:49,746:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:49,758:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:49,778:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:49,798:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:49,814:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:49,827:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:49,847:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:49,868:INFO:Calculating mean and std
2022-09-12 20:40:49,871:INFO:Creating metrics dataframe
2022-09-12 20:40:49,876:INFO:Uploading results into container
2022-09-12 20:40:49,877:INFO:Uploading model into container now
2022-09-12 20:40:49,877:INFO:master_model_container: 12
2022-09-12 20:40:49,877:INFO:display_container: 2
2022-09-12 20:40:49,878:INFO:DecisionTreeRegressor(random_state=123)
2022-09-12 20:40:49,878:INFO:create_model() successfully completed......................................
2022-09-12 20:40:50,028:INFO:SubProcess create_model() end ==================================
2022-09-12 20:40:50,028:INFO:Creating metrics dataframe
2022-09-12 20:40:50,045:INFO:Initializing Random Forest Regressor
2022-09-12 20:40:50,045:INFO:Total runtime is 0.1012545386950175 minutes
2022-09-12 20:40:50,050:INFO:SubProcess create_model() called ==================================
2022-09-12 20:40:50,051:INFO:Initializing create_model()
2022-09-12 20:40:50,051:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F655B9DE50>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655B9DDF0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:40:50,051:INFO:Checking exceptions
2022-09-12 20:40:50,053:INFO:Importing libraries
2022-09-12 20:40:50,054:INFO:Copying training dataset
2022-09-12 20:40:50,058:INFO:Defining folds
2022-09-12 20:40:50,058:INFO:Declaring metric variables
2022-09-12 20:40:50,064:INFO:Importing untrained model
2022-09-12 20:40:50,072:INFO:Random Forest Regressor Imported successfully
2022-09-12 20:40:50,086:INFO:Starting cross validation
2022-09-12 20:40:50,088:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:40:50,482:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:50,490:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:50,492:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:50,543:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:50,575:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:50,609:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:50,682:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:50,689:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:50,930:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:50,932:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:51,027:INFO:Calculating mean and std
2022-09-12 20:40:51,043:INFO:Creating metrics dataframe
2022-09-12 20:40:51,054:INFO:Uploading results into container
2022-09-12 20:40:51,056:INFO:Uploading model into container now
2022-09-12 20:40:51,057:INFO:master_model_container: 13
2022-09-12 20:40:51,057:INFO:display_container: 2
2022-09-12 20:40:51,059:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-09-12 20:40:51,059:INFO:create_model() successfully completed......................................
2022-09-12 20:40:51,205:INFO:SubProcess create_model() end ==================================
2022-09-12 20:40:51,205:INFO:Creating metrics dataframe
2022-09-12 20:40:51,220:INFO:Initializing Extra Trees Regressor
2022-09-12 20:40:51,220:INFO:Total runtime is 0.12083924214045208 minutes
2022-09-12 20:40:51,236:INFO:SubProcess create_model() called ==================================
2022-09-12 20:40:51,236:INFO:Initializing create_model()
2022-09-12 20:40:51,236:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F655B9DE50>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655B9DDF0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:40:51,236:INFO:Checking exceptions
2022-09-12 20:40:51,236:INFO:Importing libraries
2022-09-12 20:40:51,236:INFO:Copying training dataset
2022-09-12 20:40:51,236:INFO:Defining folds
2022-09-12 20:40:51,236:INFO:Declaring metric variables
2022-09-12 20:40:51,252:INFO:Importing untrained model
2022-09-12 20:40:51,260:INFO:Extra Trees Regressor Imported successfully
2022-09-12 20:40:51,268:INFO:Starting cross validation
2022-09-12 20:40:51,268:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:40:51,560:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:51,560:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:51,575:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:51,638:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:51,638:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:51,732:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:51,747:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:51,747:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:51,935:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:51,982:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:52,028:INFO:Calculating mean and std
2022-09-12 20:40:52,028:INFO:Creating metrics dataframe
2022-09-12 20:40:52,028:INFO:Uploading results into container
2022-09-12 20:40:52,028:INFO:Uploading model into container now
2022-09-12 20:40:52,028:INFO:master_model_container: 14
2022-09-12 20:40:52,028:INFO:display_container: 2
2022-09-12 20:40:52,028:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-09-12 20:40:52,028:INFO:create_model() successfully completed......................................
2022-09-12 20:40:52,151:INFO:SubProcess create_model() end ==================================
2022-09-12 20:40:52,151:INFO:Creating metrics dataframe
2022-09-12 20:40:52,182:INFO:Initializing AdaBoost Regressor
2022-09-12 20:40:52,182:INFO:Total runtime is 0.13686780134836835 minutes
2022-09-12 20:40:52,182:INFO:SubProcess create_model() called ==================================
2022-09-12 20:40:52,182:INFO:Initializing create_model()
2022-09-12 20:40:52,182:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F655B9DE50>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655B9DDF0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:40:52,182:INFO:Checking exceptions
2022-09-12 20:40:52,182:INFO:Importing libraries
2022-09-12 20:40:52,182:INFO:Copying training dataset
2022-09-12 20:40:52,182:INFO:Defining folds
2022-09-12 20:40:52,182:INFO:Declaring metric variables
2022-09-12 20:40:52,202:INFO:Importing untrained model
2022-09-12 20:40:52,208:INFO:AdaBoost Regressor Imported successfully
2022-09-12 20:40:52,219:INFO:Starting cross validation
2022-09-12 20:40:52,221:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:40:52,315:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:52,393:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:52,440:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:52,455:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:52,471:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:52,502:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:52,502:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:52,502:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:52,533:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:52,584:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:52,600:INFO:Calculating mean and std
2022-09-12 20:40:52,600:INFO:Creating metrics dataframe
2022-09-12 20:40:52,615:INFO:Uploading results into container
2022-09-12 20:40:52,615:INFO:Uploading model into container now
2022-09-12 20:40:52,615:INFO:master_model_container: 15
2022-09-12 20:40:52,615:INFO:display_container: 2
2022-09-12 20:40:52,615:INFO:AdaBoostRegressor(random_state=123)
2022-09-12 20:40:52,615:INFO:create_model() successfully completed......................................
2022-09-12 20:40:52,761:INFO:SubProcess create_model() end ==================================
2022-09-12 20:40:52,761:INFO:Creating metrics dataframe
2022-09-12 20:40:52,777:INFO:Initializing Gradient Boosting Regressor
2022-09-12 20:40:52,777:INFO:Total runtime is 0.14677456617355347 minutes
2022-09-12 20:40:52,777:INFO:SubProcess create_model() called ==================================
2022-09-12 20:40:52,777:INFO:Initializing create_model()
2022-09-12 20:40:52,777:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F655B9DE50>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655B9DDF0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:40:52,777:INFO:Checking exceptions
2022-09-12 20:40:52,777:INFO:Importing libraries
2022-09-12 20:40:52,777:INFO:Copying training dataset
2022-09-12 20:40:52,792:INFO:Defining folds
2022-09-12 20:40:52,792:INFO:Declaring metric variables
2022-09-12 20:40:52,803:INFO:Importing untrained model
2022-09-12 20:40:52,811:INFO:Gradient Boosting Regressor Imported successfully
2022-09-12 20:40:52,817:INFO:Starting cross validation
2022-09-12 20:40:52,826:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:40:52,933:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:52,964:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:52,964:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:52,995:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:53,011:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:53,026:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:53,042:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:53,058:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:53,089:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:53,089:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:53,105:INFO:Calculating mean and std
2022-09-12 20:40:53,105:INFO:Creating metrics dataframe
2022-09-12 20:40:53,105:INFO:Uploading results into container
2022-09-12 20:40:53,105:INFO:Uploading model into container now
2022-09-12 20:40:53,105:INFO:master_model_container: 16
2022-09-12 20:40:53,105:INFO:display_container: 2
2022-09-12 20:40:53,105:INFO:GradientBoostingRegressor(random_state=123)
2022-09-12 20:40:53,105:INFO:create_model() successfully completed......................................
2022-09-12 20:40:53,233:INFO:SubProcess create_model() end ==================================
2022-09-12 20:40:53,233:INFO:Creating metrics dataframe
2022-09-12 20:40:53,264:INFO:Initializing Light Gradient Boosting Machine
2022-09-12 20:40:53,264:INFO:Total runtime is 0.15489868720372518 minutes
2022-09-12 20:40:53,264:INFO:SubProcess create_model() called ==================================
2022-09-12 20:40:53,264:INFO:Initializing create_model()
2022-09-12 20:40:53,264:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F655B9DE50>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655B9DDF0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:40:53,264:INFO:Checking exceptions
2022-09-12 20:40:53,264:INFO:Importing libraries
2022-09-12 20:40:53,264:INFO:Copying training dataset
2022-09-12 20:40:53,264:INFO:Defining folds
2022-09-12 20:40:53,280:INFO:Declaring metric variables
2022-09-12 20:40:53,280:INFO:Importing untrained model
2022-09-12 20:40:53,292:INFO:Light Gradient Boosting Machine Imported successfully
2022-09-12 20:40:53,304:INFO:Starting cross validation
2022-09-12 20:40:53,305:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:40:53,384:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:53,384:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:53,415:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:53,415:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:53,431:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:53,446:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:53,477:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:53,493:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:53,509:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:53,524:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:53,540:INFO:Calculating mean and std
2022-09-12 20:40:53,540:INFO:Creating metrics dataframe
2022-09-12 20:40:53,540:INFO:Uploading results into container
2022-09-12 20:40:53,540:INFO:Uploading model into container now
2022-09-12 20:40:53,540:INFO:master_model_container: 17
2022-09-12 20:40:53,540:INFO:display_container: 2
2022-09-12 20:40:53,540:INFO:LGBMRegressor(random_state=123)
2022-09-12 20:40:53,540:INFO:create_model() successfully completed......................................
2022-09-12 20:40:53,697:INFO:SubProcess create_model() end ==================================
2022-09-12 20:40:53,697:INFO:Creating metrics dataframe
2022-09-12 20:40:53,713:INFO:Initializing Dummy Regressor
2022-09-12 20:40:53,713:INFO:Total runtime is 0.16238126754760743 minutes
2022-09-12 20:40:53,729:INFO:SubProcess create_model() called ==================================
2022-09-12 20:40:53,729:INFO:Initializing create_model()
2022-09-12 20:40:53,729:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F655B9DE50>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655B9DDF0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:40:53,729:INFO:Checking exceptions
2022-09-12 20:40:53,729:INFO:Importing libraries
2022-09-12 20:40:53,729:INFO:Copying training dataset
2022-09-12 20:40:53,729:INFO:Defining folds
2022-09-12 20:40:53,729:INFO:Declaring metric variables
2022-09-12 20:40:53,750:INFO:Importing untrained model
2022-09-12 20:40:53,759:INFO:Dummy Regressor Imported successfully
2022-09-12 20:40:53,767:INFO:Starting cross validation
2022-09-12 20:40:53,767:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:40:53,817:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:53,849:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:53,866:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:53,890:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:53,903:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:53,925:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:53,932:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:53,948:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:53,960:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:53,967:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:40:53,981:INFO:Calculating mean and std
2022-09-12 20:40:53,984:INFO:Creating metrics dataframe
2022-09-12 20:40:53,989:INFO:Uploading results into container
2022-09-12 20:40:53,989:INFO:Uploading model into container now
2022-09-12 20:40:53,989:INFO:master_model_container: 18
2022-09-12 20:40:53,989:INFO:display_container: 2
2022-09-12 20:40:53,990:INFO:DummyRegressor()
2022-09-12 20:40:53,990:INFO:create_model() successfully completed......................................
2022-09-12 20:40:54,118:INFO:SubProcess create_model() end ==================================
2022-09-12 20:40:54,118:INFO:Creating metrics dataframe
2022-09-12 20:40:54,158:INFO:Initializing create_model()
2022-09-12 20:40:54,158:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F655B9DE50>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:40:54,159:INFO:Checking exceptions
2022-09-12 20:40:54,164:INFO:Importing libraries
2022-09-12 20:40:54,164:INFO:Copying training dataset
2022-09-12 20:40:54,167:INFO:Defining folds
2022-09-12 20:40:54,168:INFO:Declaring metric variables
2022-09-12 20:40:54,168:INFO:Importing untrained model
2022-09-12 20:40:54,168:INFO:Declaring custom model
2022-09-12 20:40:54,169:INFO:Huber Regressor Imported successfully
2022-09-12 20:40:54,169:INFO:Cross validation set to False
2022-09-12 20:40:54,169:INFO:Fitting Model
2022-09-12 20:40:54,241:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning:

lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html


2022-09-12 20:40:54,241:INFO:HuberRegressor()
2022-09-12 20:40:54,241:INFO:create_model() successfully completed......................................
2022-09-12 20:40:54,432:INFO:master_model_container: 18
2022-09-12 20:40:54,432:INFO:display_container: 2
2022-09-12 20:40:54,433:INFO:HuberRegressor()
2022-09-12 20:40:54,433:INFO:compare_models() successfully completed......................................
2022-09-12 20:41:09,350:INFO:PyCaret RegressionExperiment
2022-09-12 20:41:09,350:INFO:Logging name: reg-default-name
2022-09-12 20:41:09,350:INFO:ML Usecase: MLUsecase.REGRESSION
2022-09-12 20:41:09,350:INFO:version 3.0.0.rc3
2022-09-12 20:41:09,350:INFO:Initializing setup()
2022-09-12 20:41:09,350:INFO:self.USI: 2a58
2022-09-12 20:41:09,350:INFO:self.variable_keys: {'_ml_usecase', 'display_container', 'y_train', 'USI', '_all_metrics', 'fold_generator', 'exp_name_log', 'logging_param', 'y_test', 'log_plots_param', 'fold_shuffle_param', 'fold_groups_param', '_all_models_internal', 'transform_target_method_param', 'n_jobs_param', 'exp_id', 'gpu_param', 'seed', 'X_test', 'data', 'X_train', 'X', 'pipeline', 'master_model_container', 'y', '_all_models', 'memory', 'target_param', 'html_param', 'transform_target_param', '_available_plots', 'variable_keys', '_gpu_n_jobs_param', 'idx'}
2022-09-12 20:41:09,350:INFO:Checking environment
2022-09-12 20:41:09,350:INFO:python_version: 3.9.12
2022-09-12 20:41:09,350:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-09-12 20:41:09,350:INFO:machine: AMD64
2022-09-12 20:41:09,350:INFO:platform: Windows-10-10.0.22000-SP0
2022-09-12 20:41:09,350:INFO:Memory: svmem(total=12710350848, available=2292051968, percent=82.0, used=10418298880, free=2292051968)
2022-09-12 20:41:09,350:INFO:Physical Core: 4
2022-09-12 20:41:09,350:INFO:Logical Core: 8
2022-09-12 20:41:09,350:INFO:Checking libraries
2022-09-12 20:41:09,350:INFO:System:
2022-09-12 20:41:09,350:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2022-09-12 20:41:09,350:INFO:executable: C:\Users\saint\anaconda3\python.exe
2022-09-12 20:41:09,350:INFO:   machine: Windows-10-10.0.22000-SP0
2022-09-12 20:41:09,350:INFO:PyCaret required dependencies:
2022-09-12 20:41:09,350:INFO:                 pip: 22.1.2
2022-09-12 20:41:09,350:INFO:          setuptools: 63.4.1
2022-09-12 20:41:09,350:INFO:             pycaret: 3.0.0.rc3
2022-09-12 20:41:09,350:INFO:             IPython: 7.31.1
2022-09-12 20:41:09,350:INFO:          ipywidgets: 7.6.5
2022-09-12 20:41:09,350:INFO:                tqdm: 4.64.0
2022-09-12 20:41:09,350:INFO:               numpy: 1.21.5
2022-09-12 20:41:09,350:INFO:              pandas: 1.4.3
2022-09-12 20:41:09,350:INFO:              jinja2: 2.11.3
2022-09-12 20:41:09,350:INFO:               scipy: 1.7.3
2022-09-12 20:41:09,350:INFO:              joblib: 1.1.0
2022-09-12 20:41:09,350:INFO:             sklearn: 1.1.1
2022-09-12 20:41:09,350:INFO:                pyod: Installed but version unavailable
2022-09-12 20:41:09,350:INFO:            imblearn: 0.9.1
2022-09-12 20:41:09,350:INFO:   category_encoders: 2.5.0
2022-09-12 20:41:09,350:INFO:            lightgbm: 3.3.2
2022-09-12 20:41:09,350:INFO:               numba: 0.55.1
2022-09-12 20:41:09,350:INFO:            requests: 2.28.1
2022-09-12 20:41:09,350:INFO:          matplotlib: 3.5.2
2022-09-12 20:41:09,350:INFO:          scikitplot: 0.3.7
2022-09-12 20:41:09,350:INFO:         yellowbrick: 1.5
2022-09-12 20:41:09,350:INFO:              plotly: 5.9.0
2022-09-12 20:41:09,350:INFO:             kaleido: 0.2.1
2022-09-12 20:41:09,350:INFO:         statsmodels: 0.13.2
2022-09-12 20:41:09,350:INFO:              sktime: 0.11.4
2022-09-12 20:41:09,350:INFO:               tbats: Installed but version unavailable
2022-09-12 20:41:09,350:INFO:            pmdarima: 2.0.1
2022-09-12 20:41:09,350:INFO:              psutil: 5.9.0
2022-09-12 20:41:09,350:INFO:None
2022-09-12 20:41:09,350:INFO:Set up data.
2022-09-12 20:41:09,365:INFO:Set up train/test split.
2022-09-12 20:41:09,365:INFO:Set up folding strategy.
2022-09-12 20:41:09,365:INFO:Assigning column types.
2022-09-12 20:41:09,365:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-09-12 20:41:09,365:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-09-12 20:41:09,381:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:41:09,398:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:41:09,517:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:41:09,609:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:41:09,609:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:09,625:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:09,625:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-09-12 20:41:09,640:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:41:09,640:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:41:10,021:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:41:10,137:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:41:10,137:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:10,137:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:10,137:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-09-12 20:41:10,153:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:41:10,153:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:41:10,246:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:41:10,309:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:41:10,309:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:10,309:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:10,309:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:41:10,325:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:41:10,403:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:41:10,465:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:41:10,465:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:10,465:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:10,465:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-09-12 20:41:10,481:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:41:10,551:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:41:10,614:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:41:10,614:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:10,614:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:10,614:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:41:10,708:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:41:10,786:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:41:10,786:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:10,786:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:10,786:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-09-12 20:41:10,880:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:41:10,942:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:41:10,942:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:10,942:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:11,036:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:41:11,083:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:41:11,083:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:11,083:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:11,083:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-09-12 20:41:11,192:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:41:11,245:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:11,245:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:11,354:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:41:11,401:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:11,417:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:11,417:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-09-12 20:41:11,542:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:11,557:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:11,698:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:11,698:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:11,698:INFO:Preparing preprocessing pipeline...
2022-09-12 20:41:11,698:INFO:Set up simple imputation.
2022-09-12 20:41:11,698:INFO:Set up variance threshold.
2022-09-12 20:41:11,698:INFO:Set up feature normalization.
2022-09-12 20:41:11,745:INFO:Finished creating preprocessing pipeline.
2022-09-12 20:41:11,760:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\saint\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['BPPD', 'BAPD', 'Caudal_gas_MSCFD',
                                             'Presion_cabeza_psi',
                                             'Temperatura_cabeza_F',
                                             'Salinidad_ppm', 'CO2_gas',
                                             'bicarbonatos_ppm', 'dosis_IC_ppm',
                                             'Fe_ppm'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2022-09-12 20:41:11,760:INFO:Creating final display dataframe.
2022-09-12 20:41:11,901:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target               mpy
2              Target type        Regression
3               Data shape          (77, 11)
4         Train data shape          (53, 11)
5          Test data shape          (24, 11)
6         Numeric features                10
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12               Normalize              True
13        Normalize method            zscore
14          Fold Generator             KFold
15             Fold Number                10
16                CPU Jobs                -1
17                 Use GPU             False
18          Log Experiment             False
19         Experiment Name  reg-default-name
20                     USI              2a58
2022-09-12 20:41:12,093:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:12,093:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:12,249:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:12,249:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:12,265:INFO:setup() successfully completed in 2.91s...............
2022-09-12 20:41:13,226:INFO:Initializing compare_models()
2022-09-12 20:41:13,226:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652B47EB0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001F652B47EB0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-09-12 20:41:13,226:INFO:Checking exceptions
2022-09-12 20:41:13,234:INFO:Preparing display monitor
2022-09-12 20:41:13,301:INFO:Initializing Linear Regression
2022-09-12 20:41:13,301:INFO:Total runtime is 0.0 minutes
2022-09-12 20:41:13,307:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:13,307:INFO:Initializing create_model()
2022-09-12 20:41:13,308:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652B47EB0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655AF5B50>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:13,308:INFO:Checking exceptions
2022-09-12 20:41:13,311:INFO:Importing libraries
2022-09-12 20:41:13,311:INFO:Copying training dataset
2022-09-12 20:41:13,316:INFO:Defining folds
2022-09-12 20:41:13,316:INFO:Declaring metric variables
2022-09-12 20:41:13,321:INFO:Importing untrained model
2022-09-12 20:41:13,327:INFO:Linear Regression Imported successfully
2022-09-12 20:41:13,340:INFO:Starting cross validation
2022-09-12 20:41:13,346:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:13,415:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:13,447:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:13,462:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:13,478:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:13,496:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:13,511:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:13,527:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:13,543:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:13,558:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:13,590:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:13,647:INFO:Calculating mean and std
2022-09-12 20:41:13,647:INFO:Creating metrics dataframe
2022-09-12 20:41:13,657:INFO:Uploading results into container
2022-09-12 20:41:13,657:INFO:Uploading model into container now
2022-09-12 20:41:13,657:INFO:master_model_container: 1
2022-09-12 20:41:13,657:INFO:display_container: 2
2022-09-12 20:41:13,657:INFO:LinearRegression(n_jobs=-1)
2022-09-12 20:41:13,657:INFO:create_model() successfully completed......................................
2022-09-12 20:41:13,846:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:13,846:INFO:Creating metrics dataframe
2022-09-12 20:41:13,877:INFO:Initializing Lasso Regression
2022-09-12 20:41:13,877:INFO:Total runtime is 0.009598656495412191 minutes
2022-09-12 20:41:13,893:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:13,893:INFO:Initializing create_model()
2022-09-12 20:41:13,893:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652B47EB0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655AF5B50>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:13,893:INFO:Checking exceptions
2022-09-12 20:41:13,893:INFO:Importing libraries
2022-09-12 20:41:13,893:INFO:Copying training dataset
2022-09-12 20:41:13,893:INFO:Defining folds
2022-09-12 20:41:13,893:INFO:Declaring metric variables
2022-09-12 20:41:13,908:INFO:Importing untrained model
2022-09-12 20:41:13,924:INFO:Lasso Regression Imported successfully
2022-09-12 20:41:13,933:INFO:Starting cross validation
2022-09-12 20:41:13,948:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:14,059:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:14,075:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:14,090:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:14,127:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:14,127:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:14,158:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:14,189:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:14,205:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:14,241:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:14,242:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:14,289:INFO:Calculating mean and std
2022-09-12 20:41:14,289:INFO:Creating metrics dataframe
2022-09-12 20:41:14,289:INFO:Uploading results into container
2022-09-12 20:41:14,305:INFO:Uploading model into container now
2022-09-12 20:41:14,305:INFO:master_model_container: 2
2022-09-12 20:41:14,305:INFO:display_container: 2
2022-09-12 20:41:14,305:INFO:Lasso(random_state=123)
2022-09-12 20:41:14,305:INFO:create_model() successfully completed......................................
2022-09-12 20:41:14,476:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:14,476:INFO:Creating metrics dataframe
2022-09-12 20:41:14,492:INFO:Initializing Ridge Regression
2022-09-12 20:41:14,492:INFO:Total runtime is 0.01984923283259074 minutes
2022-09-12 20:41:14,508:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:14,508:INFO:Initializing create_model()
2022-09-12 20:41:14,508:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652B47EB0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655AF5B50>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:14,508:INFO:Checking exceptions
2022-09-12 20:41:14,508:INFO:Importing libraries
2022-09-12 20:41:14,508:INFO:Copying training dataset
2022-09-12 20:41:14,523:INFO:Defining folds
2022-09-12 20:41:14,523:INFO:Declaring metric variables
2022-09-12 20:41:14,523:INFO:Importing untrained model
2022-09-12 20:41:14,539:INFO:Ridge Regression Imported successfully
2022-09-12 20:41:14,554:INFO:Starting cross validation
2022-09-12 20:41:14,554:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:14,664:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:14,679:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:14,695:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:14,711:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:14,742:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:14,758:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:14,790:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:14,796:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:14,828:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:14,850:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:14,881:INFO:Calculating mean and std
2022-09-12 20:41:14,898:INFO:Creating metrics dataframe
2022-09-12 20:41:14,907:INFO:Uploading results into container
2022-09-12 20:41:14,908:INFO:Uploading model into container now
2022-09-12 20:41:14,910:INFO:master_model_container: 3
2022-09-12 20:41:14,910:INFO:display_container: 2
2022-09-12 20:41:14,911:INFO:Ridge(random_state=123)
2022-09-12 20:41:14,911:INFO:create_model() successfully completed......................................
2022-09-12 20:41:15,064:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:15,064:INFO:Creating metrics dataframe
2022-09-12 20:41:15,079:INFO:Initializing Elastic Net
2022-09-12 20:41:15,079:INFO:Total runtime is 0.029639323552449547 minutes
2022-09-12 20:41:15,079:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:15,095:INFO:Initializing create_model()
2022-09-12 20:41:15,095:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652B47EB0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655AF5B50>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:15,095:INFO:Checking exceptions
2022-09-12 20:41:15,095:INFO:Importing libraries
2022-09-12 20:41:15,095:INFO:Copying training dataset
2022-09-12 20:41:15,095:INFO:Defining folds
2022-09-12 20:41:15,095:INFO:Declaring metric variables
2022-09-12 20:41:15,119:INFO:Importing untrained model
2022-09-12 20:41:15,128:INFO:Elastic Net Imported successfully
2022-09-12 20:41:15,144:INFO:Starting cross validation
2022-09-12 20:41:15,144:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:15,244:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:15,266:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:15,281:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:15,312:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:15,328:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:15,359:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:15,359:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:15,391:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:15,406:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:15,422:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:15,469:INFO:Calculating mean and std
2022-09-12 20:41:15,469:INFO:Creating metrics dataframe
2022-09-12 20:41:15,488:INFO:Uploading results into container
2022-09-12 20:41:15,489:INFO:Uploading model into container now
2022-09-12 20:41:15,490:INFO:master_model_container: 4
2022-09-12 20:41:15,491:INFO:display_container: 2
2022-09-12 20:41:15,492:INFO:ElasticNet(random_state=123)
2022-09-12 20:41:15,492:INFO:create_model() successfully completed......................................
2022-09-12 20:41:15,662:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:15,662:INFO:Creating metrics dataframe
2022-09-12 20:41:15,677:INFO:Initializing Least Angle Regression
2022-09-12 20:41:15,677:INFO:Total runtime is 0.03960352738698324 minutes
2022-09-12 20:41:15,677:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:15,677:INFO:Initializing create_model()
2022-09-12 20:41:15,677:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652B47EB0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655AF5B50>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:15,677:INFO:Checking exceptions
2022-09-12 20:41:15,677:INFO:Importing libraries
2022-09-12 20:41:15,677:INFO:Copying training dataset
2022-09-12 20:41:15,693:INFO:Defining folds
2022-09-12 20:41:15,693:INFO:Declaring metric variables
2022-09-12 20:41:15,706:INFO:Importing untrained model
2022-09-12 20:41:15,715:INFO:Least Angle Regression Imported successfully
2022-09-12 20:41:15,731:INFO:Starting cross validation
2022-09-12 20:41:15,731:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:15,817:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:15,817:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:15,832:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:15,848:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:15,848:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:15,864:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:15,879:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:15,879:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:15,895:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:15,895:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:15,910:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:15,910:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:15,926:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:15,926:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:15,942:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:15,957:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:15,973:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:15,973:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:15,973:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:15,973:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:16,004:INFO:Calculating mean and std
2022-09-12 20:41:16,004:INFO:Creating metrics dataframe
2022-09-12 20:41:16,027:INFO:Uploading results into container
2022-09-12 20:41:16,028:INFO:Uploading model into container now
2022-09-12 20:41:16,029:INFO:master_model_container: 5
2022-09-12 20:41:16,029:INFO:display_container: 2
2022-09-12 20:41:16,029:INFO:Lars(random_state=123)
2022-09-12 20:41:16,030:INFO:create_model() successfully completed......................................
2022-09-12 20:41:16,179:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:16,179:INFO:Creating metrics dataframe
2022-09-12 20:41:16,203:INFO:Initializing Lasso Least Angle Regression
2022-09-12 20:41:16,203:INFO:Total runtime is 0.04836365779240926 minutes
2022-09-12 20:41:16,203:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:16,203:INFO:Initializing create_model()
2022-09-12 20:41:16,203:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652B47EB0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655AF5B50>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:16,203:INFO:Checking exceptions
2022-09-12 20:41:16,203:INFO:Importing libraries
2022-09-12 20:41:16,203:INFO:Copying training dataset
2022-09-12 20:41:16,218:INFO:Defining folds
2022-09-12 20:41:16,218:INFO:Declaring metric variables
2022-09-12 20:41:16,235:INFO:Importing untrained model
2022-09-12 20:41:16,245:INFO:Lasso Least Angle Regression Imported successfully
2022-09-12 20:41:16,264:INFO:Starting cross validation
2022-09-12 20:41:16,267:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:16,366:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:41:16,366:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:16,382:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:41:16,382:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:16,398:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:41:16,398:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:16,429:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:41:16,429:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:16,445:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:41:16,445:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:16,476:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:41:16,476:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:16,491:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:41:16,491:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:16,507:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:41:16,523:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:16,538:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:41:16,538:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:16,570:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:41:16,570:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:16,601:INFO:Calculating mean and std
2022-09-12 20:41:16,601:INFO:Creating metrics dataframe
2022-09-12 20:41:16,616:INFO:Uploading results into container
2022-09-12 20:41:16,623:INFO:Uploading model into container now
2022-09-12 20:41:16,625:INFO:master_model_container: 6
2022-09-12 20:41:16,625:INFO:display_container: 2
2022-09-12 20:41:16,626:INFO:LassoLars(random_state=123)
2022-09-12 20:41:16,627:INFO:create_model() successfully completed......................................
2022-09-12 20:41:16,779:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:16,779:INFO:Creating metrics dataframe
2022-09-12 20:41:16,811:INFO:Initializing Orthogonal Matching Pursuit
2022-09-12 20:41:16,811:INFO:Total runtime is 0.05849212805430094 minutes
2022-09-12 20:41:16,811:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:16,811:INFO:Initializing create_model()
2022-09-12 20:41:16,811:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652B47EB0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655AF5B50>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:16,811:INFO:Checking exceptions
2022-09-12 20:41:16,826:INFO:Importing libraries
2022-09-12 20:41:16,826:INFO:Copying training dataset
2022-09-12 20:41:16,826:INFO:Defining folds
2022-09-12 20:41:16,826:INFO:Declaring metric variables
2022-09-12 20:41:16,846:INFO:Importing untrained model
2022-09-12 20:41:16,855:INFO:Orthogonal Matching Pursuit Imported successfully
2022-09-12 20:41:16,871:INFO:Starting cross validation
2022-09-12 20:41:16,874:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:16,947:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:16,951:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:16,951:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:16,966:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:16,982:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:16,982:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:16,997:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:16,997:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:17,013:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:17,013:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:17,029:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:17,044:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:17,060:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:17,060:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:17,075:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:17,075:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:17,091:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:17,107:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:17,107:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:17,122:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:17,138:INFO:Calculating mean and std
2022-09-12 20:41:17,138:INFO:Creating metrics dataframe
2022-09-12 20:41:17,159:INFO:Uploading results into container
2022-09-12 20:41:17,161:INFO:Uploading model into container now
2022-09-12 20:41:17,162:INFO:master_model_container: 7
2022-09-12 20:41:17,162:INFO:display_container: 2
2022-09-12 20:41:17,163:INFO:OrthogonalMatchingPursuit()
2022-09-12 20:41:17,163:INFO:create_model() successfully completed......................................
2022-09-12 20:41:17,313:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:17,313:INFO:Creating metrics dataframe
2022-09-12 20:41:17,328:INFO:Initializing Bayesian Ridge
2022-09-12 20:41:17,328:INFO:Total runtime is 0.06711906989415486 minutes
2022-09-12 20:41:17,344:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:17,344:INFO:Initializing create_model()
2022-09-12 20:41:17,344:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652B47EB0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655AF5B50>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:17,344:INFO:Checking exceptions
2022-09-12 20:41:17,344:INFO:Importing libraries
2022-09-12 20:41:17,344:INFO:Copying training dataset
2022-09-12 20:41:17,359:INFO:Defining folds
2022-09-12 20:41:17,359:INFO:Declaring metric variables
2022-09-12 20:41:17,376:INFO:Importing untrained model
2022-09-12 20:41:17,388:INFO:Bayesian Ridge Imported successfully
2022-09-12 20:41:17,410:INFO:Starting cross validation
2022-09-12 20:41:17,413:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:17,527:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:17,544:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:17,565:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:17,584:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:17,608:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:17,630:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:17,661:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:17,687:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:17,716:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:17,747:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:17,782:INFO:Calculating mean and std
2022-09-12 20:41:17,786:INFO:Creating metrics dataframe
2022-09-12 20:41:17,796:INFO:Uploading results into container
2022-09-12 20:41:17,797:INFO:Uploading model into container now
2022-09-12 20:41:17,799:INFO:master_model_container: 8
2022-09-12 20:41:17,799:INFO:display_container: 2
2022-09-12 20:41:17,800:INFO:BayesianRidge()
2022-09-12 20:41:17,801:INFO:create_model() successfully completed......................................
2022-09-12 20:41:17,955:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:17,955:INFO:Creating metrics dataframe
2022-09-12 20:41:17,976:INFO:Initializing Passive Aggressive Regressor
2022-09-12 20:41:17,977:INFO:Total runtime is 0.07792694965998331 minutes
2022-09-12 20:41:17,983:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:17,983:INFO:Initializing create_model()
2022-09-12 20:41:17,984:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652B47EB0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655AF5B50>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:17,984:INFO:Checking exceptions
2022-09-12 20:41:17,988:INFO:Importing libraries
2022-09-12 20:41:17,988:INFO:Copying training dataset
2022-09-12 20:41:17,993:INFO:Defining folds
2022-09-12 20:41:17,994:INFO:Declaring metric variables
2022-09-12 20:41:18,000:INFO:Importing untrained model
2022-09-12 20:41:18,009:INFO:Passive Aggressive Regressor Imported successfully
2022-09-12 20:41:18,024:INFO:Starting cross validation
2022-09-12 20:41:18,026:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:18,094:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:18,118:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:18,131:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:18,155:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:18,178:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:18,198:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:18,218:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:18,240:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:18,261:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:18,281:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:18,316:INFO:Calculating mean and std
2022-09-12 20:41:18,319:INFO:Creating metrics dataframe
2022-09-12 20:41:18,324:INFO:Uploading results into container
2022-09-12 20:41:18,326:INFO:Uploading model into container now
2022-09-12 20:41:18,328:INFO:master_model_container: 9
2022-09-12 20:41:18,328:INFO:display_container: 2
2022-09-12 20:41:18,329:INFO:PassiveAggressiveRegressor(random_state=123)
2022-09-12 20:41:18,329:INFO:create_model() successfully completed......................................
2022-09-12 20:41:18,494:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:18,495:INFO:Creating metrics dataframe
2022-09-12 20:41:18,523:INFO:Initializing Huber Regressor
2022-09-12 20:41:18,524:INFO:Total runtime is 0.08704690933227538 minutes
2022-09-12 20:41:18,531:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:18,532:INFO:Initializing create_model()
2022-09-12 20:41:18,532:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652B47EB0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655AF5B50>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:18,533:INFO:Checking exceptions
2022-09-12 20:41:18,536:INFO:Importing libraries
2022-09-12 20:41:18,537:INFO:Copying training dataset
2022-09-12 20:41:18,545:INFO:Defining folds
2022-09-12 20:41:18,546:INFO:Declaring metric variables
2022-09-12 20:41:18,556:INFO:Importing untrained model
2022-09-12 20:41:18,565:INFO:Huber Regressor Imported successfully
2022-09-12 20:41:18,582:INFO:Starting cross validation
2022-09-12 20:41:18,584:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:18,698:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:18,720:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:18,740:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:18,762:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:18,778:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:18,800:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:18,826:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:18,843:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:18,860:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:18,883:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:18,918:INFO:Calculating mean and std
2022-09-12 20:41:18,923:INFO:Creating metrics dataframe
2022-09-12 20:41:18,933:INFO:Uploading results into container
2022-09-12 20:41:18,935:INFO:Uploading model into container now
2022-09-12 20:41:18,937:INFO:master_model_container: 10
2022-09-12 20:41:18,938:INFO:display_container: 2
2022-09-12 20:41:18,938:INFO:HuberRegressor()
2022-09-12 20:41:18,939:INFO:create_model() successfully completed......................................
2022-09-12 20:41:19,100:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:19,101:INFO:Creating metrics dataframe
2022-09-12 20:41:19,124:INFO:Initializing K Neighbors Regressor
2022-09-12 20:41:19,124:INFO:Total runtime is 0.09705485105514525 minutes
2022-09-12 20:41:19,130:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:19,130:INFO:Initializing create_model()
2022-09-12 20:41:19,130:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652B47EB0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655AF5B50>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:19,131:INFO:Checking exceptions
2022-09-12 20:41:19,133:INFO:Importing libraries
2022-09-12 20:41:19,133:INFO:Copying training dataset
2022-09-12 20:41:19,139:INFO:Defining folds
2022-09-12 20:41:19,139:INFO:Declaring metric variables
2022-09-12 20:41:19,147:INFO:Importing untrained model
2022-09-12 20:41:19,159:INFO:K Neighbors Regressor Imported successfully
2022-09-12 20:41:19,175:INFO:Starting cross validation
2022-09-12 20:41:19,178:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:19,277:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:19,299:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:19,316:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:19,334:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:19,355:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:19,374:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:19,396:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:19,418:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:19,440:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:19,461:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:19,513:INFO:Calculating mean and std
2022-09-12 20:41:19,517:INFO:Creating metrics dataframe
2022-09-12 20:41:19,527:INFO:Uploading results into container
2022-09-12 20:41:19,529:INFO:Uploading model into container now
2022-09-12 20:41:19,530:INFO:master_model_container: 11
2022-09-12 20:41:19,530:INFO:display_container: 2
2022-09-12 20:41:19,531:INFO:KNeighborsRegressor(n_jobs=-1)
2022-09-12 20:41:19,531:INFO:create_model() successfully completed......................................
2022-09-12 20:41:19,696:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:19,697:INFO:Creating metrics dataframe
2022-09-12 20:41:19,723:INFO:Initializing Decision Tree Regressor
2022-09-12 20:41:19,723:INFO:Total runtime is 0.10702812274297077 minutes
2022-09-12 20:41:19,730:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:19,731:INFO:Initializing create_model()
2022-09-12 20:41:19,731:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652B47EB0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655AF5B50>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:19,731:INFO:Checking exceptions
2022-09-12 20:41:19,735:INFO:Importing libraries
2022-09-12 20:41:19,736:INFO:Copying training dataset
2022-09-12 20:41:19,743:INFO:Defining folds
2022-09-12 20:41:19,744:INFO:Declaring metric variables
2022-09-12 20:41:19,754:INFO:Importing untrained model
2022-09-12 20:41:19,764:INFO:Decision Tree Regressor Imported successfully
2022-09-12 20:41:19,780:INFO:Starting cross validation
2022-09-12 20:41:19,782:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:19,864:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:19,886:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:19,895:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:19,911:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:19,930:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:19,944:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:19,958:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:19,975:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:19,987:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:20,000:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:20,026:INFO:Calculating mean and std
2022-09-12 20:41:20,028:INFO:Creating metrics dataframe
2022-09-12 20:41:20,034:INFO:Uploading results into container
2022-09-12 20:41:20,035:INFO:Uploading model into container now
2022-09-12 20:41:20,036:INFO:master_model_container: 12
2022-09-12 20:41:20,036:INFO:display_container: 2
2022-09-12 20:41:20,037:INFO:DecisionTreeRegressor(random_state=123)
2022-09-12 20:41:20,037:INFO:create_model() successfully completed......................................
2022-09-12 20:41:20,184:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:20,185:INFO:Creating metrics dataframe
2022-09-12 20:41:20,203:INFO:Initializing Random Forest Regressor
2022-09-12 20:41:20,204:INFO:Total runtime is 0.11505666573842366 minutes
2022-09-12 20:41:20,210:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:20,210:INFO:Initializing create_model()
2022-09-12 20:41:20,211:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652B47EB0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655AF5B50>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:20,211:INFO:Checking exceptions
2022-09-12 20:41:20,213:INFO:Importing libraries
2022-09-12 20:41:20,213:INFO:Copying training dataset
2022-09-12 20:41:20,219:INFO:Defining folds
2022-09-12 20:41:20,219:INFO:Declaring metric variables
2022-09-12 20:41:20,229:INFO:Importing untrained model
2022-09-12 20:41:20,237:INFO:Random Forest Regressor Imported successfully
2022-09-12 20:41:20,252:INFO:Starting cross validation
2022-09-12 20:41:20,254:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:20,737:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:20,747:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:20,752:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:20,760:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:20,770:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:20,860:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:20,923:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:21,005:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:21,211:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:21,282:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:21,319:INFO:Calculating mean and std
2022-09-12 20:41:21,319:INFO:Creating metrics dataframe
2022-09-12 20:41:21,335:INFO:Uploading results into container
2022-09-12 20:41:21,335:INFO:Uploading model into container now
2022-09-12 20:41:21,335:INFO:master_model_container: 13
2022-09-12 20:41:21,335:INFO:display_container: 2
2022-09-12 20:41:21,335:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-09-12 20:41:21,335:INFO:create_model() successfully completed......................................
2022-09-12 20:41:21,482:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:21,482:INFO:Creating metrics dataframe
2022-09-12 20:41:21,513:INFO:Initializing Extra Trees Regressor
2022-09-12 20:41:21,513:INFO:Total runtime is 0.13686290979385374 minutes
2022-09-12 20:41:21,528:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:21,528:INFO:Initializing create_model()
2022-09-12 20:41:21,528:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652B47EB0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655AF5B50>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:21,528:INFO:Checking exceptions
2022-09-12 20:41:21,528:INFO:Importing libraries
2022-09-12 20:41:21,528:INFO:Copying training dataset
2022-09-12 20:41:21,544:INFO:Defining folds
2022-09-12 20:41:21,544:INFO:Declaring metric variables
2022-09-12 20:41:21,550:INFO:Importing untrained model
2022-09-12 20:41:21,564:INFO:Extra Trees Regressor Imported successfully
2022-09-12 20:41:21,564:INFO:Starting cross validation
2022-09-12 20:41:21,580:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:21,963:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:21,978:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:21,978:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:22,010:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:22,025:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:22,056:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:22,150:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:22,150:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:22,333:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:22,364:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:22,411:INFO:Calculating mean and std
2022-09-12 20:41:22,411:INFO:Creating metrics dataframe
2022-09-12 20:41:22,411:INFO:Uploading results into container
2022-09-12 20:41:22,411:INFO:Uploading model into container now
2022-09-12 20:41:22,411:INFO:master_model_container: 14
2022-09-12 20:41:22,411:INFO:display_container: 2
2022-09-12 20:41:22,411:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-09-12 20:41:22,411:INFO:create_model() successfully completed......................................
2022-09-12 20:41:22,552:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:22,552:INFO:Creating metrics dataframe
2022-09-12 20:41:22,583:INFO:Initializing AdaBoost Regressor
2022-09-12 20:41:22,583:INFO:Total runtime is 0.15470229387283324 minutes
2022-09-12 20:41:22,601:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:22,602:INFO:Initializing create_model()
2022-09-12 20:41:22,602:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652B47EB0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655AF5B50>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:22,602:INFO:Checking exceptions
2022-09-12 20:41:22,606:INFO:Importing libraries
2022-09-12 20:41:22,606:INFO:Copying training dataset
2022-09-12 20:41:22,615:INFO:Defining folds
2022-09-12 20:41:22,615:INFO:Declaring metric variables
2022-09-12 20:41:22,625:INFO:Importing untrained model
2022-09-12 20:41:22,635:INFO:AdaBoost Regressor Imported successfully
2022-09-12 20:41:22,650:INFO:Starting cross validation
2022-09-12 20:41:22,650:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:22,844:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:22,922:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:22,922:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:22,984:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:23,000:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:23,000:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:23,016:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:23,047:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:23,094:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:23,125:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:23,156:INFO:Calculating mean and std
2022-09-12 20:41:23,156:INFO:Creating metrics dataframe
2022-09-12 20:41:23,175:INFO:Uploading results into container
2022-09-12 20:41:23,176:INFO:Uploading model into container now
2022-09-12 20:41:23,177:INFO:master_model_container: 15
2022-09-12 20:41:23,177:INFO:display_container: 2
2022-09-12 20:41:23,178:INFO:AdaBoostRegressor(random_state=123)
2022-09-12 20:41:23,178:INFO:create_model() successfully completed......................................
2022-09-12 20:41:23,297:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:23,297:INFO:Creating metrics dataframe
2022-09-12 20:41:23,313:INFO:Initializing Gradient Boosting Regressor
2022-09-12 20:41:23,313:INFO:Total runtime is 0.16686273415883382 minutes
2022-09-12 20:41:23,328:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:23,328:INFO:Initializing create_model()
2022-09-12 20:41:23,328:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652B47EB0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655AF5B50>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:23,328:INFO:Checking exceptions
2022-09-12 20:41:23,328:INFO:Importing libraries
2022-09-12 20:41:23,328:INFO:Copying training dataset
2022-09-12 20:41:23,328:INFO:Defining folds
2022-09-12 20:41:23,328:INFO:Declaring metric variables
2022-09-12 20:41:23,344:INFO:Importing untrained model
2022-09-12 20:41:23,352:INFO:Gradient Boosting Regressor Imported successfully
2022-09-12 20:41:23,364:INFO:Starting cross validation
2022-09-12 20:41:23,366:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:23,466:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:23,513:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:23,513:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:23,528:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:23,544:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:23,575:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:23,575:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:23,591:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:23,622:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:23,653:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:23,669:INFO:Calculating mean and std
2022-09-12 20:41:23,669:INFO:Creating metrics dataframe
2022-09-12 20:41:23,685:INFO:Uploading results into container
2022-09-12 20:41:23,685:INFO:Uploading model into container now
2022-09-12 20:41:23,685:INFO:master_model_container: 16
2022-09-12 20:41:23,685:INFO:display_container: 2
2022-09-12 20:41:23,685:INFO:GradientBoostingRegressor(random_state=123)
2022-09-12 20:41:23,685:INFO:create_model() successfully completed......................................
2022-09-12 20:41:23,825:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:23,825:INFO:Creating metrics dataframe
2022-09-12 20:41:23,856:INFO:Initializing Light Gradient Boosting Machine
2022-09-12 20:41:23,856:INFO:Total runtime is 0.17592179377873737 minutes
2022-09-12 20:41:23,878:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:23,879:INFO:Initializing create_model()
2022-09-12 20:41:23,879:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652B47EB0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655AF5B50>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:23,879:INFO:Checking exceptions
2022-09-12 20:41:23,883:INFO:Importing libraries
2022-09-12 20:41:23,884:INFO:Copying training dataset
2022-09-12 20:41:23,893:INFO:Defining folds
2022-09-12 20:41:23,893:INFO:Declaring metric variables
2022-09-12 20:41:23,898:INFO:Importing untrained model
2022-09-12 20:41:23,898:INFO:Light Gradient Boosting Machine Imported successfully
2022-09-12 20:41:23,913:INFO:Starting cross validation
2022-09-12 20:41:23,913:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:24,016:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:24,033:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:24,048:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:24,080:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:24,095:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:24,111:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:24,126:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:24,142:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:24,173:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:24,173:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:24,205:INFO:Calculating mean and std
2022-09-12 20:41:24,205:INFO:Creating metrics dataframe
2022-09-12 20:41:24,220:INFO:Uploading results into container
2022-09-12 20:41:24,220:INFO:Uploading model into container now
2022-09-12 20:41:24,223:INFO:master_model_container: 17
2022-09-12 20:41:24,223:INFO:display_container: 2
2022-09-12 20:41:24,224:INFO:LGBMRegressor(random_state=123)
2022-09-12 20:41:24,225:INFO:create_model() successfully completed......................................
2022-09-12 20:41:24,348:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:24,348:INFO:Creating metrics dataframe
2022-09-12 20:41:24,364:INFO:Initializing Dummy Regressor
2022-09-12 20:41:24,364:INFO:Total runtime is 0.18438171943028767 minutes
2022-09-12 20:41:24,364:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:24,380:INFO:Initializing create_model()
2022-09-12 20:41:24,380:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652B47EB0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F655AF5B50>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:24,380:INFO:Checking exceptions
2022-09-12 20:41:24,380:INFO:Importing libraries
2022-09-12 20:41:24,380:INFO:Copying training dataset
2022-09-12 20:41:24,380:INFO:Defining folds
2022-09-12 20:41:24,380:INFO:Declaring metric variables
2022-09-12 20:41:24,380:INFO:Importing untrained model
2022-09-12 20:41:24,399:INFO:Dummy Regressor Imported successfully
2022-09-12 20:41:24,415:INFO:Starting cross validation
2022-09-12 20:41:24,417:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:24,474:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:24,497:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:24,505:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:24,516:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:24,531:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:24,549:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:24,570:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:24,588:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:24,609:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:24,625:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:24,655:INFO:Calculating mean and std
2022-09-12 20:41:24,659:INFO:Creating metrics dataframe
2022-09-12 20:41:24,668:INFO:Uploading results into container
2022-09-12 20:41:24,670:INFO:Uploading model into container now
2022-09-12 20:41:24,671:INFO:master_model_container: 18
2022-09-12 20:41:24,671:INFO:display_container: 2
2022-09-12 20:41:24,672:INFO:DummyRegressor()
2022-09-12 20:41:24,672:INFO:create_model() successfully completed......................................
2022-09-12 20:41:24,842:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:24,842:INFO:Creating metrics dataframe
2022-09-12 20:41:24,893:INFO:Initializing create_model()
2022-09-12 20:41:24,893:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652B47EB0>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:24,894:INFO:Checking exceptions
2022-09-12 20:41:24,899:INFO:Importing libraries
2022-09-12 20:41:24,900:INFO:Copying training dataset
2022-09-12 20:41:24,904:INFO:Defining folds
2022-09-12 20:41:24,904:INFO:Declaring metric variables
2022-09-12 20:41:24,905:INFO:Importing untrained model
2022-09-12 20:41:24,905:INFO:Declaring custom model
2022-09-12 20:41:24,905:INFO:Huber Regressor Imported successfully
2022-09-12 20:41:24,907:INFO:Cross validation set to False
2022-09-12 20:41:24,907:INFO:Fitting Model
2022-09-12 20:41:24,946:INFO:HuberRegressor()
2022-09-12 20:41:24,946:INFO:create_model() successfully completed......................................
2022-09-12 20:41:25,158:INFO:master_model_container: 18
2022-09-12 20:41:25,159:INFO:display_container: 2
2022-09-12 20:41:25,159:INFO:HuberRegressor()
2022-09-12 20:41:25,159:INFO:compare_models() successfully completed......................................
2022-09-12 20:41:40,822:INFO:PyCaret RegressionExperiment
2022-09-12 20:41:40,823:INFO:Logging name: reg-default-name
2022-09-12 20:41:40,823:INFO:ML Usecase: MLUsecase.REGRESSION
2022-09-12 20:41:40,823:INFO:version 3.0.0.rc3
2022-09-12 20:41:40,823:INFO:Initializing setup()
2022-09-12 20:41:40,823:INFO:self.USI: 3531
2022-09-12 20:41:40,824:INFO:self.variable_keys: {'_ml_usecase', 'display_container', 'y_train', 'USI', '_all_metrics', 'fold_generator', 'exp_name_log', 'logging_param', 'y_test', 'log_plots_param', 'fold_shuffle_param', 'fold_groups_param', '_all_models_internal', 'transform_target_method_param', 'n_jobs_param', 'exp_id', 'gpu_param', 'seed', 'X_test', 'data', 'X_train', 'X', 'pipeline', 'master_model_container', 'y', '_all_models', 'memory', 'target_param', 'html_param', 'transform_target_param', '_available_plots', 'variable_keys', '_gpu_n_jobs_param', 'idx'}
2022-09-12 20:41:40,824:INFO:Checking environment
2022-09-12 20:41:40,824:INFO:python_version: 3.9.12
2022-09-12 20:41:40,824:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-09-12 20:41:40,825:INFO:machine: AMD64
2022-09-12 20:41:40,825:INFO:platform: Windows-10-10.0.22000-SP0
2022-09-12 20:41:40,825:INFO:Memory: svmem(total=12710350848, available=2874900480, percent=77.4, used=9835450368, free=2874900480)
2022-09-12 20:41:40,825:INFO:Physical Core: 4
2022-09-12 20:41:40,825:INFO:Logical Core: 8
2022-09-12 20:41:40,825:INFO:Checking libraries
2022-09-12 20:41:40,825:INFO:System:
2022-09-12 20:41:40,825:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2022-09-12 20:41:40,826:INFO:executable: C:\Users\saint\anaconda3\python.exe
2022-09-12 20:41:40,826:INFO:   machine: Windows-10-10.0.22000-SP0
2022-09-12 20:41:40,826:INFO:PyCaret required dependencies:
2022-09-12 20:41:40,826:INFO:                 pip: 22.1.2
2022-09-12 20:41:40,826:INFO:          setuptools: 63.4.1
2022-09-12 20:41:40,826:INFO:             pycaret: 3.0.0.rc3
2022-09-12 20:41:40,826:INFO:             IPython: 7.31.1
2022-09-12 20:41:40,827:INFO:          ipywidgets: 7.6.5
2022-09-12 20:41:40,827:INFO:                tqdm: 4.64.0
2022-09-12 20:41:40,827:INFO:               numpy: 1.21.5
2022-09-12 20:41:40,827:INFO:              pandas: 1.4.3
2022-09-12 20:41:40,827:INFO:              jinja2: 2.11.3
2022-09-12 20:41:40,827:INFO:               scipy: 1.7.3
2022-09-12 20:41:40,827:INFO:              joblib: 1.1.0
2022-09-12 20:41:40,827:INFO:             sklearn: 1.1.1
2022-09-12 20:41:40,827:INFO:                pyod: Installed but version unavailable
2022-09-12 20:41:40,828:INFO:            imblearn: 0.9.1
2022-09-12 20:41:40,828:INFO:   category_encoders: 2.5.0
2022-09-12 20:41:40,828:INFO:            lightgbm: 3.3.2
2022-09-12 20:41:40,828:INFO:               numba: 0.55.1
2022-09-12 20:41:40,828:INFO:            requests: 2.28.1
2022-09-12 20:41:40,828:INFO:          matplotlib: 3.5.2
2022-09-12 20:41:40,828:INFO:          scikitplot: 0.3.7
2022-09-12 20:41:40,828:INFO:         yellowbrick: 1.5
2022-09-12 20:41:40,828:INFO:              plotly: 5.9.0
2022-09-12 20:41:40,828:INFO:             kaleido: 0.2.1
2022-09-12 20:41:40,829:INFO:         statsmodels: 0.13.2
2022-09-12 20:41:40,829:INFO:              sktime: 0.11.4
2022-09-12 20:41:40,829:INFO:               tbats: Installed but version unavailable
2022-09-12 20:41:40,829:INFO:            pmdarima: 2.0.1
2022-09-12 20:41:40,829:INFO:              psutil: 5.9.0
2022-09-12 20:41:40,829:INFO:None
2022-09-12 20:41:40,830:INFO:Set up data.
2022-09-12 20:41:40,842:INFO:Set up train/test split.
2022-09-12 20:41:40,854:INFO:Set up folding strategy.
2022-09-12 20:41:40,855:INFO:Assigning column types.
2022-09-12 20:41:40,865:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-09-12 20:41:40,865:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-09-12 20:41:40,885:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:41:40,913:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:41:41,338:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:41:41,434:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:41:41,438:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:41,441:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:41,441:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-09-12 20:41:41,456:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:41:41,471:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:41:41,582:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:41:41,648:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:41:41,648:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:41,648:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:41,648:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-09-12 20:41:41,664:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:41:41,664:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:41:41,742:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:41:41,805:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:41:41,820:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:41,820:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:41,820:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:41:41,836:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:41:41,898:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:41:41,973:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:41:41,973:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:41,973:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:41,973:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-09-12 20:41:41,988:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:41:42,067:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:41:42,129:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:41:42,129:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:42,145:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:42,145:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:41:42,223:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:41:42,285:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:41:42,285:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:42,285:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:42,285:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-09-12 20:41:42,379:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:41:42,426:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:41:42,426:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:42,426:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:42,504:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:41:42,551:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:41:42,551:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:42,551:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:42,567:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-09-12 20:41:42,629:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:41:42,676:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:42,676:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:42,754:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:41:42,801:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:42,801:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:42,801:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-09-12 20:41:42,941:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:42,941:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:43,082:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:43,082:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:43,082:INFO:Preparing preprocessing pipeline...
2022-09-12 20:41:43,082:INFO:Set up simple imputation.
2022-09-12 20:41:43,082:INFO:Set up variance threshold.
2022-09-12 20:41:43,098:INFO:Finished creating preprocessing pipeline.
2022-09-12 20:41:43,098:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\saint\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['BPPD', 'BAPD', 'Caudal_gas_MSCFD',
                                             'Presion_cabeza_psi',
                                             'Temperatura_cabeza_F',
                                             'Salinidad_ppm', 'CO2_gas',
                                             'bicarbonatos_ppm', 'dosis_IC_ppm',
                                             'Fe_ppm'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-09-12 20:41:43,098:INFO:Creating final display dataframe.
2022-09-12 20:41:43,197:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target               mpy
2              Target type        Regression
3               Data shape          (77, 11)
4         Train data shape          (53, 11)
5          Test data shape          (24, 11)
6         Numeric features                10
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU             False
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              3531
2022-09-12 20:41:43,350:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:43,350:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:43,482:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:43,482:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:43,482:INFO:setup() successfully completed in 2.66s...............
2022-09-12 20:41:44,162:INFO:Initializing compare_models()
2022-09-12 20:41:44,162:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F65581A790>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001F65581A790>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-09-12 20:41:44,162:INFO:Checking exceptions
2022-09-12 20:41:44,162:INFO:Preparing display monitor
2022-09-12 20:41:44,216:INFO:Initializing Linear Regression
2022-09-12 20:41:44,216:INFO:Total runtime is 0.0 minutes
2022-09-12 20:41:44,216:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:44,216:INFO:Initializing create_model()
2022-09-12 20:41:44,216:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F65581A790>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6527AEA60>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:44,216:INFO:Checking exceptions
2022-09-12 20:41:44,216:INFO:Importing libraries
2022-09-12 20:41:44,216:INFO:Copying training dataset
2022-09-12 20:41:44,216:INFO:Defining folds
2022-09-12 20:41:44,216:INFO:Declaring metric variables
2022-09-12 20:41:44,216:INFO:Importing untrained model
2022-09-12 20:41:44,232:INFO:Linear Regression Imported successfully
2022-09-12 20:41:44,251:INFO:Starting cross validation
2022-09-12 20:41:44,257:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:44,299:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:44,315:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:44,330:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:44,346:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:44,346:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:44,362:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:44,377:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:44,393:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:44,409:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:44,409:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:44,424:INFO:Calculating mean and std
2022-09-12 20:41:44,424:INFO:Creating metrics dataframe
2022-09-12 20:41:44,424:INFO:Uploading results into container
2022-09-12 20:41:44,424:INFO:Uploading model into container now
2022-09-12 20:41:44,424:INFO:master_model_container: 1
2022-09-12 20:41:44,424:INFO:display_container: 2
2022-09-12 20:41:44,424:INFO:LinearRegression(n_jobs=-1)
2022-09-12 20:41:44,424:INFO:create_model() successfully completed......................................
2022-09-12 20:41:44,622:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:44,622:INFO:Creating metrics dataframe
2022-09-12 20:41:44,654:INFO:Initializing Lasso Regression
2022-09-12 20:41:44,654:INFO:Total runtime is 0.007301990191141764 minutes
2022-09-12 20:41:44,670:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:44,670:INFO:Initializing create_model()
2022-09-12 20:41:44,670:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F65581A790>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6527AEA60>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:44,670:INFO:Checking exceptions
2022-09-12 20:41:44,670:INFO:Importing libraries
2022-09-12 20:41:44,670:INFO:Copying training dataset
2022-09-12 20:41:44,670:INFO:Defining folds
2022-09-12 20:41:44,670:INFO:Declaring metric variables
2022-09-12 20:41:44,686:INFO:Importing untrained model
2022-09-12 20:41:44,686:INFO:Lasso Regression Imported successfully
2022-09-12 20:41:44,701:INFO:Starting cross validation
2022-09-12 20:41:44,701:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:44,748:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:44,764:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:44,795:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:44,811:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:44,842:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:44,857:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:44,873:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:44,889:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:44,913:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:44,928:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:44,944:INFO:Calculating mean and std
2022-09-12 20:41:44,944:INFO:Creating metrics dataframe
2022-09-12 20:41:44,944:INFO:Uploading results into container
2022-09-12 20:41:44,944:INFO:Uploading model into container now
2022-09-12 20:41:44,944:INFO:master_model_container: 2
2022-09-12 20:41:44,944:INFO:display_container: 2
2022-09-12 20:41:44,944:INFO:Lasso(random_state=123)
2022-09-12 20:41:44,944:INFO:create_model() successfully completed......................................
2022-09-12 20:41:45,086:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:45,086:INFO:Creating metrics dataframe
2022-09-12 20:41:45,101:INFO:Initializing Ridge Regression
2022-09-12 20:41:45,101:INFO:Total runtime is 0.01475214163462321 minutes
2022-09-12 20:41:45,101:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:45,117:INFO:Initializing create_model()
2022-09-12 20:41:45,117:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F65581A790>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6527AEA60>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:45,117:INFO:Checking exceptions
2022-09-12 20:41:45,117:INFO:Importing libraries
2022-09-12 20:41:45,117:INFO:Copying training dataset
2022-09-12 20:41:45,117:INFO:Defining folds
2022-09-12 20:41:45,117:INFO:Declaring metric variables
2022-09-12 20:41:45,117:INFO:Importing untrained model
2022-09-12 20:41:45,133:INFO:Ridge Regression Imported successfully
2022-09-12 20:41:45,133:INFO:Starting cross validation
2022-09-12 20:41:45,133:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:45,179:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:45,211:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:45,211:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:45,226:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:45,242:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:45,258:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:45,273:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:45,289:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:45,289:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:45,304:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:45,320:INFO:Calculating mean and std
2022-09-12 20:41:45,320:INFO:Creating metrics dataframe
2022-09-12 20:41:45,336:INFO:Uploading results into container
2022-09-12 20:41:45,336:INFO:Uploading model into container now
2022-09-12 20:41:45,336:INFO:master_model_container: 3
2022-09-12 20:41:45,336:INFO:display_container: 2
2022-09-12 20:41:45,336:INFO:Ridge(random_state=123)
2022-09-12 20:41:45,336:INFO:create_model() successfully completed......................................
2022-09-12 20:41:45,445:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:45,445:INFO:Creating metrics dataframe
2022-09-12 20:41:45,461:INFO:Initializing Elastic Net
2022-09-12 20:41:45,461:INFO:Total runtime is 0.020740799109141034 minutes
2022-09-12 20:41:45,461:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:45,461:INFO:Initializing create_model()
2022-09-12 20:41:45,461:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F65581A790>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6527AEA60>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:45,461:INFO:Checking exceptions
2022-09-12 20:41:45,461:INFO:Importing libraries
2022-09-12 20:41:45,461:INFO:Copying training dataset
2022-09-12 20:41:45,476:INFO:Defining folds
2022-09-12 20:41:45,476:INFO:Declaring metric variables
2022-09-12 20:41:45,476:INFO:Importing untrained model
2022-09-12 20:41:45,476:INFO:Elastic Net Imported successfully
2022-09-12 20:41:45,492:INFO:Starting cross validation
2022-09-12 20:41:45,492:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:45,523:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:45,539:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:45,554:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:45,554:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:45,570:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:45,586:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:45,586:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:45,601:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:45,617:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:45,617:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:45,632:INFO:Calculating mean and std
2022-09-12 20:41:45,632:INFO:Creating metrics dataframe
2022-09-12 20:41:45,632:INFO:Uploading results into container
2022-09-12 20:41:45,632:INFO:Uploading model into container now
2022-09-12 20:41:45,632:INFO:master_model_container: 4
2022-09-12 20:41:45,632:INFO:display_container: 2
2022-09-12 20:41:45,632:INFO:ElasticNet(random_state=123)
2022-09-12 20:41:45,632:INFO:create_model() successfully completed......................................
2022-09-12 20:41:45,759:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:45,759:INFO:Creating metrics dataframe
2022-09-12 20:41:45,762:INFO:Initializing Least Angle Regression
2022-09-12 20:41:45,762:INFO:Total runtime is 0.025769730408986412 minutes
2022-09-12 20:41:45,778:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:45,778:INFO:Initializing create_model()
2022-09-12 20:41:45,778:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F65581A790>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6527AEA60>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:45,778:INFO:Checking exceptions
2022-09-12 20:41:45,778:INFO:Importing libraries
2022-09-12 20:41:45,778:INFO:Copying training dataset
2022-09-12 20:41:45,778:INFO:Defining folds
2022-09-12 20:41:45,778:INFO:Declaring metric variables
2022-09-12 20:41:45,778:INFO:Importing untrained model
2022-09-12 20:41:45,797:INFO:Least Angle Regression Imported successfully
2022-09-12 20:41:45,807:INFO:Starting cross validation
2022-09-12 20:41:45,808:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:45,850:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:45,850:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:45,850:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:45,866:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:45,881:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:45,881:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:45,897:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:45,897:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:45,897:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:45,897:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:45,913:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:45,913:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:45,928:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:45,928:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:45,944:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:45,944:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:45,960:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:45,960:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:45,960:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:45,975:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:45,991:INFO:Calculating mean and std
2022-09-12 20:41:45,991:INFO:Creating metrics dataframe
2022-09-12 20:41:46,004:INFO:Uploading results into container
2022-09-12 20:41:46,005:INFO:Uploading model into container now
2022-09-12 20:41:46,006:INFO:master_model_container: 5
2022-09-12 20:41:46,006:INFO:display_container: 2
2022-09-12 20:41:46,007:INFO:Lars(random_state=123)
2022-09-12 20:41:46,007:INFO:create_model() successfully completed......................................
2022-09-12 20:41:46,132:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:46,132:INFO:Creating metrics dataframe
2022-09-12 20:41:46,151:INFO:Initializing Lasso Least Angle Regression
2022-09-12 20:41:46,151:INFO:Total runtime is 0.032240764300028486 minutes
2022-09-12 20:41:46,152:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:46,152:INFO:Initializing create_model()
2022-09-12 20:41:46,152:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F65581A790>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6527AEA60>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:46,152:INFO:Checking exceptions
2022-09-12 20:41:46,152:INFO:Importing libraries
2022-09-12 20:41:46,152:INFO:Copying training dataset
2022-09-12 20:41:46,152:INFO:Defining folds
2022-09-12 20:41:46,152:INFO:Declaring metric variables
2022-09-12 20:41:46,168:INFO:Importing untrained model
2022-09-12 20:41:46,179:INFO:Lasso Least Angle Regression Imported successfully
2022-09-12 20:41:46,190:INFO:Starting cross validation
2022-09-12 20:41:46,192:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:46,240:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:41:46,241:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:46,250:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:41:46,250:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:46,266:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:41:46,266:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:46,282:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:41:46,282:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:46,297:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:41:46,297:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:46,313:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:41:46,313:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:46,329:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:41:46,329:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:46,329:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:41:46,329:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:46,360:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:41:46,360:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:46,360:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:41:46,360:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:46,375:INFO:Calculating mean and std
2022-09-12 20:41:46,375:INFO:Creating metrics dataframe
2022-09-12 20:41:46,391:INFO:Uploading results into container
2022-09-12 20:41:46,391:INFO:Uploading model into container now
2022-09-12 20:41:46,391:INFO:master_model_container: 6
2022-09-12 20:41:46,391:INFO:display_container: 2
2022-09-12 20:41:46,391:INFO:LassoLars(random_state=123)
2022-09-12 20:41:46,391:INFO:create_model() successfully completed......................................
2022-09-12 20:41:46,499:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:46,499:INFO:Creating metrics dataframe
2022-09-12 20:41:46,515:INFO:Initializing Orthogonal Matching Pursuit
2022-09-12 20:41:46,515:INFO:Total runtime is 0.03830751578013102 minutes
2022-09-12 20:41:46,530:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:46,530:INFO:Initializing create_model()
2022-09-12 20:41:46,530:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F65581A790>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6527AEA60>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:46,530:INFO:Checking exceptions
2022-09-12 20:41:46,530:INFO:Importing libraries
2022-09-12 20:41:46,530:INFO:Copying training dataset
2022-09-12 20:41:46,530:INFO:Defining folds
2022-09-12 20:41:46,530:INFO:Declaring metric variables
2022-09-12 20:41:46,530:INFO:Importing untrained model
2022-09-12 20:41:46,550:INFO:Orthogonal Matching Pursuit Imported successfully
2022-09-12 20:41:46,560:INFO:Starting cross validation
2022-09-12 20:41:46,562:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:46,599:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:46,599:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:46,599:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:46,599:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:46,614:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:46,614:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:46,614:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:46,633:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:46,647:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:46,650:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:46,650:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:46,650:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:46,666:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:46,666:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:46,682:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:46,697:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:46,697:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:46,697:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:46,697:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:41:46,697:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:46,728:INFO:Calculating mean and std
2022-09-12 20:41:46,728:INFO:Creating metrics dataframe
2022-09-12 20:41:46,728:INFO:Uploading results into container
2022-09-12 20:41:46,728:INFO:Uploading model into container now
2022-09-12 20:41:46,728:INFO:master_model_container: 7
2022-09-12 20:41:46,728:INFO:display_container: 2
2022-09-12 20:41:46,728:INFO:OrthogonalMatchingPursuit()
2022-09-12 20:41:46,728:INFO:create_model() successfully completed......................................
2022-09-12 20:41:46,881:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:46,881:INFO:Creating metrics dataframe
2022-09-12 20:41:46,897:INFO:Initializing Bayesian Ridge
2022-09-12 20:41:46,897:INFO:Total runtime is 0.04467914899190267 minutes
2022-09-12 20:41:46,897:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:46,897:INFO:Initializing create_model()
2022-09-12 20:41:46,897:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F65581A790>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6527AEA60>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:46,897:INFO:Checking exceptions
2022-09-12 20:41:46,897:INFO:Importing libraries
2022-09-12 20:41:46,897:INFO:Copying training dataset
2022-09-12 20:41:46,913:INFO:Defining folds
2022-09-12 20:41:46,913:INFO:Declaring metric variables
2022-09-12 20:41:46,921:INFO:Importing untrained model
2022-09-12 20:41:46,928:INFO:Bayesian Ridge Imported successfully
2022-09-12 20:41:46,940:INFO:Starting cross validation
2022-09-12 20:41:46,941:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:47,000:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:47,015:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:47,038:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:47,050:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:47,066:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:47,081:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:47,097:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:47,112:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:47,128:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:47,144:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:47,159:INFO:Calculating mean and std
2022-09-12 20:41:47,159:INFO:Creating metrics dataframe
2022-09-12 20:41:47,175:INFO:Uploading results into container
2022-09-12 20:41:47,175:INFO:Uploading model into container now
2022-09-12 20:41:47,175:INFO:master_model_container: 8
2022-09-12 20:41:47,175:INFO:display_container: 2
2022-09-12 20:41:47,175:INFO:BayesianRidge()
2022-09-12 20:41:47,175:INFO:create_model() successfully completed......................................
2022-09-12 20:41:47,317:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:47,317:INFO:Creating metrics dataframe
2022-09-12 20:41:47,333:INFO:Initializing Passive Aggressive Regressor
2022-09-12 20:41:47,333:INFO:Total runtime is 0.05194092988967896 minutes
2022-09-12 20:41:47,333:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:47,333:INFO:Initializing create_model()
2022-09-12 20:41:47,333:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F65581A790>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6527AEA60>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:47,333:INFO:Checking exceptions
2022-09-12 20:41:47,333:INFO:Importing libraries
2022-09-12 20:41:47,333:INFO:Copying training dataset
2022-09-12 20:41:47,348:INFO:Defining folds
2022-09-12 20:41:47,348:INFO:Declaring metric variables
2022-09-12 20:41:47,348:INFO:Importing untrained model
2022-09-12 20:41:47,368:INFO:Passive Aggressive Regressor Imported successfully
2022-09-12 20:41:47,380:INFO:Starting cross validation
2022-09-12 20:41:47,382:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:47,437:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:47,444:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:47,450:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:47,450:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:47,466:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:47,497:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:47,513:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:47,528:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:47,528:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:47,544:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:47,557:INFO:Calculating mean and std
2022-09-12 20:41:47,557:INFO:Creating metrics dataframe
2022-09-12 20:41:47,557:INFO:Uploading results into container
2022-09-12 20:41:47,557:INFO:Uploading model into container now
2022-09-12 20:41:47,557:INFO:master_model_container: 9
2022-09-12 20:41:47,557:INFO:display_container: 2
2022-09-12 20:41:47,557:INFO:PassiveAggressiveRegressor(random_state=123)
2022-09-12 20:41:47,557:INFO:create_model() successfully completed......................................
2022-09-12 20:41:47,697:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:47,697:INFO:Creating metrics dataframe
2022-09-12 20:41:47,722:INFO:Initializing Huber Regressor
2022-09-12 20:41:47,722:INFO:Total runtime is 0.058429018656412764 minutes
2022-09-12 20:41:47,727:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:47,727:INFO:Initializing create_model()
2022-09-12 20:41:47,727:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F65581A790>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6527AEA60>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:47,727:INFO:Checking exceptions
2022-09-12 20:41:47,727:INFO:Importing libraries
2022-09-12 20:41:47,727:INFO:Copying training dataset
2022-09-12 20:41:47,727:INFO:Defining folds
2022-09-12 20:41:47,727:INFO:Declaring metric variables
2022-09-12 20:41:47,727:INFO:Importing untrained model
2022-09-12 20:41:47,742:INFO:Huber Regressor Imported successfully
2022-09-12 20:41:47,762:INFO:Starting cross validation
2022-09-12 20:41:47,763:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:47,850:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:41:47,850:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:47,881:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:41:47,881:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:47,897:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:41:47,897:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:47,897:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:41:47,897:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:47,944:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:41:47,944:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:47,944:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:41:47,944:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:47,959:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:41:47,959:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:47,975:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:41:47,975:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:47,991:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:41:47,991:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:48,006:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:41:48,006:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:48,022:INFO:Calculating mean and std
2022-09-12 20:41:48,022:INFO:Creating metrics dataframe
2022-09-12 20:41:48,038:INFO:Uploading results into container
2022-09-12 20:41:48,038:INFO:Uploading model into container now
2022-09-12 20:41:48,038:INFO:master_model_container: 10
2022-09-12 20:41:48,038:INFO:display_container: 2
2022-09-12 20:41:48,038:INFO:HuberRegressor()
2022-09-12 20:41:48,038:INFO:create_model() successfully completed......................................
2022-09-12 20:41:48,163:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:48,163:INFO:Creating metrics dataframe
2022-09-12 20:41:48,200:INFO:Initializing K Neighbors Regressor
2022-09-12 20:41:48,200:INFO:Total runtime is 0.06639631986618043 minutes
2022-09-12 20:41:48,200:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:48,200:INFO:Initializing create_model()
2022-09-12 20:41:48,200:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F65581A790>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6527AEA60>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:48,200:INFO:Checking exceptions
2022-09-12 20:41:48,200:INFO:Importing libraries
2022-09-12 20:41:48,200:INFO:Copying training dataset
2022-09-12 20:41:48,222:INFO:Defining folds
2022-09-12 20:41:48,222:INFO:Declaring metric variables
2022-09-12 20:41:48,229:INFO:Importing untrained model
2022-09-12 20:41:48,230:INFO:K Neighbors Regressor Imported successfully
2022-09-12 20:41:48,246:INFO:Starting cross validation
2022-09-12 20:41:48,246:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:48,298:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:48,335:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:48,349:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:48,365:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:48,381:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:48,397:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:48,412:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:48,428:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:48,444:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:48,459:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:48,490:INFO:Calculating mean and std
2022-09-12 20:41:48,490:INFO:Creating metrics dataframe
2022-09-12 20:41:48,490:INFO:Uploading results into container
2022-09-12 20:41:48,490:INFO:Uploading model into container now
2022-09-12 20:41:48,490:INFO:master_model_container: 11
2022-09-12 20:41:48,490:INFO:display_container: 2
2022-09-12 20:41:48,490:INFO:KNeighborsRegressor(n_jobs=-1)
2022-09-12 20:41:48,490:INFO:create_model() successfully completed......................................
2022-09-12 20:41:48,630:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:48,630:INFO:Creating metrics dataframe
2022-09-12 20:41:48,658:INFO:Initializing Decision Tree Regressor
2022-09-12 20:41:48,659:INFO:Total runtime is 0.07404460906982423 minutes
2022-09-12 20:41:48,664:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:48,664:INFO:Initializing create_model()
2022-09-12 20:41:48,664:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F65581A790>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6527AEA60>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:48,664:INFO:Checking exceptions
2022-09-12 20:41:48,666:INFO:Importing libraries
2022-09-12 20:41:48,667:INFO:Copying training dataset
2022-09-12 20:41:48,672:INFO:Defining folds
2022-09-12 20:41:48,672:INFO:Declaring metric variables
2022-09-12 20:41:48,678:INFO:Importing untrained model
2022-09-12 20:41:48,687:INFO:Decision Tree Regressor Imported successfully
2022-09-12 20:41:48,694:INFO:Starting cross validation
2022-09-12 20:41:48,694:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:48,750:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:48,781:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:48,799:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:48,816:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:48,817:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:48,848:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:48,864:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:48,879:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:48,895:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:48,911:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:48,926:INFO:Calculating mean and std
2022-09-12 20:41:48,942:INFO:Creating metrics dataframe
2022-09-12 20:41:48,942:INFO:Uploading results into container
2022-09-12 20:41:48,942:INFO:Uploading model into container now
2022-09-12 20:41:48,942:INFO:master_model_container: 12
2022-09-12 20:41:48,942:INFO:display_container: 2
2022-09-12 20:41:48,942:INFO:DecisionTreeRegressor(random_state=123)
2022-09-12 20:41:48,942:INFO:create_model() successfully completed......................................
2022-09-12 20:41:49,103:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:49,103:INFO:Creating metrics dataframe
2022-09-12 20:41:49,127:INFO:Initializing Random Forest Regressor
2022-09-12 20:41:49,127:INFO:Total runtime is 0.0818428119023641 minutes
2022-09-12 20:41:49,132:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:49,133:INFO:Initializing create_model()
2022-09-12 20:41:49,133:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F65581A790>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6527AEA60>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:49,133:INFO:Checking exceptions
2022-09-12 20:41:49,136:INFO:Importing libraries
2022-09-12 20:41:49,136:INFO:Copying training dataset
2022-09-12 20:41:49,141:INFO:Defining folds
2022-09-12 20:41:49,141:INFO:Declaring metric variables
2022-09-12 20:41:49,149:INFO:Importing untrained model
2022-09-12 20:41:49,158:INFO:Random Forest Regressor Imported successfully
2022-09-12 20:41:49,171:INFO:Starting cross validation
2022-09-12 20:41:49,172:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:49,576:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:49,590:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:49,610:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:49,620:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:49,665:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:49,696:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:49,807:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:49,838:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:50,088:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:50,097:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:50,158:INFO:Calculating mean and std
2022-09-12 20:41:50,160:INFO:Creating metrics dataframe
2022-09-12 20:41:50,166:INFO:Uploading results into container
2022-09-12 20:41:50,167:INFO:Uploading model into container now
2022-09-12 20:41:50,168:INFO:master_model_container: 13
2022-09-12 20:41:50,168:INFO:display_container: 2
2022-09-12 20:41:50,168:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-09-12 20:41:50,169:INFO:create_model() successfully completed......................................
2022-09-12 20:41:50,315:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:50,316:INFO:Creating metrics dataframe
2022-09-12 20:41:50,338:INFO:Initializing Extra Trees Regressor
2022-09-12 20:41:50,338:INFO:Total runtime is 0.10203430652618409 minutes
2022-09-12 20:41:50,345:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:50,345:INFO:Initializing create_model()
2022-09-12 20:41:50,346:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F65581A790>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6527AEA60>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:50,346:INFO:Checking exceptions
2022-09-12 20:41:50,350:INFO:Importing libraries
2022-09-12 20:41:50,351:INFO:Copying training dataset
2022-09-12 20:41:50,357:INFO:Defining folds
2022-09-12 20:41:50,357:INFO:Declaring metric variables
2022-09-12 20:41:50,364:INFO:Importing untrained model
2022-09-12 20:41:50,371:INFO:Extra Trees Regressor Imported successfully
2022-09-12 20:41:50,382:INFO:Starting cross validation
2022-09-12 20:41:50,383:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:50,687:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:50,688:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:50,709:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:50,753:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:50,790:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:50,857:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:50,880:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:50,929:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:51,091:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:51,097:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:51,148:INFO:Calculating mean and std
2022-09-12 20:41:51,150:INFO:Creating metrics dataframe
2022-09-12 20:41:51,156:INFO:Uploading results into container
2022-09-12 20:41:51,157:INFO:Uploading model into container now
2022-09-12 20:41:51,157:INFO:master_model_container: 14
2022-09-12 20:41:51,157:INFO:display_container: 2
2022-09-12 20:41:51,158:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-09-12 20:41:51,158:INFO:create_model() successfully completed......................................
2022-09-12 20:41:51,296:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:51,297:INFO:Creating metrics dataframe
2022-09-12 20:41:51,316:INFO:Initializing AdaBoost Regressor
2022-09-12 20:41:51,316:INFO:Total runtime is 0.11833269993464153 minutes
2022-09-12 20:41:51,321:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:51,322:INFO:Initializing create_model()
2022-09-12 20:41:51,322:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F65581A790>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6527AEA60>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:51,322:INFO:Checking exceptions
2022-09-12 20:41:51,325:INFO:Importing libraries
2022-09-12 20:41:51,325:INFO:Copying training dataset
2022-09-12 20:41:51,330:INFO:Defining folds
2022-09-12 20:41:51,330:INFO:Declaring metric variables
2022-09-12 20:41:51,338:INFO:Importing untrained model
2022-09-12 20:41:51,345:INFO:AdaBoost Regressor Imported successfully
2022-09-12 20:41:51,360:INFO:Starting cross validation
2022-09-12 20:41:51,362:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:51,509:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:51,573:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:51,583:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:51,587:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:51,620:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:51,657:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:51,661:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:51,668:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:51,692:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:51,740:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:51,760:INFO:Calculating mean and std
2022-09-12 20:41:51,763:INFO:Creating metrics dataframe
2022-09-12 20:41:51,768:INFO:Uploading results into container
2022-09-12 20:41:51,769:INFO:Uploading model into container now
2022-09-12 20:41:51,769:INFO:master_model_container: 15
2022-09-12 20:41:51,769:INFO:display_container: 2
2022-09-12 20:41:51,770:INFO:AdaBoostRegressor(random_state=123)
2022-09-12 20:41:51,770:INFO:create_model() successfully completed......................................
2022-09-12 20:41:51,902:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:51,902:INFO:Creating metrics dataframe
2022-09-12 20:41:51,923:INFO:Initializing Gradient Boosting Regressor
2022-09-12 20:41:51,923:INFO:Total runtime is 0.12844493786493938 minutes
2022-09-12 20:41:51,932:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:51,933:INFO:Initializing create_model()
2022-09-12 20:41:51,934:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F65581A790>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6527AEA60>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:51,934:INFO:Checking exceptions
2022-09-12 20:41:51,937:INFO:Importing libraries
2022-09-12 20:41:51,937:INFO:Copying training dataset
2022-09-12 20:41:51,945:INFO:Defining folds
2022-09-12 20:41:51,946:INFO:Declaring metric variables
2022-09-12 20:41:51,954:INFO:Importing untrained model
2022-09-12 20:41:51,962:INFO:Gradient Boosting Regressor Imported successfully
2022-09-12 20:41:51,976:INFO:Starting cross validation
2022-09-12 20:41:51,977:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:52,112:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:52,118:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:52,155:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:52,157:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:52,189:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:52,190:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:52,224:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:52,229:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:52,256:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:52,265:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:52,292:INFO:Calculating mean and std
2022-09-12 20:41:52,295:INFO:Creating metrics dataframe
2022-09-12 20:41:52,302:INFO:Uploading results into container
2022-09-12 20:41:52,303:INFO:Uploading model into container now
2022-09-12 20:41:52,304:INFO:master_model_container: 16
2022-09-12 20:41:52,304:INFO:display_container: 2
2022-09-12 20:41:52,305:INFO:GradientBoostingRegressor(random_state=123)
2022-09-12 20:41:52,306:INFO:create_model() successfully completed......................................
2022-09-12 20:41:52,448:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:52,448:INFO:Creating metrics dataframe
2022-09-12 20:41:52,468:INFO:Initializing Light Gradient Boosting Machine
2022-09-12 20:41:52,469:INFO:Total runtime is 0.1375398278236389 minutes
2022-09-12 20:41:52,474:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:52,475:INFO:Initializing create_model()
2022-09-12 20:41:52,475:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F65581A790>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6527AEA60>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:52,475:INFO:Checking exceptions
2022-09-12 20:41:52,477:INFO:Importing libraries
2022-09-12 20:41:52,477:INFO:Copying training dataset
2022-09-12 20:41:52,482:INFO:Defining folds
2022-09-12 20:41:52,482:INFO:Declaring metric variables
2022-09-12 20:41:52,489:INFO:Importing untrained model
2022-09-12 20:41:52,496:INFO:Light Gradient Boosting Machine Imported successfully
2022-09-12 20:41:52,508:INFO:Starting cross validation
2022-09-12 20:41:52,509:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:52,575:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:52,596:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:52,613:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:52,624:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:52,634:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:52,645:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:52,662:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:52,676:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:52,697:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:52,707:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:52,722:INFO:Calculating mean and std
2022-09-12 20:41:52,724:INFO:Creating metrics dataframe
2022-09-12 20:41:52,729:INFO:Uploading results into container
2022-09-12 20:41:52,730:INFO:Uploading model into container now
2022-09-12 20:41:52,730:INFO:master_model_container: 17
2022-09-12 20:41:52,731:INFO:display_container: 2
2022-09-12 20:41:52,731:INFO:LGBMRegressor(random_state=123)
2022-09-12 20:41:52,731:INFO:create_model() successfully completed......................................
2022-09-12 20:41:52,879:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:52,879:INFO:Creating metrics dataframe
2022-09-12 20:41:52,895:INFO:Initializing Dummy Regressor
2022-09-12 20:41:52,895:INFO:Total runtime is 0.14464417298634846 minutes
2022-09-12 20:41:52,895:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:52,895:INFO:Initializing create_model()
2022-09-12 20:41:52,895:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F65581A790>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6527AEA60>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:52,895:INFO:Checking exceptions
2022-09-12 20:41:52,910:INFO:Importing libraries
2022-09-12 20:41:52,910:INFO:Copying training dataset
2022-09-12 20:41:52,910:INFO:Defining folds
2022-09-12 20:41:52,910:INFO:Declaring metric variables
2022-09-12 20:41:52,927:INFO:Importing untrained model
2022-09-12 20:41:52,938:INFO:Dummy Regressor Imported successfully
2022-09-12 20:41:52,950:INFO:Starting cross validation
2022-09-12 20:41:52,950:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:53,013:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:53,027:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:53,048:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:53,065:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:53,081:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:53,097:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:53,112:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:53,128:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:53,144:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:53,159:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:53,175:INFO:Calculating mean and std
2022-09-12 20:41:53,175:INFO:Creating metrics dataframe
2022-09-12 20:41:53,198:INFO:Uploading results into container
2022-09-12 20:41:53,200:INFO:Uploading model into container now
2022-09-12 20:41:53,201:INFO:master_model_container: 18
2022-09-12 20:41:53,201:INFO:display_container: 2
2022-09-12 20:41:53,202:INFO:DummyRegressor()
2022-09-12 20:41:53,202:INFO:create_model() successfully completed......................................
2022-09-12 20:41:53,332:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:53,332:INFO:Creating metrics dataframe
2022-09-12 20:41:53,381:INFO:Initializing create_model()
2022-09-12 20:41:53,382:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F65581A790>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:53,382:INFO:Checking exceptions
2022-09-12 20:41:53,387:INFO:Importing libraries
2022-09-12 20:41:53,387:INFO:Copying training dataset
2022-09-12 20:41:53,394:INFO:Defining folds
2022-09-12 20:41:53,394:INFO:Declaring metric variables
2022-09-12 20:41:53,395:INFO:Importing untrained model
2022-09-12 20:41:53,395:INFO:Declaring custom model
2022-09-12 20:41:53,397:INFO:Huber Regressor Imported successfully
2022-09-12 20:41:53,398:INFO:Cross validation set to False
2022-09-12 20:41:53,398:INFO:Fitting Model
2022-09-12 20:41:53,443:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning:

lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html


2022-09-12 20:41:53,444:INFO:HuberRegressor()
2022-09-12 20:41:53,444:INFO:create_model() successfully completed......................................
2022-09-12 20:41:53,616:INFO:master_model_container: 18
2022-09-12 20:41:53,616:INFO:display_container: 2
2022-09-12 20:41:53,616:INFO:HuberRegressor()
2022-09-12 20:41:53,616:INFO:compare_models() successfully completed......................................
2022-09-12 20:41:54,709:INFO:PyCaret RegressionExperiment
2022-09-12 20:41:54,710:INFO:Logging name: reg-default-name
2022-09-12 20:41:54,710:INFO:ML Usecase: MLUsecase.REGRESSION
2022-09-12 20:41:54,710:INFO:version 3.0.0.rc3
2022-09-12 20:41:54,710:INFO:Initializing setup()
2022-09-12 20:41:54,710:INFO:self.USI: 2878
2022-09-12 20:41:54,710:INFO:self.variable_keys: {'_ml_usecase', 'display_container', 'y_train', 'USI', '_all_metrics', 'fold_generator', 'exp_name_log', 'logging_param', 'y_test', 'log_plots_param', 'fold_shuffle_param', 'fold_groups_param', '_all_models_internal', 'transform_target_method_param', 'n_jobs_param', 'exp_id', 'gpu_param', 'seed', 'X_test', 'data', 'X_train', 'X', 'pipeline', 'master_model_container', 'y', '_all_models', 'memory', 'target_param', 'html_param', 'transform_target_param', '_available_plots', 'variable_keys', '_gpu_n_jobs_param', 'idx'}
2022-09-12 20:41:54,710:INFO:Checking environment
2022-09-12 20:41:54,710:INFO:python_version: 3.9.12
2022-09-12 20:41:54,711:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-09-12 20:41:54,711:INFO:machine: AMD64
2022-09-12 20:41:54,711:INFO:platform: Windows-10-10.0.22000-SP0
2022-09-12 20:41:54,711:INFO:Memory: svmem(total=12710350848, available=2865020928, percent=77.5, used=9845329920, free=2865020928)
2022-09-12 20:41:54,711:INFO:Physical Core: 4
2022-09-12 20:41:54,711:INFO:Logical Core: 8
2022-09-12 20:41:54,711:INFO:Checking libraries
2022-09-12 20:41:54,711:INFO:System:
2022-09-12 20:41:54,711:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2022-09-12 20:41:54,711:INFO:executable: C:\Users\saint\anaconda3\python.exe
2022-09-12 20:41:54,712:INFO:   machine: Windows-10-10.0.22000-SP0
2022-09-12 20:41:54,712:INFO:PyCaret required dependencies:
2022-09-12 20:41:54,712:INFO:                 pip: 22.1.2
2022-09-12 20:41:54,712:INFO:          setuptools: 63.4.1
2022-09-12 20:41:54,712:INFO:             pycaret: 3.0.0.rc3
2022-09-12 20:41:54,712:INFO:             IPython: 7.31.1
2022-09-12 20:41:54,712:INFO:          ipywidgets: 7.6.5
2022-09-12 20:41:54,712:INFO:                tqdm: 4.64.0
2022-09-12 20:41:54,713:INFO:               numpy: 1.21.5
2022-09-12 20:41:54,713:INFO:              pandas: 1.4.3
2022-09-12 20:41:54,713:INFO:              jinja2: 2.11.3
2022-09-12 20:41:54,713:INFO:               scipy: 1.7.3
2022-09-12 20:41:54,713:INFO:              joblib: 1.1.0
2022-09-12 20:41:54,713:INFO:             sklearn: 1.1.1
2022-09-12 20:41:54,713:INFO:                pyod: Installed but version unavailable
2022-09-12 20:41:54,713:INFO:            imblearn: 0.9.1
2022-09-12 20:41:54,713:INFO:   category_encoders: 2.5.0
2022-09-12 20:41:54,713:INFO:            lightgbm: 3.3.2
2022-09-12 20:41:54,713:INFO:               numba: 0.55.1
2022-09-12 20:41:54,713:INFO:            requests: 2.28.1
2022-09-12 20:41:54,713:INFO:          matplotlib: 3.5.2
2022-09-12 20:41:54,713:INFO:          scikitplot: 0.3.7
2022-09-12 20:41:54,713:INFO:         yellowbrick: 1.5
2022-09-12 20:41:54,713:INFO:              plotly: 5.9.0
2022-09-12 20:41:54,713:INFO:             kaleido: 0.2.1
2022-09-12 20:41:54,714:INFO:         statsmodels: 0.13.2
2022-09-12 20:41:54,714:INFO:              sktime: 0.11.4
2022-09-12 20:41:54,714:INFO:               tbats: Installed but version unavailable
2022-09-12 20:41:54,714:INFO:            pmdarima: 2.0.1
2022-09-12 20:41:54,714:INFO:              psutil: 5.9.0
2022-09-12 20:41:54,714:INFO:None
2022-09-12 20:41:54,714:INFO:Set up data.
2022-09-12 20:41:54,720:INFO:Set up train/test split.
2022-09-12 20:41:54,727:INFO:Set up folding strategy.
2022-09-12 20:41:54,728:INFO:Assigning column types.
2022-09-12 20:41:54,731:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-09-12 20:41:54,731:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-09-12 20:41:54,737:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:41:54,747:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:41:54,828:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:41:54,906:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:41:54,908:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:54,910:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:54,910:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-09-12 20:41:54,920:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:41:54,927:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:41:55,149:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:41:55,270:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:41:55,273:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:55,275:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:55,276:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-09-12 20:41:55,284:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:41:55,292:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:41:55,408:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:41:55,480:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:41:55,482:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:55,484:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:55,491:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-09-12 20:41:55,498:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:41:55,582:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:41:55,650:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:41:55,652:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:55,654:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:55,655:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-09-12 20:41:55,668:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:41:55,755:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:41:55,826:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:41:55,830:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:55,833:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:55,853:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-09-12 20:41:55,941:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:41:56,014:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:41:56,016:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:56,018:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:56,018:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-09-12 20:41:56,145:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:41:56,215:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:41:56,217:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:56,218:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:56,325:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:41:56,394:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-12 20:41:56,396:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:56,397:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:56,397:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-09-12 20:41:56,495:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:41:56,561:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:56,562:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:56,653:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-09-12 20:41:56,714:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:56,715:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:56,716:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-09-12 20:41:56,895:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:56,896:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:57,069:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:57,071:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:57,072:INFO:Preparing preprocessing pipeline...
2022-09-12 20:41:57,073:INFO:Set up simple imputation.
2022-09-12 20:41:57,073:INFO:Set up variance threshold.
2022-09-12 20:41:57,073:INFO:Set up feature normalization.
2022-09-12 20:41:57,104:INFO:Finished creating preprocessing pipeline.
2022-09-12 20:41:57,113:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\saint\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['BPPD', 'BAPD', 'Caudal_gas_MSCFD',
                                             'Presion_cabeza_psi',
                                             'Temperatura_cabeza_F',
                                             'Salinidad_ppm', 'CO2_gas',
                                             'bicarbonatos_ppm', 'dosis_IC_ppm',
                                             'Fe_ppm'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2022-09-12 20:41:57,113:INFO:Creating final display dataframe.
2022-09-12 20:41:57,271:INFO:Setup display_container:                Description             Value
0               Session id               123
1                   Target               mpy
2              Target type        Regression
3               Data shape          (77, 11)
4         Train data shape          (53, 11)
5          Test data shape          (24, 11)
6         Numeric features                10
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12               Normalize              True
13        Normalize method            zscore
14          Fold Generator             KFold
15             Fold Number                10
16                CPU Jobs                -1
17                 Use GPU             False
18          Log Experiment             False
19         Experiment Name  reg-default-name
20                     USI              2878
2022-09-12 20:41:57,441:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:57,441:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:57,597:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:57,597:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-12 20:41:57,597:INFO:setup() successfully completed in 2.89s...............
2022-09-12 20:41:58,557:INFO:Initializing compare_models()
2022-09-12 20:41:58,557:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652702D00>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001F652702D00>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-09-12 20:41:58,557:INFO:Checking exceptions
2022-09-12 20:41:58,557:INFO:Preparing display monitor
2022-09-12 20:41:58,588:INFO:Initializing Linear Regression
2022-09-12 20:41:58,588:INFO:Total runtime is 0.0 minutes
2022-09-12 20:41:58,604:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:58,604:INFO:Initializing create_model()
2022-09-12 20:41:58,604:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652702D00>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6565B3BB0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:58,604:INFO:Checking exceptions
2022-09-12 20:41:58,604:INFO:Importing libraries
2022-09-12 20:41:58,604:INFO:Copying training dataset
2022-09-12 20:41:58,604:INFO:Defining folds
2022-09-12 20:41:58,604:INFO:Declaring metric variables
2022-09-12 20:41:58,604:INFO:Importing untrained model
2022-09-12 20:41:58,620:INFO:Linear Regression Imported successfully
2022-09-12 20:41:58,629:INFO:Starting cross validation
2022-09-12 20:41:58,634:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:58,685:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:58,695:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:58,718:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:58,725:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:58,740:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:58,756:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:58,756:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:58,787:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:58,803:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:58,803:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:58,819:INFO:Calculating mean and std
2022-09-12 20:41:58,819:INFO:Creating metrics dataframe
2022-09-12 20:41:58,834:INFO:Uploading results into container
2022-09-12 20:41:58,834:INFO:Uploading model into container now
2022-09-12 20:41:58,834:INFO:master_model_container: 1
2022-09-12 20:41:58,834:INFO:display_container: 2
2022-09-12 20:41:58,834:INFO:LinearRegression(n_jobs=-1)
2022-09-12 20:41:58,834:INFO:create_model() successfully completed......................................
2022-09-12 20:41:58,997:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:58,997:INFO:Creating metrics dataframe
2022-09-12 20:41:59,040:INFO:Initializing Lasso Regression
2022-09-12 20:41:59,040:INFO:Total runtime is 0.007521295547485351 minutes
2022-09-12 20:41:59,040:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:59,040:INFO:Initializing create_model()
2022-09-12 20:41:59,040:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652702D00>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6565B3BB0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:59,040:INFO:Checking exceptions
2022-09-12 20:41:59,055:INFO:Importing libraries
2022-09-12 20:41:59,055:INFO:Copying training dataset
2022-09-12 20:41:59,055:INFO:Defining folds
2022-09-12 20:41:59,055:INFO:Declaring metric variables
2022-09-12 20:41:59,055:INFO:Importing untrained model
2022-09-12 20:41:59,071:INFO:Lasso Regression Imported successfully
2022-09-12 20:41:59,086:INFO:Starting cross validation
2022-09-12 20:41:59,086:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:59,149:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:59,165:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:59,198:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:59,218:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:59,250:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:59,269:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:59,285:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:59,300:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:59,331:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:59,331:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:59,355:INFO:Calculating mean and std
2022-09-12 20:41:59,355:INFO:Creating metrics dataframe
2022-09-12 20:41:59,355:INFO:Uploading results into container
2022-09-12 20:41:59,355:INFO:Uploading model into container now
2022-09-12 20:41:59,355:INFO:master_model_container: 2
2022-09-12 20:41:59,355:INFO:display_container: 2
2022-09-12 20:41:59,371:INFO:Lasso(random_state=123)
2022-09-12 20:41:59,371:INFO:create_model() successfully completed......................................
2022-09-12 20:41:59,480:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:59,480:INFO:Creating metrics dataframe
2022-09-12 20:41:59,496:INFO:Initializing Ridge Regression
2022-09-12 20:41:59,496:INFO:Total runtime is 0.01512673298517863 minutes
2022-09-12 20:41:59,512:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:59,512:INFO:Initializing create_model()
2022-09-12 20:41:59,512:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652702D00>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6565B3BB0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:59,512:INFO:Checking exceptions
2022-09-12 20:41:59,512:INFO:Importing libraries
2022-09-12 20:41:59,512:INFO:Copying training dataset
2022-09-12 20:41:59,512:INFO:Defining folds
2022-09-12 20:41:59,512:INFO:Declaring metric variables
2022-09-12 20:41:59,512:INFO:Importing untrained model
2022-09-12 20:41:59,527:INFO:Ridge Regression Imported successfully
2022-09-12 20:41:59,527:INFO:Starting cross validation
2022-09-12 20:41:59,527:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:59,590:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:59,605:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:59,605:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:59,621:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:59,636:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:59,636:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:59,652:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:59,668:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:59,683:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:59,699:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:59,715:INFO:Calculating mean and std
2022-09-12 20:41:59,715:INFO:Creating metrics dataframe
2022-09-12 20:41:59,730:INFO:Uploading results into container
2022-09-12 20:41:59,730:INFO:Uploading model into container now
2022-09-12 20:41:59,730:INFO:master_model_container: 3
2022-09-12 20:41:59,730:INFO:display_container: 2
2022-09-12 20:41:59,730:INFO:Ridge(random_state=123)
2022-09-12 20:41:59,730:INFO:create_model() successfully completed......................................
2022-09-12 20:41:59,840:INFO:SubProcess create_model() end ==================================
2022-09-12 20:41:59,840:INFO:Creating metrics dataframe
2022-09-12 20:41:59,855:INFO:Initializing Elastic Net
2022-09-12 20:41:59,855:INFO:Total runtime is 0.021114846070607506 minutes
2022-09-12 20:41:59,871:INFO:SubProcess create_model() called ==================================
2022-09-12 20:41:59,871:INFO:Initializing create_model()
2022-09-12 20:41:59,871:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652702D00>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6565B3BB0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:41:59,871:INFO:Checking exceptions
2022-09-12 20:41:59,871:INFO:Importing libraries
2022-09-12 20:41:59,871:INFO:Copying training dataset
2022-09-12 20:41:59,871:INFO:Defining folds
2022-09-12 20:41:59,871:INFO:Declaring metric variables
2022-09-12 20:41:59,871:INFO:Importing untrained model
2022-09-12 20:41:59,886:INFO:Elastic Net Imported successfully
2022-09-12 20:41:59,886:INFO:Starting cross validation
2022-09-12 20:41:59,902:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:41:59,949:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:59,949:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:59,980:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:59,996:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:41:59,996:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:00,027:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:00,027:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:00,058:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:00,074:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:00,089:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:00,114:INFO:Calculating mean and std
2022-09-12 20:42:00,117:INFO:Creating metrics dataframe
2022-09-12 20:42:00,124:INFO:Uploading results into container
2022-09-12 20:42:00,126:INFO:Uploading model into container now
2022-09-12 20:42:00,126:INFO:master_model_container: 4
2022-09-12 20:42:00,127:INFO:display_container: 2
2022-09-12 20:42:00,127:INFO:ElasticNet(random_state=123)
2022-09-12 20:42:00,128:INFO:create_model() successfully completed......................................
2022-09-12 20:42:00,250:INFO:SubProcess create_model() end ==================================
2022-09-12 20:42:00,250:INFO:Creating metrics dataframe
2022-09-12 20:42:00,266:INFO:Initializing Least Angle Regression
2022-09-12 20:42:00,266:INFO:Total runtime is 0.027959744135538738 minutes
2022-09-12 20:42:00,266:INFO:SubProcess create_model() called ==================================
2022-09-12 20:42:00,266:INFO:Initializing create_model()
2022-09-12 20:42:00,266:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652702D00>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6565B3BB0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:42:00,266:INFO:Checking exceptions
2022-09-12 20:42:00,266:INFO:Importing libraries
2022-09-12 20:42:00,266:INFO:Copying training dataset
2022-09-12 20:42:00,281:INFO:Defining folds
2022-09-12 20:42:00,281:INFO:Declaring metric variables
2022-09-12 20:42:00,294:INFO:Importing untrained model
2022-09-12 20:42:00,300:INFO:Least Angle Regression Imported successfully
2022-09-12 20:42:00,310:INFO:Starting cross validation
2022-09-12 20:42:00,311:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:42:00,370:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:42:00,374:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:00,378:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:42:00,380:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:00,399:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:42:00,399:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:00,399:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:42:00,415:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:00,415:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:42:00,415:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:00,430:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:42:00,430:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:00,446:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:42:00,446:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:42:00,446:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:00,446:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:00,461:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:42:00,461:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:00,477:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:42:00,477:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:00,493:INFO:Calculating mean and std
2022-09-12 20:42:00,493:INFO:Creating metrics dataframe
2022-09-12 20:42:00,513:INFO:Uploading results into container
2022-09-12 20:42:00,514:INFO:Uploading model into container now
2022-09-12 20:42:00,515:INFO:master_model_container: 5
2022-09-12 20:42:00,515:INFO:display_container: 2
2022-09-12 20:42:00,516:INFO:Lars(random_state=123)
2022-09-12 20:42:00,517:INFO:create_model() successfully completed......................................
2022-09-12 20:42:00,632:INFO:SubProcess create_model() end ==================================
2022-09-12 20:42:00,632:INFO:Creating metrics dataframe
2022-09-12 20:42:00,648:INFO:Initializing Lasso Least Angle Regression
2022-09-12 20:42:00,648:INFO:Total runtime is 0.03432457447052002 minutes
2022-09-12 20:42:00,648:INFO:SubProcess create_model() called ==================================
2022-09-12 20:42:00,648:INFO:Initializing create_model()
2022-09-12 20:42:00,648:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652702D00>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6565B3BB0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:42:00,648:INFO:Checking exceptions
2022-09-12 20:42:00,648:INFO:Importing libraries
2022-09-12 20:42:00,648:INFO:Copying training dataset
2022-09-12 20:42:00,663:INFO:Defining folds
2022-09-12 20:42:00,663:INFO:Declaring metric variables
2022-09-12 20:42:00,663:INFO:Importing untrained model
2022-09-12 20:42:00,678:INFO:Lasso Least Angle Regression Imported successfully
2022-09-12 20:42:00,688:INFO:Starting cross validation
2022-09-12 20:42:00,690:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:42:00,731:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:42:00,731:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:00,747:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:42:00,747:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:00,774:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:42:00,775:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:00,783:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:42:00,783:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:00,783:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:42:00,783:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:00,798:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:42:00,798:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:00,814:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:42:00,814:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:00,830:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:42:00,830:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:00,845:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:42:00,845:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:00,861:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-09-12 20:42:00,861:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:00,877:INFO:Calculating mean and std
2022-09-12 20:42:00,877:INFO:Creating metrics dataframe
2022-09-12 20:42:00,877:INFO:Uploading results into container
2022-09-12 20:42:00,877:INFO:Uploading model into container now
2022-09-12 20:42:00,877:INFO:master_model_container: 6
2022-09-12 20:42:00,877:INFO:display_container: 2
2022-09-12 20:42:00,877:INFO:LassoLars(random_state=123)
2022-09-12 20:42:00,877:INFO:create_model() successfully completed......................................
2022-09-12 20:42:01,002:INFO:SubProcess create_model() end ==================================
2022-09-12 20:42:01,002:INFO:Creating metrics dataframe
2022-09-12 20:42:01,021:INFO:Initializing Orthogonal Matching Pursuit
2022-09-12 20:42:01,021:INFO:Total runtime is 0.04054972330729167 minutes
2022-09-12 20:42:01,035:INFO:SubProcess create_model() called ==================================
2022-09-12 20:42:01,036:INFO:Initializing create_model()
2022-09-12 20:42:01,036:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652702D00>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6565B3BB0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:42:01,036:INFO:Checking exceptions
2022-09-12 20:42:01,039:INFO:Importing libraries
2022-09-12 20:42:01,039:INFO:Copying training dataset
2022-09-12 20:42:01,040:INFO:Defining folds
2022-09-12 20:42:01,040:INFO:Declaring metric variables
2022-09-12 20:42:01,040:INFO:Importing untrained model
2022-09-12 20:42:01,056:INFO:Orthogonal Matching Pursuit Imported successfully
2022-09-12 20:42:01,070:INFO:Starting cross validation
2022-09-12 20:42:01,072:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:42:01,116:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:42:01,132:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:01,148:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:42:01,148:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:01,148:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:42:01,148:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:01,163:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:42:01,179:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:01,179:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:42:01,195:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:01,195:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:42:01,210:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:01,210:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:42:01,226:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:01,226:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:42:01,226:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:01,241:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:42:01,241:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:01,257:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-09-12 20:42:01,257:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:01,273:INFO:Calculating mean and std
2022-09-12 20:42:01,273:INFO:Creating metrics dataframe
2022-09-12 20:42:01,273:INFO:Uploading results into container
2022-09-12 20:42:01,288:INFO:Uploading model into container now
2022-09-12 20:42:01,288:INFO:master_model_container: 7
2022-09-12 20:42:01,288:INFO:display_container: 2
2022-09-12 20:42:01,288:INFO:OrthogonalMatchingPursuit()
2022-09-12 20:42:01,288:INFO:create_model() successfully completed......................................
2022-09-12 20:42:01,415:INFO:SubProcess create_model() end ==================================
2022-09-12 20:42:01,415:INFO:Creating metrics dataframe
2022-09-12 20:42:01,430:INFO:Initializing Bayesian Ridge
2022-09-12 20:42:01,430:INFO:Total runtime is 0.0473654309908549 minutes
2022-09-12 20:42:01,430:INFO:SubProcess create_model() called ==================================
2022-09-12 20:42:01,430:INFO:Initializing create_model()
2022-09-12 20:42:01,430:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652702D00>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6565B3BB0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:42:01,430:INFO:Checking exceptions
2022-09-12 20:42:01,430:INFO:Importing libraries
2022-09-12 20:42:01,430:INFO:Copying training dataset
2022-09-12 20:42:01,430:INFO:Defining folds
2022-09-12 20:42:01,430:INFO:Declaring metric variables
2022-09-12 20:42:01,446:INFO:Importing untrained model
2022-09-12 20:42:01,456:INFO:Bayesian Ridge Imported successfully
2022-09-12 20:42:01,466:INFO:Starting cross validation
2022-09-12 20:42:01,468:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:42:01,511:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:01,534:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:01,550:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:01,565:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:01,565:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:01,597:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:01,597:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:01,612:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:01,628:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:01,628:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:01,644:INFO:Calculating mean and std
2022-09-12 20:42:01,644:INFO:Creating metrics dataframe
2022-09-12 20:42:01,659:INFO:Uploading results into container
2022-09-12 20:42:01,659:INFO:Uploading model into container now
2022-09-12 20:42:01,659:INFO:master_model_container: 8
2022-09-12 20:42:01,659:INFO:display_container: 2
2022-09-12 20:42:01,659:INFO:BayesianRidge()
2022-09-12 20:42:01,659:INFO:create_model() successfully completed......................................
2022-09-12 20:42:01,769:INFO:SubProcess create_model() end ==================================
2022-09-12 20:42:01,769:INFO:Creating metrics dataframe
2022-09-12 20:42:01,784:INFO:Initializing Passive Aggressive Regressor
2022-09-12 20:42:01,784:INFO:Total runtime is 0.05326423645019531 minutes
2022-09-12 20:42:01,796:INFO:SubProcess create_model() called ==================================
2022-09-12 20:42:01,797:INFO:Initializing create_model()
2022-09-12 20:42:01,797:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652702D00>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6565B3BB0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:42:01,797:INFO:Checking exceptions
2022-09-12 20:42:01,799:INFO:Importing libraries
2022-09-12 20:42:01,800:INFO:Copying training dataset
2022-09-12 20:42:01,807:INFO:Defining folds
2022-09-12 20:42:01,807:INFO:Declaring metric variables
2022-09-12 20:42:01,815:INFO:Importing untrained model
2022-09-12 20:42:01,826:INFO:Passive Aggressive Regressor Imported successfully
2022-09-12 20:42:01,831:INFO:Starting cross validation
2022-09-12 20:42:01,831:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:42:01,900:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:01,907:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:01,923:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:01,939:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:01,950:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:01,965:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:01,981:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:01,996:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:02,012:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:02,028:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:02,043:INFO:Calculating mean and std
2022-09-12 20:42:02,043:INFO:Creating metrics dataframe
2022-09-12 20:42:02,043:INFO:Uploading results into container
2022-09-12 20:42:02,043:INFO:Uploading model into container now
2022-09-12 20:42:02,059:INFO:master_model_container: 9
2022-09-12 20:42:02,059:INFO:display_container: 2
2022-09-12 20:42:02,059:INFO:PassiveAggressiveRegressor(random_state=123)
2022-09-12 20:42:02,059:INFO:create_model() successfully completed......................................
2022-09-12 20:42:02,183:INFO:SubProcess create_model() end ==================================
2022-09-12 20:42:02,183:INFO:Creating metrics dataframe
2022-09-12 20:42:02,202:INFO:Initializing Huber Regressor
2022-09-12 20:42:02,203:INFO:Total runtime is 0.060243026415506995 minutes
2022-09-12 20:42:02,205:INFO:SubProcess create_model() called ==================================
2022-09-12 20:42:02,205:INFO:Initializing create_model()
2022-09-12 20:42:02,205:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652702D00>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6565B3BB0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:42:02,205:INFO:Checking exceptions
2022-09-12 20:42:02,205:INFO:Importing libraries
2022-09-12 20:42:02,205:INFO:Copying training dataset
2022-09-12 20:42:02,205:INFO:Defining folds
2022-09-12 20:42:02,205:INFO:Declaring metric variables
2022-09-12 20:42:02,205:INFO:Importing untrained model
2022-09-12 20:42:02,228:INFO:Huber Regressor Imported successfully
2022-09-12 20:42:02,238:INFO:Starting cross validation
2022-09-12 20:42:02,239:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:42:02,298:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:02,314:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:02,335:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:02,350:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:02,350:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:02,365:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:02,381:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:02,396:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:02,412:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:02,428:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:02,459:INFO:Calculating mean and std
2022-09-12 20:42:02,459:INFO:Creating metrics dataframe
2022-09-12 20:42:02,459:INFO:Uploading results into container
2022-09-12 20:42:02,459:INFO:Uploading model into container now
2022-09-12 20:42:02,459:INFO:master_model_container: 10
2022-09-12 20:42:02,459:INFO:display_container: 2
2022-09-12 20:42:02,459:INFO:HuberRegressor()
2022-09-12 20:42:02,459:INFO:create_model() successfully completed......................................
2022-09-12 20:42:02,583:INFO:SubProcess create_model() end ==================================
2022-09-12 20:42:02,583:INFO:Creating metrics dataframe
2022-09-12 20:42:02,614:INFO:Initializing K Neighbors Regressor
2022-09-12 20:42:02,614:INFO:Total runtime is 0.06710309584935506 minutes
2022-09-12 20:42:02,614:INFO:SubProcess create_model() called ==================================
2022-09-12 20:42:02,614:INFO:Initializing create_model()
2022-09-12 20:42:02,614:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652702D00>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6565B3BB0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:42:02,614:INFO:Checking exceptions
2022-09-12 20:42:02,614:INFO:Importing libraries
2022-09-12 20:42:02,614:INFO:Copying training dataset
2022-09-12 20:42:02,614:INFO:Defining folds
2022-09-12 20:42:02,614:INFO:Declaring metric variables
2022-09-12 20:42:02,630:INFO:Importing untrained model
2022-09-12 20:42:02,640:INFO:K Neighbors Regressor Imported successfully
2022-09-12 20:42:02,652:INFO:Starting cross validation
2022-09-12 20:42:02,654:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:42:02,714:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:02,720:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:02,740:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:02,750:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:02,765:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:02,781:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:02,797:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:02,828:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:02,843:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:02,859:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:02,906:INFO:Calculating mean and std
2022-09-12 20:42:02,906:INFO:Creating metrics dataframe
2022-09-12 20:42:02,906:INFO:Uploading results into container
2022-09-12 20:42:02,906:INFO:Uploading model into container now
2022-09-12 20:42:02,906:INFO:master_model_container: 11
2022-09-12 20:42:02,906:INFO:display_container: 2
2022-09-12 20:42:02,906:INFO:KNeighborsRegressor(n_jobs=-1)
2022-09-12 20:42:02,906:INFO:create_model() successfully completed......................................
2022-09-12 20:42:03,050:INFO:SubProcess create_model() end ==================================
2022-09-12 20:42:03,050:INFO:Creating metrics dataframe
2022-09-12 20:42:03,083:INFO:Initializing Decision Tree Regressor
2022-09-12 20:42:03,083:INFO:Total runtime is 0.07490631341934204 minutes
2022-09-12 20:42:03,098:INFO:SubProcess create_model() called ==================================
2022-09-12 20:42:03,098:INFO:Initializing create_model()
2022-09-12 20:42:03,098:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652702D00>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6565B3BB0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:42:03,098:INFO:Checking exceptions
2022-09-12 20:42:03,098:INFO:Importing libraries
2022-09-12 20:42:03,098:INFO:Copying training dataset
2022-09-12 20:42:03,098:INFO:Defining folds
2022-09-12 20:42:03,098:INFO:Declaring metric variables
2022-09-12 20:42:03,114:INFO:Importing untrained model
2022-09-12 20:42:03,114:INFO:Decision Tree Regressor Imported successfully
2022-09-12 20:42:03,136:INFO:Starting cross validation
2022-09-12 20:42:03,138:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:42:03,217:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:03,232:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:03,248:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:03,264:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:03,295:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:03,310:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:03,340:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:03,361:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:03,378:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:03,383:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:03,399:INFO:Calculating mean and std
2022-09-12 20:42:03,399:INFO:Creating metrics dataframe
2022-09-12 20:42:03,415:INFO:Uploading results into container
2022-09-12 20:42:03,415:INFO:Uploading model into container now
2022-09-12 20:42:03,415:INFO:master_model_container: 12
2022-09-12 20:42:03,415:INFO:display_container: 2
2022-09-12 20:42:03,415:INFO:DecisionTreeRegressor(random_state=123)
2022-09-12 20:42:03,415:INFO:create_model() successfully completed......................................
2022-09-12 20:42:03,550:INFO:SubProcess create_model() end ==================================
2022-09-12 20:42:03,550:INFO:Creating metrics dataframe
2022-09-12 20:42:03,565:INFO:Initializing Random Forest Regressor
2022-09-12 20:42:03,565:INFO:Total runtime is 0.08295117219289143 minutes
2022-09-12 20:42:03,581:INFO:SubProcess create_model() called ==================================
2022-09-12 20:42:03,581:INFO:Initializing create_model()
2022-09-12 20:42:03,581:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652702D00>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6565B3BB0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:42:03,581:INFO:Checking exceptions
2022-09-12 20:42:03,581:INFO:Importing libraries
2022-09-12 20:42:03,581:INFO:Copying training dataset
2022-09-12 20:42:03,581:INFO:Defining folds
2022-09-12 20:42:03,581:INFO:Declaring metric variables
2022-09-12 20:42:03,598:INFO:Importing untrained model
2022-09-12 20:42:03,605:INFO:Random Forest Regressor Imported successfully
2022-09-12 20:42:03,616:INFO:Starting cross validation
2022-09-12 20:42:03,616:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:42:04,029:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:04,060:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:04,060:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:04,060:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:04,107:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:04,154:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:04,341:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:04,388:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:04,529:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:04,544:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:04,591:INFO:Calculating mean and std
2022-09-12 20:42:04,591:INFO:Creating metrics dataframe
2022-09-12 20:42:04,591:INFO:Uploading results into container
2022-09-12 20:42:04,591:INFO:Uploading model into container now
2022-09-12 20:42:04,591:INFO:master_model_container: 13
2022-09-12 20:42:04,591:INFO:display_container: 2
2022-09-12 20:42:04,607:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-09-12 20:42:04,607:INFO:create_model() successfully completed......................................
2022-09-12 20:42:04,745:INFO:SubProcess create_model() end ==================================
2022-09-12 20:42:04,745:INFO:Creating metrics dataframe
2022-09-12 20:42:04,761:INFO:Initializing Extra Trees Regressor
2022-09-12 20:42:04,761:INFO:Total runtime is 0.10287863413492837 minutes
2022-09-12 20:42:04,777:INFO:SubProcess create_model() called ==================================
2022-09-12 20:42:04,777:INFO:Initializing create_model()
2022-09-12 20:42:04,777:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652702D00>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6565B3BB0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:42:04,777:INFO:Checking exceptions
2022-09-12 20:42:04,777:INFO:Importing libraries
2022-09-12 20:42:04,777:INFO:Copying training dataset
2022-09-12 20:42:04,777:INFO:Defining folds
2022-09-12 20:42:04,777:INFO:Declaring metric variables
2022-09-12 20:42:04,792:INFO:Importing untrained model
2022-09-12 20:42:04,802:INFO:Extra Trees Regressor Imported successfully
2022-09-12 20:42:04,816:INFO:Starting cross validation
2022-09-12 20:42:04,816:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:42:05,167:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:05,182:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:05,182:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:05,245:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:05,291:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:05,291:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:05,307:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:05,370:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:05,549:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:05,565:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:05,611:INFO:Calculating mean and std
2022-09-12 20:42:05,627:INFO:Creating metrics dataframe
2022-09-12 20:42:05,627:INFO:Uploading results into container
2022-09-12 20:42:05,627:INFO:Uploading model into container now
2022-09-12 20:42:05,627:INFO:master_model_container: 14
2022-09-12 20:42:05,627:INFO:display_container: 2
2022-09-12 20:42:05,627:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-09-12 20:42:05,627:INFO:create_model() successfully completed......................................
2022-09-12 20:42:05,776:INFO:SubProcess create_model() end ==================================
2022-09-12 20:42:05,776:INFO:Creating metrics dataframe
2022-09-12 20:42:05,793:INFO:Initializing AdaBoost Regressor
2022-09-12 20:42:05,794:INFO:Total runtime is 0.12009174426396686 minutes
2022-09-12 20:42:05,799:INFO:SubProcess create_model() called ==================================
2022-09-12 20:42:05,799:INFO:Initializing create_model()
2022-09-12 20:42:05,799:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652702D00>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6565B3BB0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:42:05,800:INFO:Checking exceptions
2022-09-12 20:42:05,802:INFO:Importing libraries
2022-09-12 20:42:05,802:INFO:Copying training dataset
2022-09-12 20:42:05,806:INFO:Defining folds
2022-09-12 20:42:05,807:INFO:Declaring metric variables
2022-09-12 20:42:05,813:INFO:Importing untrained model
2022-09-12 20:42:05,821:INFO:AdaBoost Regressor Imported successfully
2022-09-12 20:42:05,834:INFO:Starting cross validation
2022-09-12 20:42:05,836:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:42:05,976:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:06,063:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:06,063:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:06,114:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:06,131:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:06,137:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:06,154:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:06,172:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:06,192:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:06,275:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:06,300:INFO:Calculating mean and std
2022-09-12 20:42:06,302:INFO:Creating metrics dataframe
2022-09-12 20:42:06,309:INFO:Uploading results into container
2022-09-12 20:42:06,310:INFO:Uploading model into container now
2022-09-12 20:42:06,311:INFO:master_model_container: 15
2022-09-12 20:42:06,311:INFO:display_container: 2
2022-09-12 20:42:06,311:INFO:AdaBoostRegressor(random_state=123)
2022-09-12 20:42:06,311:INFO:create_model() successfully completed......................................
2022-09-12 20:42:06,448:INFO:SubProcess create_model() end ==================================
2022-09-12 20:42:06,448:INFO:Creating metrics dataframe
2022-09-12 20:42:06,477:INFO:Initializing Gradient Boosting Regressor
2022-09-12 20:42:06,478:INFO:Total runtime is 0.13149313529332476 minutes
2022-09-12 20:42:06,485:INFO:SubProcess create_model() called ==================================
2022-09-12 20:42:06,485:INFO:Initializing create_model()
2022-09-12 20:42:06,485:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652702D00>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6565B3BB0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:42:06,486:INFO:Checking exceptions
2022-09-12 20:42:06,489:INFO:Importing libraries
2022-09-12 20:42:06,489:INFO:Copying training dataset
2022-09-12 20:42:06,494:INFO:Defining folds
2022-09-12 20:42:06,494:INFO:Declaring metric variables
2022-09-12 20:42:06,502:INFO:Importing untrained model
2022-09-12 20:42:06,509:INFO:Gradient Boosting Regressor Imported successfully
2022-09-12 20:42:06,520:INFO:Starting cross validation
2022-09-12 20:42:06,522:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:42:06,644:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:06,665:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:06,702:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:06,711:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:06,761:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:06,786:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:06,797:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:06,807:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:06,841:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:06,849:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:06,878:INFO:Calculating mean and std
2022-09-12 20:42:06,881:INFO:Creating metrics dataframe
2022-09-12 20:42:06,888:INFO:Uploading results into container
2022-09-12 20:42:06,888:INFO:Uploading model into container now
2022-09-12 20:42:06,889:INFO:master_model_container: 16
2022-09-12 20:42:06,889:INFO:display_container: 2
2022-09-12 20:42:06,891:INFO:GradientBoostingRegressor(random_state=123)
2022-09-12 20:42:06,892:INFO:create_model() successfully completed......................................
2022-09-12 20:42:07,056:INFO:SubProcess create_model() end ==================================
2022-09-12 20:42:07,056:INFO:Creating metrics dataframe
2022-09-12 20:42:07,076:INFO:Initializing Light Gradient Boosting Machine
2022-09-12 20:42:07,077:INFO:Total runtime is 0.1414785861968994 minutes
2022-09-12 20:42:07,082:INFO:SubProcess create_model() called ==================================
2022-09-12 20:42:07,082:INFO:Initializing create_model()
2022-09-12 20:42:07,082:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652702D00>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6565B3BB0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:42:07,083:INFO:Checking exceptions
2022-09-12 20:42:07,086:INFO:Importing libraries
2022-09-12 20:42:07,087:INFO:Copying training dataset
2022-09-12 20:42:07,095:INFO:Defining folds
2022-09-12 20:42:07,095:INFO:Declaring metric variables
2022-09-12 20:42:07,104:INFO:Importing untrained model
2022-09-12 20:42:07,112:INFO:Light Gradient Boosting Machine Imported successfully
2022-09-12 20:42:07,126:INFO:Starting cross validation
2022-09-12 20:42:07,128:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:42:07,218:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:07,229:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:07,250:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:07,273:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:07,291:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:07,312:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:07,332:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:07,349:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:07,369:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:07,370:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:07,391:INFO:Calculating mean and std
2022-09-12 20:42:07,394:INFO:Creating metrics dataframe
2022-09-12 20:42:07,399:INFO:Uploading results into container
2022-09-12 20:42:07,400:INFO:Uploading model into container now
2022-09-12 20:42:07,401:INFO:master_model_container: 17
2022-09-12 20:42:07,401:INFO:display_container: 2
2022-09-12 20:42:07,401:INFO:LGBMRegressor(random_state=123)
2022-09-12 20:42:07,402:INFO:create_model() successfully completed......................................
2022-09-12 20:42:07,537:INFO:SubProcess create_model() end ==================================
2022-09-12 20:42:07,537:INFO:Creating metrics dataframe
2022-09-12 20:42:07,557:INFO:Initializing Dummy Regressor
2022-09-12 20:42:07,557:INFO:Total runtime is 0.14947076241175333 minutes
2022-09-12 20:42:07,562:INFO:SubProcess create_model() called ==================================
2022-09-12 20:42:07,562:INFO:Initializing create_model()
2022-09-12 20:42:07,562:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652702D00>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6565B3BB0>, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:42:07,563:INFO:Checking exceptions
2022-09-12 20:42:07,565:INFO:Importing libraries
2022-09-12 20:42:07,565:INFO:Copying training dataset
2022-09-12 20:42:07,570:INFO:Defining folds
2022-09-12 20:42:07,570:INFO:Declaring metric variables
2022-09-12 20:42:07,575:INFO:Importing untrained model
2022-09-12 20:42:07,580:INFO:Dummy Regressor Imported successfully
2022-09-12 20:42:07,593:INFO:Starting cross validation
2022-09-12 20:42:07,595:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:42:07,663:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:07,670:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:07,684:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:07,704:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:07,722:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:07,733:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:07,752:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:07,766:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:07,777:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:07,803:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:07,820:INFO:Calculating mean and std
2022-09-12 20:42:07,822:INFO:Creating metrics dataframe
2022-09-12 20:42:07,828:INFO:Uploading results into container
2022-09-12 20:42:07,829:INFO:Uploading model into container now
2022-09-12 20:42:07,830:INFO:master_model_container: 18
2022-09-12 20:42:07,830:INFO:display_container: 2
2022-09-12 20:42:07,831:INFO:DummyRegressor()
2022-09-12 20:42:07,831:INFO:create_model() successfully completed......................................
2022-09-12 20:42:07,965:INFO:SubProcess create_model() end ==================================
2022-09-12 20:42:07,966:INFO:Creating metrics dataframe
2022-09-12 20:42:08,001:INFO:Initializing create_model()
2022-09-12 20:42:08,001:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652702D00>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:42:08,001:INFO:Checking exceptions
2022-09-12 20:42:08,008:INFO:Importing libraries
2022-09-12 20:42:08,008:INFO:Copying training dataset
2022-09-12 20:42:08,011:INFO:Defining folds
2022-09-12 20:42:08,012:INFO:Declaring metric variables
2022-09-12 20:42:08,012:INFO:Importing untrained model
2022-09-12 20:42:08,012:INFO:Declaring custom model
2022-09-12 20:42:08,013:INFO:Huber Regressor Imported successfully
2022-09-12 20:42:08,014:INFO:Cross validation set to False
2022-09-12 20:42:08,015:INFO:Fitting Model
2022-09-12 20:42:08,048:INFO:HuberRegressor()
2022-09-12 20:42:08,048:INFO:create_model() successfully completed......................................
2022-09-12 20:42:08,253:INFO:master_model_container: 18
2022-09-12 20:42:08,254:INFO:display_container: 2
2022-09-12 20:42:08,254:INFO:HuberRegressor()
2022-09-12 20:42:08,255:INFO:compare_models() successfully completed......................................
2022-09-12 20:42:10,455:INFO:Initializing create_model()
2022-09-12 20:42:10,456:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652702D00>, estimator=huber, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:42:10,456:INFO:Checking exceptions
2022-09-12 20:42:10,529:INFO:Importing libraries
2022-09-12 20:42:10,530:INFO:Copying training dataset
2022-09-12 20:42:10,536:INFO:Defining folds
2022-09-12 20:42:10,537:INFO:Declaring metric variables
2022-09-12 20:42:10,546:INFO:Importing untrained model
2022-09-12 20:42:10,556:INFO:Huber Regressor Imported successfully
2022-09-12 20:42:10,570:INFO:Starting cross validation
2022-09-12 20:42:10,572:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:42:10,678:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:10,701:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:10,723:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:10,748:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:10,764:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:10,783:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:10,804:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:10,825:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:10,845:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:10,876:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:11,019:INFO:Calculating mean and std
2022-09-12 20:42:11,021:INFO:Creating metrics dataframe
2022-09-12 20:42:11,035:INFO:Finalizing model
2022-09-12 20:42:11,110:INFO:Uploading results into container
2022-09-12 20:42:11,111:INFO:Uploading model into container now
2022-09-12 20:42:11,139:INFO:master_model_container: 19
2022-09-12 20:42:11,139:INFO:display_container: 3
2022-09-12 20:42:11,140:INFO:HuberRegressor()
2022-09-12 20:42:11,141:INFO:create_model() successfully completed......................................
2022-09-12 20:42:17,449:INFO:Initializing tune_model()
2022-09-12 20:42:17,449:INFO:tune_model(estimator=HuberRegressor(), fold=None, round=4, n_iter=50, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652702D00>)
2022-09-12 20:42:17,449:INFO:Checking exceptions
2022-09-12 20:42:17,511:INFO:Copying training dataset
2022-09-12 20:42:17,530:INFO:Checking base model
2022-09-12 20:42:17,530:INFO:Base model : Huber Regressor
2022-09-12 20:42:17,551:INFO:Declaring metric variables
2022-09-12 20:42:17,558:INFO:Defining Hyperparameters
2022-09-12 20:42:17,716:INFO:Tuning with n_jobs=-1
2022-09-12 20:42:17,716:INFO:Initializing RandomizedSearchCV
2022-09-12 20:42:17,869:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:17,869:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:17,885:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:17,896:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:17,952:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,005:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,021:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,066:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,083:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,083:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,115:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,146:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,162:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,177:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,224:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,224:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,224:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,240:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,299:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,315:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,331:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,331:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,412:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,428:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,459:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,459:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,493:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,493:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,557:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,573:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,588:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,588:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,604:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,573:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,635:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,651:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,682:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,682:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,698:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,713:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,745:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,760:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,776:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,792:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,823:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,823:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,838:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,854:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,870:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,885:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,901:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,948:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,948:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,948:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:18,979:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,044:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,057:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,066:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,083:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,098:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,114:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,140:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,150:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,181:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,197:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,213:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,228:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,244:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,260:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,369:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,369:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,400:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,431:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,431:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,463:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,494:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:42:19,494:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,525:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,525:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:42:19,525:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,541:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,556:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,588:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:42:19,588:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,603:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,634:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,650:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,666:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,681:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,713:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,713:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:42:19,713:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,713:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,775:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,791:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,806:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,822:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,822:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,837:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,853:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,853:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,869:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,900:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,900:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,916:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,931:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,931:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,962:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:19,994:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,009:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,025:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,041:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,041:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,072:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,087:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,103:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,119:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,134:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,150:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,150:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,166:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,181:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,197:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,228:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,259:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,275:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,290:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,306:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,306:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,306:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,353:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,368:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,400:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,415:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,446:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,446:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,469:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,476:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,482:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,498:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,516:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,581:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,611:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,643:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,683:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,700:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,722:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,725:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,751:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,751:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,766:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,797:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,860:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,876:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,891:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,922:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,922:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,922:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,938:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,938:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,954:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:20,985:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,000:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,032:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,047:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,063:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,094:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,110:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,110:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,125:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,172:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,188:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,188:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,266:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,266:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,282:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,313:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,313:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,313:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,329:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,360:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,375:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,375:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,422:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,422:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,438:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,454:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,485:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,485:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,501:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,532:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,532:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,548:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,563:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,579:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,594:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,594:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,610:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,632:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,642:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,642:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,688:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,704:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,720:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,720:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,751:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,767:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,782:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,782:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,798:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,813:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,813:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,845:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,876:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,892:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,923:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,923:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,923:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,938:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:21,985:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,001:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,032:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,032:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,048:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,048:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,063:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,063:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,110:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,126:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,141:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,157:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,157:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,173:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,204:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,237:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,268:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,268:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,284:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,299:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,299:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,315:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,330:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,346:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,377:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,393:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,393:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,424:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,424:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,440:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,455:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,487:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,502:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,518:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,518:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,534:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,565:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,565:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,596:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,612:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,628:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,659:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,659:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,701:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,759:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,778:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,783:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,816:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,832:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,832:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,847:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,883:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,899:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,899:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,899:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,914:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,945:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,977:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,992:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:22,992:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,024:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,039:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,083:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,107:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,108:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,140:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,141:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,160:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,174:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,226:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,228:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,260:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,277:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,277:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,297:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,309:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,316:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,332:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,347:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,385:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,410:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,416:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,437:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,450:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,464:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,474:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,483:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,514:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,530:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,545:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,545:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,577:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,577:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,577:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,592:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,624:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,655:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,670:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,670:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,702:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,717:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,717:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,749:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,795:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,905:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,905:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,936:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,936:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:42:23,936:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,952:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,967:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,983:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:23,998:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:42:23,998:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,030:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,045:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,061:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,061:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,092:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,108:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,139:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,155:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,170:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,186:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,233:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,248:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-09-12 20:42:24,248:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,248:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,248:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,295:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,342:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,342:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,358:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,358:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,389:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,405:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,405:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,436:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,436:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,483:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,483:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,499:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,514:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,530:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,561:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,577:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,592:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,592:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,624:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,624:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,639:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,670:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,686:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,686:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,702:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,733:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,749:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,749:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,764:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,804:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,814:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,827:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,842:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,858:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,858:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,874:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,889:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,889:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,936:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,952:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,983:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:24,999:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,014:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,030:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,045:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,045:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,045:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,061:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,108:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,108:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,139:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,155:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,155:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,170:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,202:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,215:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,266:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,270:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,290:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,294:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,314:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,341:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,350:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,376:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,400:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,415:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,415:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,446:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,462:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,462:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,482:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,498:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,514:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,535:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,557:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,580:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,593:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,599:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,614:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,650:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,650:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,650:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,680:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,698:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,714:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,739:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,740:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,772:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,774:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,783:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,809:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,816:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,831:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,847:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,874:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,878:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,903:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,932:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,947:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,964:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,979:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,981:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,982:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:25,998:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,050:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,080:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,106:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,116:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,116:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,132:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,132:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,132:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,197:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,203:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,215:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,239:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,249:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,249:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,249:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,265:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,307:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,332:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,347:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,382:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,382:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,398:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,398:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,414:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,433:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,437:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,465:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,497:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,497:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,512:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,528:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,528:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,543:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,575:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,606:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,606:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,637:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,637:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,656:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,707:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,707:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,749:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,749:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,765:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,782:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,792:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,793:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,832:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,845:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,860:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,876:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,876:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:26,907:INFO:best_params: {'actual_estimator__fit_intercept': True, 'actual_estimator__epsilon': 1.35, 'actual_estimator__alpha': 0.15}
2022-09-12 20:42:26,923:INFO:Hyperparameter search completed
2022-09-12 20:42:26,923:INFO:SubProcess create_model() called ==================================
2022-09-12 20:42:26,923:INFO:Initializing create_model()
2022-09-12 20:42:26,923:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652702D00>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F6560EDD90>, model_only=True, return_train_score=False, kwargs={'fit_intercept': True, 'epsilon': 1.35, 'alpha': 0.15})
2022-09-12 20:42:26,923:INFO:Checking exceptions
2022-09-12 20:42:26,933:INFO:Importing libraries
2022-09-12 20:42:26,933:INFO:Copying training dataset
2022-09-12 20:42:26,940:INFO:Defining folds
2022-09-12 20:42:26,940:INFO:Declaring metric variables
2022-09-12 20:42:26,945:INFO:Importing untrained model
2022-09-12 20:42:26,945:INFO:Declaring custom model
2022-09-12 20:42:26,955:INFO:Huber Regressor Imported successfully
2022-09-12 20:42:26,974:INFO:Starting cross validation
2022-09-12 20:42:26,976:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:42:27,062:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:27,097:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:27,121:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:27,141:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:27,163:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:27,181:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:27,206:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:27,210:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:27,226:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:27,242:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:27,273:INFO:Calculating mean and std
2022-09-12 20:42:27,273:INFO:Creating metrics dataframe
2022-09-12 20:42:27,273:INFO:Finalizing model
2022-09-12 20:42:27,354:INFO:Uploading results into container
2022-09-12 20:42:27,356:INFO:Uploading model into container now
2022-09-12 20:42:27,358:INFO:master_model_container: 20
2022-09-12 20:42:27,358:INFO:display_container: 4
2022-09-12 20:42:27,359:INFO:HuberRegressor(alpha=0.15)
2022-09-12 20:42:27,360:INFO:create_model() successfully completed......................................
2022-09-12 20:42:27,527:INFO:SubProcess create_model() end ==================================
2022-09-12 20:42:27,527:INFO:choose_better activated
2022-09-12 20:42:27,536:INFO:SubProcess create_model() called ==================================
2022-09-12 20:42:27,536:INFO:Initializing create_model()
2022-09-12 20:42:27,537:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652702D00>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-09-12 20:42:27,537:INFO:Checking exceptions
2022-09-12 20:42:27,545:INFO:Importing libraries
2022-09-12 20:42:27,545:INFO:Copying training dataset
2022-09-12 20:42:27,549:INFO:Defining folds
2022-09-12 20:42:27,549:INFO:Declaring metric variables
2022-09-12 20:42:27,550:INFO:Importing untrained model
2022-09-12 20:42:27,550:INFO:Declaring custom model
2022-09-12 20:42:27,550:INFO:Huber Regressor Imported successfully
2022-09-12 20:42:27,551:INFO:Starting cross validation
2022-09-12 20:42:27,552:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-12 20:42:27,626:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:27,658:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:27,674:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:27,692:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:27,714:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:27,737:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:27,758:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:27,774:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:27,793:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:27,802:WARNING:C:\Users\saint\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-09-12 20:42:27,827:INFO:Calculating mean and std
2022-09-12 20:42:27,827:INFO:Creating metrics dataframe
2022-09-12 20:42:27,831:INFO:Finalizing model
2022-09-12 20:42:27,863:INFO:Uploading results into container
2022-09-12 20:42:27,864:INFO:Uploading model into container now
2022-09-12 20:42:27,865:INFO:master_model_container: 21
2022-09-12 20:42:27,865:INFO:display_container: 5
2022-09-12 20:42:27,865:INFO:HuberRegressor()
2022-09-12 20:42:27,865:INFO:create_model() successfully completed......................................
2022-09-12 20:42:28,001:INFO:SubProcess create_model() end ==================================
2022-09-12 20:42:28,002:INFO:HuberRegressor() result for R2 is -1.5037
2022-09-12 20:42:28,003:INFO:HuberRegressor(alpha=0.15) result for R2 is -1.4706
2022-09-12 20:42:28,003:INFO:HuberRegressor(alpha=0.15) is best model
2022-09-12 20:42:28,003:INFO:choose_better completed
2022-09-12 20:42:28,017:INFO:master_model_container: 21
2022-09-12 20:42:28,017:INFO:display_container: 4
2022-09-12 20:42:28,018:INFO:HuberRegressor(alpha=0.15)
2022-09-12 20:42:28,018:INFO:tune_model() successfully completed......................................
2022-09-12 20:42:36,035:INFO:Initializing evaluate_model()
2022-09-12 20:42:36,035:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652702D00>, estimator=HuberRegressor(alpha=0.15), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2022-09-12 20:42:36,073:INFO:Initializing plot_model()
2022-09-12 20:42:36,074:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=HuberRegressor(alpha=0.15), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652702D00>, system=True)
2022-09-12 20:42:36,074:INFO:Checking exceptions
2022-09-12 20:42:36,079:INFO:Preloading libraries
2022-09-12 20:42:36,080:INFO:Copying training dataset
2022-09-12 20:42:36,080:INFO:Plot type: pipeline
2022-09-12 20:42:36,198:INFO:Visual Rendered Successfully
2022-09-12 20:42:36,307:INFO:plot_model() successfully completed......................................
2022-09-12 20:42:40,536:INFO:Initializing predict_model()
2022-09-12 20:42:40,537:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F652702D00>, estimator=HuberRegressor(alpha=0.15), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001F652608A60>)
2022-09-12 20:42:40,537:INFO:Checking exceptions
2022-09-12 20:42:40,538:INFO:Preloading libraries
2022-09-23 12:44:09,929:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-09-23 12:44:09,931:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-09-23 12:44:09,933:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-09-23 12:44:09,934:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-09-24 20:41:14,006:INFO:PyCaret Supervised Module
2022-09-24 20:41:14,006:INFO:ML Usecase: regression
2022-09-24 20:41:14,006:INFO:version 2.3.10
2022-09-24 20:41:14,006:INFO:Initializing setup()
2022-09-24 20:41:14,006:INFO:setup(target=mpy, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-09-24 20:41:14,006:INFO:Checking environment
2022-09-24 20:41:14,006:INFO:python_version: 3.8.13
2022-09-24 20:41:14,006:INFO:python_build: ('default', 'Mar 28 2022 06:59:08')
2022-09-24 20:41:14,006:INFO:machine: AMD64
2022-09-24 20:41:14,006:INFO:platform: Windows-10-10.0.22000-SP0
2022-09-24 20:41:14,006:INFO:Memory: svmem(total=12710350848, available=3334893568, percent=73.8, used=9375457280, free=3334893568)
2022-09-24 20:41:14,006:INFO:Physical Core: 4
2022-09-24 20:41:14,006:INFO:Logical Core: 8
2022-09-24 20:41:14,006:INFO:Checking libraries
2022-09-24 20:41:14,006:INFO:pd==1.4.4
2022-09-24 20:41:14,006:INFO:numpy==1.20.3
2022-09-24 20:41:14,006:INFO:sklearn==0.23.2
2022-09-24 20:41:14,006:INFO:lightgbm==3.3.2
2022-09-24 20:41:14,006:WARNING:catboost not found
2022-09-24 20:41:14,006:WARNING:xgboost not found
2022-09-24 20:41:14,006:INFO:mlflow==1.29.0
2022-09-24 20:41:14,006:INFO:Checking Exceptions
2022-09-24 20:41:14,006:INFO:Declaring global variables
2022-09-24 20:41:14,006:INFO:USI: d438
2022-09-24 20:41:14,006:INFO:pycaret_globals: {'create_model_container', '_all_models', 'fold_groups_param', '_ml_usecase', 'dashboard_logger', 'logging_param', 'display_container', 'log_plots_param', 'target_param', 'seed', 'gpu_param', 'fix_imbalance_param', 'fold_generator', 'fold_groups_param_full', 'fold_shuffle_param', 'y_test', '_available_plots', 'pycaret_globals', 'fold_param', 'transform_target_method_param', 'USI', 'stratify_param', 'iterative_imputation_iters_param', 'X_train', 'exp_name_log', '_gpu_n_jobs_param', 'y_train', 'fix_imbalance_method_param', 'master_model_container', 'data_before_preprocess', 'X', 'html_param', 'imputation_regressor', '_all_models_internal', 'imputation_classifier', 'X_test', 'transform_target_param', '_all_metrics', '_internal_pipeline', 'experiment__', 'prep_pipe', 'y', 'n_jobs_param'}
2022-09-24 20:41:14,006:INFO:Preparing display monitor
2022-09-24 20:41:14,006:INFO:Preparing display monitor
2022-09-24 20:41:14,041:INFO:Importing libraries
2022-09-24 20:41:14,041:INFO:Copying data for preprocessing
2022-09-24 20:41:14,055:INFO:Declaring preprocessing parameters
2022-09-24 20:41:14,061:INFO:Creating preprocessing pipeline
2022-09-24 20:41:14,072:INFO:Preprocessing pipeline created successfully
2022-09-24 20:41:14,072:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-09-24 20:41:14,072:INFO:Creating global containers
2022-09-24 20:41:14,072:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-09-24 20:41:16,474:WARNING:Couldn't import xgboost.XGBRegressor
2022-09-24 20:41:16,474:WARNING:Couldn't import catboost.CatBoostRegressor
2022-09-24 20:41:16,718:WARNING:Couldn't import xgboost.XGBRegressor
2022-09-24 20:41:16,718:WARNING:Couldn't import catboost.CatBoostRegressor
2022-09-24 20:41:16,718:INFO:Creating grid variables
2022-09-24 20:41:16,749:INFO:create_model_container: 0
2022-09-24 20:41:16,749:INFO:master_model_container: 0
2022-09-24 20:41:16,749:INFO:display_container: 1
2022-09-24 20:41:16,765:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='mpy',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='me...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='mpy')),
                ('fix_perfect', Remove_100(target='mpy')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-09-24 20:41:16,765:INFO:setup() succesfully completed......................................
2022-09-24 20:41:23,993:INFO:Initializing compare_models()
2022-09-24 20:41:23,993:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2022-09-24 20:41:23,993:INFO:Checking exceptions
2022-09-24 20:41:23,993:INFO:Preparing display monitor
2022-09-24 20:41:23,993:INFO:Preparing display monitor
2022-09-24 20:41:24,060:INFO:Initializing Linear Regression
2022-09-24 20:41:24,061:INFO:Total runtime is 1.6689300537109375e-05 minutes
2022-09-24 20:41:24,086:INFO:SubProcess create_model() called ==================================
2022-09-24 20:41:24,086:INFO:Initializing create_model()
2022-09-24 20:41:24,087:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AC25AEE0>, return_train_score=False, kwargs={})
2022-09-24 20:41:24,087:INFO:Checking exceptions
2022-09-24 20:41:24,087:INFO:Importing libraries
2022-09-24 20:41:24,088:INFO:Copying training dataset
2022-09-24 20:41:24,090:INFO:Defining folds
2022-09-24 20:41:24,090:INFO:Declaring metric variables
2022-09-24 20:41:24,112:INFO:Importing untrained model
2022-09-24 20:41:24,135:INFO:Linear Regression Imported succesfully
2022-09-24 20:41:24,172:INFO:Starting cross validation
2022-09-24 20:41:24,187:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:41:38,210:INFO:Calculating mean and std
2022-09-24 20:41:38,212:INFO:Creating metrics dataframe
2022-09-24 20:41:38,221:INFO:Uploading results into container
2022-09-24 20:41:38,222:INFO:Uploading model into container now
2022-09-24 20:41:38,222:INFO:create_model_container: 1
2022-09-24 20:41:38,222:INFO:master_model_container: 1
2022-09-24 20:41:38,223:INFO:display_container: 2
2022-09-24 20:41:38,223:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2022-09-24 20:41:38,223:INFO:create_model() succesfully completed......................................
2022-09-24 20:41:38,362:INFO:SubProcess create_model() end ==================================
2022-09-24 20:41:38,363:INFO:Creating metrics dataframe
2022-09-24 20:41:38,379:INFO:Initializing Lasso Regression
2022-09-24 20:41:38,379:INFO:Total runtime is 0.23864977359771727 minutes
2022-09-24 20:41:38,403:INFO:SubProcess create_model() called ==================================
2022-09-24 20:41:38,404:INFO:Initializing create_model()
2022-09-24 20:41:38,405:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AC25AEE0>, return_train_score=False, kwargs={})
2022-09-24 20:41:38,405:INFO:Checking exceptions
2022-09-24 20:41:38,406:INFO:Importing libraries
2022-09-24 20:41:38,406:INFO:Copying training dataset
2022-09-24 20:41:38,408:INFO:Defining folds
2022-09-24 20:41:38,408:INFO:Declaring metric variables
2022-09-24 20:41:38,428:INFO:Importing untrained model
2022-09-24 20:41:38,448:INFO:Lasso Regression Imported succesfully
2022-09-24 20:41:38,488:INFO:Starting cross validation
2022-09-24 20:41:38,490:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:41:38,612:INFO:Calculating mean and std
2022-09-24 20:41:38,613:INFO:Creating metrics dataframe
2022-09-24 20:41:38,624:INFO:Uploading results into container
2022-09-24 20:41:38,624:INFO:Uploading model into container now
2022-09-24 20:41:38,625:INFO:create_model_container: 2
2022-09-24 20:41:38,625:INFO:master_model_container: 2
2022-09-24 20:41:38,625:INFO:display_container: 2
2022-09-24 20:41:38,626:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=123,
      selection='cyclic', tol=0.0001, warm_start=False)
2022-09-24 20:41:38,626:INFO:create_model() succesfully completed......................................
2022-09-24 20:41:38,769:INFO:SubProcess create_model() end ==================================
2022-09-24 20:41:38,769:INFO:Creating metrics dataframe
2022-09-24 20:41:38,789:INFO:Initializing Ridge Regression
2022-09-24 20:41:38,789:INFO:Total runtime is 0.24548898537953692 minutes
2022-09-24 20:41:38,808:INFO:SubProcess create_model() called ==================================
2022-09-24 20:41:38,809:INFO:Initializing create_model()
2022-09-24 20:41:38,810:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AC25AEE0>, return_train_score=False, kwargs={})
2022-09-24 20:41:38,810:INFO:Checking exceptions
2022-09-24 20:41:38,811:INFO:Importing libraries
2022-09-24 20:41:38,811:INFO:Copying training dataset
2022-09-24 20:41:38,813:INFO:Defining folds
2022-09-24 20:41:38,814:INFO:Declaring metric variables
2022-09-24 20:41:38,834:INFO:Importing untrained model
2022-09-24 20:41:38,856:INFO:Ridge Regression Imported succesfully
2022-09-24 20:41:38,899:INFO:Starting cross validation
2022-09-24 20:41:38,900:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:41:39,015:INFO:Calculating mean and std
2022-09-24 20:41:39,016:INFO:Creating metrics dataframe
2022-09-24 20:41:39,024:INFO:Uploading results into container
2022-09-24 20:41:39,024:INFO:Uploading model into container now
2022-09-24 20:41:39,024:INFO:create_model_container: 3
2022-09-24 20:41:39,025:INFO:master_model_container: 3
2022-09-24 20:41:39,025:INFO:display_container: 2
2022-09-24 20:41:39,026:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=123, solver='auto', tol=0.001)
2022-09-24 20:41:39,026:INFO:create_model() succesfully completed......................................
2022-09-24 20:41:39,141:INFO:SubProcess create_model() end ==================================
2022-09-24 20:41:39,142:INFO:Creating metrics dataframe
2022-09-24 20:41:39,159:INFO:Initializing Elastic Net
2022-09-24 20:41:39,160:INFO:Total runtime is 0.25167646010716754 minutes
2022-09-24 20:41:39,173:INFO:SubProcess create_model() called ==================================
2022-09-24 20:41:39,174:INFO:Initializing create_model()
2022-09-24 20:41:39,174:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AC25AEE0>, return_train_score=False, kwargs={})
2022-09-24 20:41:39,175:INFO:Checking exceptions
2022-09-24 20:41:39,175:INFO:Importing libraries
2022-09-24 20:41:39,176:INFO:Copying training dataset
2022-09-24 20:41:39,177:INFO:Defining folds
2022-09-24 20:41:39,177:INFO:Declaring metric variables
2022-09-24 20:41:39,193:INFO:Importing untrained model
2022-09-24 20:41:39,209:INFO:Elastic Net Imported succesfully
2022-09-24 20:41:39,248:INFO:Starting cross validation
2022-09-24 20:41:39,249:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:41:39,340:INFO:Calculating mean and std
2022-09-24 20:41:39,341:INFO:Creating metrics dataframe
2022-09-24 20:41:39,348:INFO:Uploading results into container
2022-09-24 20:41:39,348:INFO:Uploading model into container now
2022-09-24 20:41:39,348:INFO:create_model_container: 4
2022-09-24 20:41:39,349:INFO:master_model_container: 4
2022-09-24 20:41:39,349:INFO:display_container: 2
2022-09-24 20:41:39,351:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=123, selection='cyclic', tol=0.0001, warm_start=False)
2022-09-24 20:41:39,351:INFO:create_model() succesfully completed......................................
2022-09-24 20:41:39,470:INFO:SubProcess create_model() end ==================================
2022-09-24 20:41:39,471:INFO:Creating metrics dataframe
2022-09-24 20:41:39,490:INFO:Initializing Least Angle Regression
2022-09-24 20:41:39,490:INFO:Total runtime is 0.25717118581136067 minutes
2022-09-24 20:41:39,506:INFO:SubProcess create_model() called ==================================
2022-09-24 20:41:39,507:INFO:Initializing create_model()
2022-09-24 20:41:39,507:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AC25AEE0>, return_train_score=False, kwargs={})
2022-09-24 20:41:39,507:INFO:Checking exceptions
2022-09-24 20:41:39,508:INFO:Importing libraries
2022-09-24 20:41:39,508:INFO:Copying training dataset
2022-09-24 20:41:39,510:INFO:Defining folds
2022-09-24 20:41:39,511:INFO:Declaring metric variables
2022-09-24 20:41:39,531:INFO:Importing untrained model
2022-09-24 20:41:39,555:INFO:Least Angle Regression Imported succesfully
2022-09-24 20:41:39,595:INFO:Starting cross validation
2022-09-24 20:41:39,596:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:41:39,724:INFO:Calculating mean and std
2022-09-24 20:41:39,740:INFO:Creating metrics dataframe
2022-09-24 20:41:39,740:INFO:Uploading results into container
2022-09-24 20:41:39,740:INFO:Uploading model into container now
2022-09-24 20:41:39,740:INFO:create_model_container: 5
2022-09-24 20:41:39,740:INFO:master_model_container: 5
2022-09-24 20:41:39,740:INFO:display_container: 2
2022-09-24 20:41:39,755:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize=True, precompute='auto',
     random_state=123, verbose=False)
2022-09-24 20:41:39,755:INFO:create_model() succesfully completed......................................
2022-09-24 20:41:39,903:INFO:SubProcess create_model() end ==================================
2022-09-24 20:41:39,903:INFO:Creating metrics dataframe
2022-09-24 20:41:39,934:INFO:Initializing Lasso Least Angle Regression
2022-09-24 20:41:39,934:INFO:Total runtime is 0.2645807107289632 minutes
2022-09-24 20:41:39,960:INFO:SubProcess create_model() called ==================================
2022-09-24 20:41:39,961:INFO:Initializing create_model()
2022-09-24 20:41:39,961:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AC25AEE0>, return_train_score=False, kwargs={})
2022-09-24 20:41:39,962:INFO:Checking exceptions
2022-09-24 20:41:39,962:INFO:Importing libraries
2022-09-24 20:41:39,962:INFO:Copying training dataset
2022-09-24 20:41:39,965:INFO:Defining folds
2022-09-24 20:41:39,965:INFO:Declaring metric variables
2022-09-24 20:41:39,984:INFO:Importing untrained model
2022-09-24 20:41:40,007:INFO:Lasso Least Angle Regression Imported succesfully
2022-09-24 20:41:40,049:INFO:Starting cross validation
2022-09-24 20:41:40,051:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:41:40,166:INFO:Calculating mean and std
2022-09-24 20:41:40,181:INFO:Creating metrics dataframe
2022-09-24 20:41:40,181:INFO:Uploading results into container
2022-09-24 20:41:40,181:INFO:Uploading model into container now
2022-09-24 20:41:40,181:INFO:create_model_container: 6
2022-09-24 20:41:40,181:INFO:master_model_container: 6
2022-09-24 20:41:40,181:INFO:display_container: 2
2022-09-24 20:41:40,181:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize=True,
          positive=False, precompute='auto', random_state=123, verbose=False)
2022-09-24 20:41:40,181:INFO:create_model() succesfully completed......................................
2022-09-24 20:41:40,303:INFO:SubProcess create_model() end ==================================
2022-09-24 20:41:40,303:INFO:Creating metrics dataframe
2022-09-24 20:41:40,319:INFO:Initializing Orthogonal Matching Pursuit
2022-09-24 20:41:40,319:INFO:Total runtime is 0.27098687887191775 minutes
2022-09-24 20:41:40,338:INFO:SubProcess create_model() called ==================================
2022-09-24 20:41:40,339:INFO:Initializing create_model()
2022-09-24 20:41:40,339:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AC25AEE0>, return_train_score=False, kwargs={})
2022-09-24 20:41:40,339:INFO:Checking exceptions
2022-09-24 20:41:40,340:INFO:Importing libraries
2022-09-24 20:41:40,340:INFO:Copying training dataset
2022-09-24 20:41:40,342:INFO:Defining folds
2022-09-24 20:41:40,342:INFO:Declaring metric variables
2022-09-24 20:41:40,356:INFO:Importing untrained model
2022-09-24 20:41:40,375:INFO:Orthogonal Matching Pursuit Imported succesfully
2022-09-24 20:41:40,418:INFO:Starting cross validation
2022-09-24 20:41:40,419:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:41:40,519:INFO:Calculating mean and std
2022-09-24 20:41:40,519:INFO:Creating metrics dataframe
2022-09-24 20:41:40,519:INFO:Uploading results into container
2022-09-24 20:41:40,519:INFO:Uploading model into container now
2022-09-24 20:41:40,519:INFO:create_model_container: 7
2022-09-24 20:41:40,519:INFO:master_model_container: 7
2022-09-24 20:41:40,519:INFO:display_container: 2
2022-09-24 20:41:40,534:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None)
2022-09-24 20:41:40,534:INFO:create_model() succesfully completed......................................
2022-09-24 20:41:40,638:INFO:SubProcess create_model() end ==================================
2022-09-24 20:41:40,638:INFO:Creating metrics dataframe
2022-09-24 20:41:40,669:INFO:Initializing Bayesian Ridge
2022-09-24 20:41:40,669:INFO:Total runtime is 0.2768275817235311 minutes
2022-09-24 20:41:40,693:INFO:SubProcess create_model() called ==================================
2022-09-24 20:41:40,694:INFO:Initializing create_model()
2022-09-24 20:41:40,695:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AC25AEE0>, return_train_score=False, kwargs={})
2022-09-24 20:41:40,695:INFO:Checking exceptions
2022-09-24 20:41:40,695:INFO:Importing libraries
2022-09-24 20:41:40,696:INFO:Copying training dataset
2022-09-24 20:41:40,698:INFO:Defining folds
2022-09-24 20:41:40,699:INFO:Declaring metric variables
2022-09-24 20:41:40,713:INFO:Importing untrained model
2022-09-24 20:41:40,735:INFO:Bayesian Ridge Imported succesfully
2022-09-24 20:41:40,771:INFO:Starting cross validation
2022-09-24 20:41:40,772:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:41:40,869:INFO:Calculating mean and std
2022-09-24 20:41:40,869:INFO:Creating metrics dataframe
2022-09-24 20:41:40,869:INFO:Uploading results into container
2022-09-24 20:41:40,869:INFO:Uploading model into container now
2022-09-24 20:41:40,869:INFO:create_model_container: 8
2022-09-24 20:41:40,869:INFO:master_model_container: 8
2022-09-24 20:41:40,869:INFO:display_container: 2
2022-09-24 20:41:40,869:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False)
2022-09-24 20:41:40,869:INFO:create_model() succesfully completed......................................
2022-09-24 20:41:40,997:INFO:SubProcess create_model() end ==================================
2022-09-24 20:41:40,997:INFO:Creating metrics dataframe
2022-09-24 20:41:41,006:INFO:Initializing Passive Aggressive Regressor
2022-09-24 20:41:41,006:INFO:Total runtime is 0.28243237336476645 minutes
2022-09-24 20:41:41,032:INFO:SubProcess create_model() called ==================================
2022-09-24 20:41:41,032:INFO:Initializing create_model()
2022-09-24 20:41:41,032:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AC25AEE0>, return_train_score=False, kwargs={})
2022-09-24 20:41:41,032:INFO:Checking exceptions
2022-09-24 20:41:41,032:INFO:Importing libraries
2022-09-24 20:41:41,033:INFO:Copying training dataset
2022-09-24 20:41:41,034:INFO:Defining folds
2022-09-24 20:41:41,034:INFO:Declaring metric variables
2022-09-24 20:41:41,048:INFO:Importing untrained model
2022-09-24 20:41:41,062:INFO:Passive Aggressive Regressor Imported succesfully
2022-09-24 20:41:41,095:INFO:Starting cross validation
2022-09-24 20:41:41,096:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:41:41,169:INFO:Calculating mean and std
2022-09-24 20:41:41,185:INFO:Creating metrics dataframe
2022-09-24 20:41:41,185:INFO:Uploading results into container
2022-09-24 20:41:41,185:INFO:Uploading model into container now
2022-09-24 20:41:41,185:INFO:create_model_container: 9
2022-09-24 20:41:41,185:INFO:master_model_container: 9
2022-09-24 20:41:41,185:INFO:display_container: 2
2022-09-24 20:41:41,185:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=123, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-09-24 20:41:41,185:INFO:create_model() succesfully completed......................................
2022-09-24 20:41:41,288:INFO:SubProcess create_model() end ==================================
2022-09-24 20:41:41,288:INFO:Creating metrics dataframe
2022-09-24 20:41:41,319:INFO:Initializing Huber Regressor
2022-09-24 20:41:41,319:INFO:Total runtime is 0.2876590331395467 minutes
2022-09-24 20:41:41,336:INFO:SubProcess create_model() called ==================================
2022-09-24 20:41:41,337:INFO:Initializing create_model()
2022-09-24 20:41:41,337:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AC25AEE0>, return_train_score=False, kwargs={})
2022-09-24 20:41:41,337:INFO:Checking exceptions
2022-09-24 20:41:41,338:INFO:Importing libraries
2022-09-24 20:41:41,338:INFO:Copying training dataset
2022-09-24 20:41:41,340:INFO:Defining folds
2022-09-24 20:41:41,340:INFO:Declaring metric variables
2022-09-24 20:41:41,358:INFO:Importing untrained model
2022-09-24 20:41:41,369:INFO:Huber Regressor Imported succesfully
2022-09-24 20:41:41,409:INFO:Starting cross validation
2022-09-24 20:41:41,411:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:41:41,597:INFO:Calculating mean and std
2022-09-24 20:41:41,597:INFO:Creating metrics dataframe
2022-09-24 20:41:41,622:INFO:Uploading results into container
2022-09-24 20:41:41,623:INFO:Uploading model into container now
2022-09-24 20:41:41,623:INFO:create_model_container: 10
2022-09-24 20:41:41,623:INFO:master_model_container: 10
2022-09-24 20:41:41,624:INFO:display_container: 2
2022-09-24 20:41:41,625:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-24 20:41:41,625:INFO:create_model() succesfully completed......................................
2022-09-24 20:41:41,736:INFO:SubProcess create_model() end ==================================
2022-09-24 20:41:41,736:INFO:Creating metrics dataframe
2022-09-24 20:41:41,768:INFO:Initializing K Neighbors Regressor
2022-09-24 20:41:41,768:INFO:Total runtime is 0.29513603846232095 minutes
2022-09-24 20:41:41,796:INFO:SubProcess create_model() called ==================================
2022-09-24 20:41:41,797:INFO:Initializing create_model()
2022-09-24 20:41:41,797:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AC25AEE0>, return_train_score=False, kwargs={})
2022-09-24 20:41:41,798:INFO:Checking exceptions
2022-09-24 20:41:41,798:INFO:Importing libraries
2022-09-24 20:41:41,798:INFO:Copying training dataset
2022-09-24 20:41:41,801:INFO:Defining folds
2022-09-24 20:41:41,801:INFO:Declaring metric variables
2022-09-24 20:41:41,824:INFO:Importing untrained model
2022-09-24 20:41:41,840:INFO:K Neighbors Regressor Imported succesfully
2022-09-24 20:41:41,879:INFO:Starting cross validation
2022-09-24 20:41:41,880:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:41:42,001:INFO:Calculating mean and std
2022-09-24 20:41:42,001:INFO:Creating metrics dataframe
2022-09-24 20:41:42,001:INFO:Uploading results into container
2022-09-24 20:41:42,001:INFO:Uploading model into container now
2022-09-24 20:41:42,001:INFO:create_model_container: 11
2022-09-24 20:41:42,001:INFO:master_model_container: 11
2022-09-24 20:41:42,001:INFO:display_container: 2
2022-09-24 20:41:42,001:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2022-09-24 20:41:42,001:INFO:create_model() succesfully completed......................................
2022-09-24 20:41:42,123:INFO:SubProcess create_model() end ==================================
2022-09-24 20:41:42,123:INFO:Creating metrics dataframe
2022-09-24 20:41:42,138:INFO:Initializing Decision Tree Regressor
2022-09-24 20:41:42,138:INFO:Total runtime is 0.30131120681762696 minutes
2022-09-24 20:41:42,160:INFO:SubProcess create_model() called ==================================
2022-09-24 20:41:42,162:INFO:Initializing create_model()
2022-09-24 20:41:42,163:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AC25AEE0>, return_train_score=False, kwargs={})
2022-09-24 20:41:42,163:INFO:Checking exceptions
2022-09-24 20:41:42,163:INFO:Importing libraries
2022-09-24 20:41:42,164:INFO:Copying training dataset
2022-09-24 20:41:42,166:INFO:Defining folds
2022-09-24 20:41:42,167:INFO:Declaring metric variables
2022-09-24 20:41:42,184:INFO:Importing untrained model
2022-09-24 20:41:42,204:INFO:Decision Tree Regressor Imported succesfully
2022-09-24 20:41:42,235:INFO:Starting cross validation
2022-09-24 20:41:42,236:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:41:42,326:INFO:Calculating mean and std
2022-09-24 20:41:42,328:INFO:Creating metrics dataframe
2022-09-24 20:41:42,334:INFO:Uploading results into container
2022-09-24 20:41:42,334:INFO:Uploading model into container now
2022-09-24 20:41:42,335:INFO:create_model_container: 12
2022-09-24 20:41:42,335:INFO:master_model_container: 12
2022-09-24 20:41:42,335:INFO:display_container: 2
2022-09-24 20:41:42,336:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=123, splitter='best')
2022-09-24 20:41:42,336:INFO:create_model() succesfully completed......................................
2022-09-24 20:41:42,451:INFO:SubProcess create_model() end ==================================
2022-09-24 20:41:42,451:INFO:Creating metrics dataframe
2022-09-24 20:41:42,475:INFO:Initializing Random Forest Regressor
2022-09-24 20:41:42,475:INFO:Total runtime is 0.3069186290105184 minutes
2022-09-24 20:41:42,492:INFO:SubProcess create_model() called ==================================
2022-09-24 20:41:42,493:INFO:Initializing create_model()
2022-09-24 20:41:42,493:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AC25AEE0>, return_train_score=False, kwargs={})
2022-09-24 20:41:42,494:INFO:Checking exceptions
2022-09-24 20:41:42,495:INFO:Importing libraries
2022-09-24 20:41:42,495:INFO:Copying training dataset
2022-09-24 20:41:42,498:INFO:Defining folds
2022-09-24 20:41:42,498:INFO:Declaring metric variables
2022-09-24 20:41:42,521:INFO:Importing untrained model
2022-09-24 20:41:42,541:INFO:Random Forest Regressor Imported succesfully
2022-09-24 20:41:42,575:INFO:Starting cross validation
2022-09-24 20:41:42,576:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:41:43,849:INFO:Calculating mean and std
2022-09-24 20:41:43,851:INFO:Creating metrics dataframe
2022-09-24 20:41:43,858:INFO:Uploading results into container
2022-09-24 20:41:43,859:INFO:Uploading model into container now
2022-09-24 20:41:43,859:INFO:create_model_container: 13
2022-09-24 20:41:43,859:INFO:master_model_container: 13
2022-09-24 20:41:43,860:INFO:display_container: 2
2022-09-24 20:41:43,861:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=123, verbose=0, warm_start=False)
2022-09-24 20:41:43,862:INFO:create_model() succesfully completed......................................
2022-09-24 20:41:43,982:INFO:SubProcess create_model() end ==================================
2022-09-24 20:41:43,982:INFO:Creating metrics dataframe
2022-09-24 20:41:44,009:INFO:Initializing Extra Trees Regressor
2022-09-24 20:41:44,009:INFO:Total runtime is 0.3324881513913473 minutes
2022-09-24 20:41:44,027:INFO:SubProcess create_model() called ==================================
2022-09-24 20:41:44,028:INFO:Initializing create_model()
2022-09-24 20:41:44,029:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AC25AEE0>, return_train_score=False, kwargs={})
2022-09-24 20:41:44,029:INFO:Checking exceptions
2022-09-24 20:41:44,029:INFO:Importing libraries
2022-09-24 20:41:44,030:INFO:Copying training dataset
2022-09-24 20:41:44,032:INFO:Defining folds
2022-09-24 20:41:44,033:INFO:Declaring metric variables
2022-09-24 20:41:44,060:INFO:Importing untrained model
2022-09-24 20:41:44,085:INFO:Extra Trees Regressor Imported succesfully
2022-09-24 20:41:44,119:INFO:Starting cross validation
2022-09-24 20:41:44,120:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:41:45,244:INFO:Calculating mean and std
2022-09-24 20:41:45,246:INFO:Creating metrics dataframe
2022-09-24 20:41:45,254:INFO:Uploading results into container
2022-09-24 20:41:45,254:INFO:Uploading model into container now
2022-09-24 20:41:45,255:INFO:create_model_container: 14
2022-09-24 20:41:45,255:INFO:master_model_container: 14
2022-09-24 20:41:45,256:INFO:display_container: 2
2022-09-24 20:41:45,256:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=123, verbose=0, warm_start=False)
2022-09-24 20:41:45,257:INFO:create_model() succesfully completed......................................
2022-09-24 20:41:45,408:INFO:SubProcess create_model() end ==================================
2022-09-24 20:41:45,408:INFO:Creating metrics dataframe
2022-09-24 20:41:45,436:INFO:Initializing AdaBoost Regressor
2022-09-24 20:41:45,436:INFO:Total runtime is 0.35627472798029586 minutes
2022-09-24 20:41:45,456:INFO:SubProcess create_model() called ==================================
2022-09-24 20:41:45,457:INFO:Initializing create_model()
2022-09-24 20:41:45,457:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AC25AEE0>, return_train_score=False, kwargs={})
2022-09-24 20:41:45,458:INFO:Checking exceptions
2022-09-24 20:41:45,458:INFO:Importing libraries
2022-09-24 20:41:45,458:INFO:Copying training dataset
2022-09-24 20:41:45,463:INFO:Defining folds
2022-09-24 20:41:45,463:INFO:Declaring metric variables
2022-09-24 20:41:45,483:INFO:Importing untrained model
2022-09-24 20:41:45,502:INFO:AdaBoost Regressor Imported succesfully
2022-09-24 20:41:45,543:INFO:Starting cross validation
2022-09-24 20:41:45,544:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:41:46,040:INFO:Calculating mean and std
2022-09-24 20:41:46,043:INFO:Creating metrics dataframe
2022-09-24 20:41:46,059:INFO:Uploading results into container
2022-09-24 20:41:46,059:INFO:Uploading model into container now
2022-09-24 20:41:46,059:INFO:create_model_container: 15
2022-09-24 20:41:46,060:INFO:master_model_container: 15
2022-09-24 20:41:46,060:INFO:display_container: 2
2022-09-24 20:41:46,061:INFO:AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=123)
2022-09-24 20:41:46,061:INFO:create_model() succesfully completed......................................
2022-09-24 20:41:46,219:INFO:SubProcess create_model() end ==================================
2022-09-24 20:41:46,219:INFO:Creating metrics dataframe
2022-09-24 20:41:46,246:INFO:Initializing Gradient Boosting Regressor
2022-09-24 20:41:46,247:INFO:Total runtime is 0.3697958588600159 minutes
2022-09-24 20:41:46,265:INFO:SubProcess create_model() called ==================================
2022-09-24 20:41:46,266:INFO:Initializing create_model()
2022-09-24 20:41:46,267:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AC25AEE0>, return_train_score=False, kwargs={})
2022-09-24 20:41:46,267:INFO:Checking exceptions
2022-09-24 20:41:46,267:INFO:Importing libraries
2022-09-24 20:41:46,268:INFO:Copying training dataset
2022-09-24 20:41:46,269:INFO:Defining folds
2022-09-24 20:41:46,270:INFO:Declaring metric variables
2022-09-24 20:41:46,296:INFO:Importing untrained model
2022-09-24 20:41:46,322:INFO:Gradient Boosting Regressor Imported succesfully
2022-09-24 20:41:46,360:INFO:Starting cross validation
2022-09-24 20:41:46,361:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:41:46,623:INFO:Calculating mean and std
2022-09-24 20:41:46,625:INFO:Creating metrics dataframe
2022-09-24 20:41:46,633:INFO:Uploading results into container
2022-09-24 20:41:46,633:INFO:Uploading model into container now
2022-09-24 20:41:46,633:INFO:create_model_container: 16
2022-09-24 20:41:46,633:INFO:master_model_container: 16
2022-09-24 20:41:46,634:INFO:display_container: 2
2022-09-24 20:41:46,636:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=123, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2022-09-24 20:41:46,636:INFO:create_model() succesfully completed......................................
2022-09-24 20:41:46,763:INFO:SubProcess create_model() end ==================================
2022-09-24 20:41:46,763:INFO:Creating metrics dataframe
2022-09-24 20:41:46,792:INFO:Initializing Light Gradient Boosting Machine
2022-09-24 20:41:46,792:INFO:Total runtime is 0.3788677573204041 minutes
2022-09-24 20:41:46,813:INFO:SubProcess create_model() called ==================================
2022-09-24 20:41:46,814:INFO:Initializing create_model()
2022-09-24 20:41:46,815:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AC25AEE0>, return_train_score=False, kwargs={})
2022-09-24 20:41:46,816:INFO:Checking exceptions
2022-09-24 20:41:46,816:INFO:Importing libraries
2022-09-24 20:41:46,816:INFO:Copying training dataset
2022-09-24 20:41:46,818:INFO:Defining folds
2022-09-24 20:41:46,818:INFO:Declaring metric variables
2022-09-24 20:41:46,835:INFO:Importing untrained model
2022-09-24 20:41:46,856:INFO:Light Gradient Boosting Machine Imported succesfully
2022-09-24 20:41:46,901:INFO:Starting cross validation
2022-09-24 20:41:46,903:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:41:47,129:INFO:Calculating mean and std
2022-09-24 20:41:47,131:INFO:Creating metrics dataframe
2022-09-24 20:41:47,138:INFO:Uploading results into container
2022-09-24 20:41:47,138:INFO:Uploading model into container now
2022-09-24 20:41:47,139:INFO:create_model_container: 17
2022-09-24 20:41:47,139:INFO:master_model_container: 17
2022-09-24 20:41:47,139:INFO:display_container: 2
2022-09-24 20:41:47,141:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-09-24 20:41:47,141:INFO:create_model() succesfully completed......................................
2022-09-24 20:41:47,263:INFO:SubProcess create_model() end ==================================
2022-09-24 20:41:47,263:INFO:Creating metrics dataframe
2022-09-24 20:41:47,287:INFO:Initializing Dummy Regressor
2022-09-24 20:41:47,287:INFO:Total runtime is 0.38712289333343514 minutes
2022-09-24 20:41:47,300:INFO:SubProcess create_model() called ==================================
2022-09-24 20:41:47,301:INFO:Initializing create_model()
2022-09-24 20:41:47,301:INFO:create_model(estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AC25AEE0>, return_train_score=False, kwargs={})
2022-09-24 20:41:47,301:INFO:Checking exceptions
2022-09-24 20:41:47,301:INFO:Importing libraries
2022-09-24 20:41:47,301:INFO:Copying training dataset
2022-09-24 20:41:47,303:INFO:Defining folds
2022-09-24 20:41:47,303:INFO:Declaring metric variables
2022-09-24 20:41:47,316:INFO:Importing untrained model
2022-09-24 20:41:47,330:INFO:Dummy Regressor Imported succesfully
2022-09-24 20:41:47,362:INFO:Starting cross validation
2022-09-24 20:41:47,363:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:41:47,434:INFO:Calculating mean and std
2022-09-24 20:41:47,436:INFO:Creating metrics dataframe
2022-09-24 20:41:47,444:INFO:Uploading results into container
2022-09-24 20:41:47,444:INFO:Uploading model into container now
2022-09-24 20:41:47,444:INFO:create_model_container: 18
2022-09-24 20:41:47,445:INFO:master_model_container: 18
2022-09-24 20:41:47,445:INFO:display_container: 2
2022-09-24 20:41:47,445:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2022-09-24 20:41:47,445:INFO:create_model() succesfully completed......................................
2022-09-24 20:41:47,539:INFO:SubProcess create_model() end ==================================
2022-09-24 20:41:47,539:INFO:Creating metrics dataframe
2022-09-24 20:41:47,602:INFO:Initializing create_model()
2022-09-24 20:41:47,602:INFO:create_model(estimator=HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-09-24 20:41:47,603:INFO:Checking exceptions
2022-09-24 20:41:47,603:INFO:Importing libraries
2022-09-24 20:41:47,603:INFO:Copying training dataset
2022-09-24 20:41:47,603:INFO:Defining folds
2022-09-24 20:41:47,604:INFO:Declaring metric variables
2022-09-24 20:41:47,604:INFO:Importing untrained model
2022-09-24 20:41:47,604:INFO:Declaring custom model
2022-09-24 20:41:47,605:INFO:Huber Regressor Imported succesfully
2022-09-24 20:41:47,605:INFO:Cross validation set to False
2022-09-24 20:41:47,605:INFO:Fitting Model
2022-09-24 20:41:47,654:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-24 20:41:47,654:INFO:create_models() succesfully completed......................................
2022-09-24 20:41:47,783:INFO:create_model_container: 18
2022-09-24 20:41:47,783:INFO:master_model_container: 18
2022-09-24 20:41:47,783:INFO:display_container: 2
2022-09-24 20:41:47,783:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-24 20:41:47,783:INFO:compare_models() succesfully completed......................................
2022-09-24 20:41:59,763:INFO:PyCaret Supervised Module
2022-09-24 20:41:59,763:INFO:ML Usecase: regression
2022-09-24 20:41:59,763:INFO:version 2.3.10
2022-09-24 20:41:59,764:INFO:Initializing setup()
2022-09-24 20:41:59,764:INFO:setup(target=mpy, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-09-24 20:41:59,765:INFO:Checking environment
2022-09-24 20:41:59,765:INFO:python_version: 3.8.13
2022-09-24 20:41:59,765:INFO:python_build: ('default', 'Mar 28 2022 06:59:08')
2022-09-24 20:41:59,765:INFO:machine: AMD64
2022-09-24 20:41:59,765:INFO:platform: Windows-10-10.0.22000-SP0
2022-09-24 20:41:59,765:INFO:Memory: svmem(total=12710350848, available=2294431744, percent=81.9, used=10415919104, free=2294431744)
2022-09-24 20:41:59,766:INFO:Physical Core: 4
2022-09-24 20:41:59,766:INFO:Logical Core: 8
2022-09-24 20:41:59,766:INFO:Checking libraries
2022-09-24 20:41:59,766:INFO:pd==1.4.4
2022-09-24 20:41:59,766:INFO:numpy==1.20.3
2022-09-24 20:41:59,766:INFO:sklearn==0.23.2
2022-09-24 20:41:59,767:INFO:lightgbm==3.3.2
2022-09-24 20:41:59,769:WARNING:catboost not found
2022-09-24 20:41:59,770:WARNING:xgboost not found
2022-09-24 20:41:59,770:INFO:mlflow==1.29.0
2022-09-24 20:41:59,771:INFO:Checking Exceptions
2022-09-24 20:41:59,771:INFO:Declaring global variables
2022-09-24 20:41:59,771:INFO:USI: 49ea
2022-09-24 20:41:59,771:INFO:pycaret_globals: {'create_model_container', '_all_models', 'fold_groups_param', '_ml_usecase', 'dashboard_logger', 'logging_param', 'display_container', 'log_plots_param', 'target_param', 'seed', 'gpu_param', 'fix_imbalance_param', 'fold_generator', 'fold_groups_param_full', 'fold_shuffle_param', 'y_test', '_available_plots', 'pycaret_globals', 'fold_param', 'transform_target_method_param', 'USI', 'stratify_param', 'iterative_imputation_iters_param', 'X_train', 'exp_name_log', '_gpu_n_jobs_param', 'y_train', 'fix_imbalance_method_param', 'master_model_container', 'data_before_preprocess', 'X', 'html_param', 'imputation_regressor', '_all_models_internal', 'imputation_classifier', 'X_test', 'transform_target_param', '_all_metrics', '_internal_pipeline', 'experiment__', 'prep_pipe', 'y', 'n_jobs_param'}
2022-09-24 20:41:59,771:INFO:Preparing display monitor
2022-09-24 20:41:59,772:INFO:Preparing display monitor
2022-09-24 20:41:59,803:INFO:Importing libraries
2022-09-24 20:41:59,803:INFO:Copying data for preprocessing
2022-09-24 20:41:59,826:INFO:Declaring preprocessing parameters
2022-09-24 20:41:59,828:INFO:Creating preprocessing pipeline
2022-09-24 20:41:59,846:INFO:Preprocessing pipeline created successfully
2022-09-24 20:41:59,847:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-09-24 20:41:59,847:INFO:Creating global containers
2022-09-24 20:41:59,848:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-09-24 20:42:03,032:WARNING:Couldn't import xgboost.XGBRegressor
2022-09-24 20:42:03,032:WARNING:Couldn't import catboost.CatBoostRegressor
2022-09-24 20:42:03,332:WARNING:Couldn't import xgboost.XGBRegressor
2022-09-24 20:42:03,332:WARNING:Couldn't import catboost.CatBoostRegressor
2022-09-24 20:42:03,332:INFO:Creating grid variables
2022-09-24 20:42:03,348:INFO:create_model_container: 0
2022-09-24 20:42:03,348:INFO:master_model_container: 0
2022-09-24 20:42:03,348:INFO:display_container: 1
2022-09-24 20:42:03,348:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='mpy',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='me...
                                                  target='mpy')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='mpy')),
                ('fix_perfect', Remove_100(target='mpy')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-09-24 20:42:03,348:INFO:setup() succesfully completed......................................
2022-09-24 20:42:07,519:INFO:Initializing compare_models()
2022-09-24 20:42:07,520:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2022-09-24 20:42:07,520:INFO:Checking exceptions
2022-09-24 20:42:07,521:INFO:Preparing display monitor
2022-09-24 20:42:07,521:INFO:Preparing display monitor
2022-09-24 20:42:07,597:INFO:Initializing Linear Regression
2022-09-24 20:42:07,597:INFO:Total runtime is 0.0 minutes
2022-09-24 20:42:07,618:INFO:SubProcess create_model() called ==================================
2022-09-24 20:42:07,620:INFO:Initializing create_model()
2022-09-24 20:42:07,622:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AE3A92B0>, return_train_score=False, kwargs={})
2022-09-24 20:42:07,622:INFO:Checking exceptions
2022-09-24 20:42:07,623:INFO:Importing libraries
2022-09-24 20:42:07,623:INFO:Copying training dataset
2022-09-24 20:42:07,626:INFO:Defining folds
2022-09-24 20:42:07,626:INFO:Declaring metric variables
2022-09-24 20:42:07,652:INFO:Importing untrained model
2022-09-24 20:42:07,689:INFO:Linear Regression Imported succesfully
2022-09-24 20:42:07,736:INFO:Starting cross validation
2022-09-24 20:42:07,738:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:42:07,873:INFO:Calculating mean and std
2022-09-24 20:42:07,875:INFO:Creating metrics dataframe
2022-09-24 20:42:07,888:INFO:Uploading results into container
2022-09-24 20:42:07,888:INFO:Uploading model into container now
2022-09-24 20:42:07,889:INFO:create_model_container: 1
2022-09-24 20:42:07,889:INFO:master_model_container: 1
2022-09-24 20:42:07,890:INFO:display_container: 2
2022-09-24 20:42:07,890:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2022-09-24 20:42:07,890:INFO:create_model() succesfully completed......................................
2022-09-24 20:42:08,133:INFO:SubProcess create_model() end ==================================
2022-09-24 20:42:08,134:INFO:Creating metrics dataframe
2022-09-24 20:42:08,194:INFO:Initializing Lasso Regression
2022-09-24 20:42:08,196:INFO:Total runtime is 0.009968396027882893 minutes
2022-09-24 20:42:08,227:INFO:SubProcess create_model() called ==================================
2022-09-24 20:42:08,228:INFO:Initializing create_model()
2022-09-24 20:42:08,228:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AE3A92B0>, return_train_score=False, kwargs={})
2022-09-24 20:42:08,229:INFO:Checking exceptions
2022-09-24 20:42:08,229:INFO:Importing libraries
2022-09-24 20:42:08,230:INFO:Copying training dataset
2022-09-24 20:42:08,233:INFO:Defining folds
2022-09-24 20:42:08,233:INFO:Declaring metric variables
2022-09-24 20:42:08,272:INFO:Importing untrained model
2022-09-24 20:42:08,300:INFO:Lasso Regression Imported succesfully
2022-09-24 20:42:08,366:INFO:Starting cross validation
2022-09-24 20:42:08,367:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:42:08,498:INFO:Calculating mean and std
2022-09-24 20:42:08,499:INFO:Creating metrics dataframe
2022-09-24 20:42:08,509:INFO:Uploading results into container
2022-09-24 20:42:08,509:INFO:Uploading model into container now
2022-09-24 20:42:08,509:INFO:create_model_container: 2
2022-09-24 20:42:08,510:INFO:master_model_container: 2
2022-09-24 20:42:08,510:INFO:display_container: 2
2022-09-24 20:42:08,512:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=123,
      selection='cyclic', tol=0.0001, warm_start=False)
2022-09-24 20:42:08,512:INFO:create_model() succesfully completed......................................
2022-09-24 20:42:08,661:INFO:SubProcess create_model() end ==================================
2022-09-24 20:42:08,661:INFO:Creating metrics dataframe
2022-09-24 20:42:08,690:INFO:Initializing Ridge Regression
2022-09-24 20:42:08,690:INFO:Total runtime is 0.018211627006530763 minutes
2022-09-24 20:42:08,710:INFO:SubProcess create_model() called ==================================
2022-09-24 20:42:08,711:INFO:Initializing create_model()
2022-09-24 20:42:08,712:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AE3A92B0>, return_train_score=False, kwargs={})
2022-09-24 20:42:08,712:INFO:Checking exceptions
2022-09-24 20:42:08,713:INFO:Importing libraries
2022-09-24 20:42:08,713:INFO:Copying training dataset
2022-09-24 20:42:08,716:INFO:Defining folds
2022-09-24 20:42:08,717:INFO:Declaring metric variables
2022-09-24 20:42:08,734:INFO:Importing untrained model
2022-09-24 20:42:08,753:INFO:Ridge Regression Imported succesfully
2022-09-24 20:42:08,793:INFO:Starting cross validation
2022-09-24 20:42:08,795:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:42:08,917:INFO:Calculating mean and std
2022-09-24 20:42:08,920:INFO:Creating metrics dataframe
2022-09-24 20:42:08,928:INFO:Uploading results into container
2022-09-24 20:42:08,929:INFO:Uploading model into container now
2022-09-24 20:42:08,929:INFO:create_model_container: 3
2022-09-24 20:42:08,930:INFO:master_model_container: 3
2022-09-24 20:42:08,930:INFO:display_container: 2
2022-09-24 20:42:08,931:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=123, solver='auto', tol=0.001)
2022-09-24 20:42:08,931:INFO:create_model() succesfully completed......................................
2022-09-24 20:42:09,049:INFO:SubProcess create_model() end ==================================
2022-09-24 20:42:09,049:INFO:Creating metrics dataframe
2022-09-24 20:42:09,070:INFO:Initializing Elastic Net
2022-09-24 20:42:09,070:INFO:Total runtime is 0.024548558394114177 minutes
2022-09-24 20:42:09,094:INFO:SubProcess create_model() called ==================================
2022-09-24 20:42:09,095:INFO:Initializing create_model()
2022-09-24 20:42:09,096:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AE3A92B0>, return_train_score=False, kwargs={})
2022-09-24 20:42:09,096:INFO:Checking exceptions
2022-09-24 20:42:09,097:INFO:Importing libraries
2022-09-24 20:42:09,097:INFO:Copying training dataset
2022-09-24 20:42:09,099:INFO:Defining folds
2022-09-24 20:42:09,100:INFO:Declaring metric variables
2022-09-24 20:42:09,116:INFO:Importing untrained model
2022-09-24 20:42:09,136:INFO:Elastic Net Imported succesfully
2022-09-24 20:42:09,190:INFO:Starting cross validation
2022-09-24 20:42:09,192:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:42:09,327:INFO:Calculating mean and std
2022-09-24 20:42:09,327:INFO:Creating metrics dataframe
2022-09-24 20:42:09,343:INFO:Uploading results into container
2022-09-24 20:42:09,343:INFO:Uploading model into container now
2022-09-24 20:42:09,343:INFO:create_model_container: 4
2022-09-24 20:42:09,343:INFO:master_model_container: 4
2022-09-24 20:42:09,343:INFO:display_container: 2
2022-09-24 20:42:09,343:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=123, selection='cyclic', tol=0.0001, warm_start=False)
2022-09-24 20:42:09,343:INFO:create_model() succesfully completed......................................
2022-09-24 20:42:09,510:INFO:SubProcess create_model() end ==================================
2022-09-24 20:42:09,510:INFO:Creating metrics dataframe
2022-09-24 20:42:09,542:INFO:Initializing Least Angle Regression
2022-09-24 20:42:09,543:INFO:Total runtime is 0.0324278195699056 minutes
2022-09-24 20:42:09,567:INFO:SubProcess create_model() called ==================================
2022-09-24 20:42:09,568:INFO:Initializing create_model()
2022-09-24 20:42:09,568:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AE3A92B0>, return_train_score=False, kwargs={})
2022-09-24 20:42:09,569:INFO:Checking exceptions
2022-09-24 20:42:09,569:INFO:Importing libraries
2022-09-24 20:42:09,569:INFO:Copying training dataset
2022-09-24 20:42:09,572:INFO:Defining folds
2022-09-24 20:42:09,572:INFO:Declaring metric variables
2022-09-24 20:42:09,598:INFO:Importing untrained model
2022-09-24 20:42:09,619:INFO:Least Angle Regression Imported succesfully
2022-09-24 20:42:09,670:INFO:Starting cross validation
2022-09-24 20:42:09,672:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:42:10,411:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2022-09-24 20:42:10,423:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\joblib\externals\loky\process_executor.py", line 436, in _process_worker
    r = call_item()
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\joblib\externals\loky\process_executor.py", line 288, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\tabular.py", line 3200, in create_model_supervised
    scores = cross_validate(
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\joblib\parallel.py", line 1056, in __call__
    self.retrieve()
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\joblib\parallel.py", line 935, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\concurrent\futures\_base.py", line 444, in result
    return self.__get_result()
  File "C:\Users\saint\anaconda3\envs\myenv\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2022-09-24 20:42:10,424:INFO:Initializing create_model()
2022-09-24 20:42:10,424:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AE3A92B0>, return_train_score=False, kwargs={})
2022-09-24 20:42:10,424:INFO:Checking exceptions
2022-09-24 20:42:10,424:INFO:Importing libraries
2022-09-24 20:42:10,425:INFO:Copying training dataset
2022-09-24 20:42:10,426:INFO:Defining folds
2022-09-24 20:42:10,426:INFO:Declaring metric variables
2022-09-24 20:42:10,448:INFO:Importing untrained model
2022-09-24 20:42:10,473:INFO:Least Angle Regression Imported succesfully
2022-09-24 20:42:10,514:INFO:Starting cross validation
2022-09-24 20:42:10,517:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:42:24,601:ERROR:create_model() for lar raised an exception or returned all 0.0:
2022-09-24 20:42:24,601:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\joblib\externals\loky\process_executor.py", line 436, in _process_worker
    r = call_item()
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\joblib\externals\loky\process_executor.py", line 288, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\tabular.py", line 2212, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\tabular.py", line 3200, in create_model_supervised
    scores = cross_validate(
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\joblib\parallel.py", line 1056, in __call__
    self.retrieve()
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\joblib\parallel.py", line 935, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\concurrent\futures\_base.py", line 444, in result
    return self.__get_result()
  File "C:\Users\saint\anaconda3\envs\myenv\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2022-09-24 20:42:24,601:INFO:Initializing Lasso Least Angle Regression
2022-09-24 20:42:24,601:INFO:Total runtime is 0.2833900252978007 minutes
2022-09-24 20:42:24,622:INFO:SubProcess create_model() called ==================================
2022-09-24 20:42:24,623:INFO:Initializing create_model()
2022-09-24 20:42:24,623:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AE3A92B0>, return_train_score=False, kwargs={})
2022-09-24 20:42:24,624:INFO:Checking exceptions
2022-09-24 20:42:24,625:INFO:Importing libraries
2022-09-24 20:42:24,625:INFO:Copying training dataset
2022-09-24 20:42:24,627:INFO:Defining folds
2022-09-24 20:42:24,627:INFO:Declaring metric variables
2022-09-24 20:42:24,649:INFO:Importing untrained model
2022-09-24 20:42:24,667:INFO:Lasso Least Angle Regression Imported succesfully
2022-09-24 20:42:24,717:INFO:Starting cross validation
2022-09-24 20:42:24,719:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:42:37,922:INFO:Calculating mean and std
2022-09-24 20:42:37,923:INFO:Creating metrics dataframe
2022-09-24 20:42:37,935:INFO:Uploading results into container
2022-09-24 20:42:37,935:INFO:Uploading model into container now
2022-09-24 20:42:37,936:INFO:create_model_container: 5
2022-09-24 20:42:37,936:INFO:master_model_container: 5
2022-09-24 20:42:37,936:INFO:display_container: 2
2022-09-24 20:42:37,937:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize=True,
          positive=False, precompute='auto', random_state=123, verbose=False)
2022-09-24 20:42:37,937:INFO:create_model() succesfully completed......................................
2022-09-24 20:42:38,093:INFO:SubProcess create_model() end ==================================
2022-09-24 20:42:38,094:INFO:Creating metrics dataframe
2022-09-24 20:42:38,113:INFO:Initializing Orthogonal Matching Pursuit
2022-09-24 20:42:38,113:INFO:Total runtime is 0.508600930372874 minutes
2022-09-24 20:42:38,130:INFO:SubProcess create_model() called ==================================
2022-09-24 20:42:38,131:INFO:Initializing create_model()
2022-09-24 20:42:38,132:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AE3A92B0>, return_train_score=False, kwargs={})
2022-09-24 20:42:38,132:INFO:Checking exceptions
2022-09-24 20:42:38,132:INFO:Importing libraries
2022-09-24 20:42:38,133:INFO:Copying training dataset
2022-09-24 20:42:38,135:INFO:Defining folds
2022-09-24 20:42:38,136:INFO:Declaring metric variables
2022-09-24 20:42:38,153:INFO:Importing untrained model
2022-09-24 20:42:38,167:INFO:Orthogonal Matching Pursuit Imported succesfully
2022-09-24 20:42:38,205:INFO:Starting cross validation
2022-09-24 20:42:38,207:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:42:38,335:INFO:Calculating mean and std
2022-09-24 20:42:38,336:INFO:Creating metrics dataframe
2022-09-24 20:42:38,347:INFO:Uploading results into container
2022-09-24 20:42:38,347:INFO:Uploading model into container now
2022-09-24 20:42:38,348:INFO:create_model_container: 6
2022-09-24 20:42:38,348:INFO:master_model_container: 6
2022-09-24 20:42:38,348:INFO:display_container: 2
2022-09-24 20:42:38,350:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None)
2022-09-24 20:42:38,350:INFO:create_model() succesfully completed......................................
2022-09-24 20:42:38,498:INFO:SubProcess create_model() end ==================================
2022-09-24 20:42:38,499:INFO:Creating metrics dataframe
2022-09-24 20:42:38,522:INFO:Initializing Bayesian Ridge
2022-09-24 20:42:38,522:INFO:Total runtime is 0.5154100418090821 minutes
2022-09-24 20:42:38,541:INFO:SubProcess create_model() called ==================================
2022-09-24 20:42:38,542:INFO:Initializing create_model()
2022-09-24 20:42:38,542:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AE3A92B0>, return_train_score=False, kwargs={})
2022-09-24 20:42:38,543:INFO:Checking exceptions
2022-09-24 20:42:38,544:INFO:Importing libraries
2022-09-24 20:42:38,545:INFO:Copying training dataset
2022-09-24 20:42:38,548:INFO:Defining folds
2022-09-24 20:42:38,549:INFO:Declaring metric variables
2022-09-24 20:42:38,566:INFO:Importing untrained model
2022-09-24 20:42:38,582:INFO:Bayesian Ridge Imported succesfully
2022-09-24 20:42:38,629:INFO:Starting cross validation
2022-09-24 20:42:38,631:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:42:38,775:INFO:Calculating mean and std
2022-09-24 20:42:38,777:INFO:Creating metrics dataframe
2022-09-24 20:42:38,784:INFO:Uploading results into container
2022-09-24 20:42:38,785:INFO:Uploading model into container now
2022-09-24 20:42:38,785:INFO:create_model_container: 7
2022-09-24 20:42:38,785:INFO:master_model_container: 7
2022-09-24 20:42:38,786:INFO:display_container: 2
2022-09-24 20:42:38,787:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False)
2022-09-24 20:42:38,787:INFO:create_model() succesfully completed......................................
2022-09-24 20:42:38,942:INFO:SubProcess create_model() end ==================================
2022-09-24 20:42:38,942:INFO:Creating metrics dataframe
2022-09-24 20:42:38,971:INFO:Initializing Passive Aggressive Regressor
2022-09-24 20:42:38,972:INFO:Total runtime is 0.5229032317797344 minutes
2022-09-24 20:42:38,988:INFO:SubProcess create_model() called ==================================
2022-09-24 20:42:38,988:INFO:Initializing create_model()
2022-09-24 20:42:38,989:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AE3A92B0>, return_train_score=False, kwargs={})
2022-09-24 20:42:38,989:INFO:Checking exceptions
2022-09-24 20:42:38,990:INFO:Importing libraries
2022-09-24 20:42:38,990:INFO:Copying training dataset
2022-09-24 20:42:38,993:INFO:Defining folds
2022-09-24 20:42:38,994:INFO:Declaring metric variables
2022-09-24 20:42:39,021:INFO:Importing untrained model
2022-09-24 20:42:39,044:INFO:Passive Aggressive Regressor Imported succesfully
2022-09-24 20:42:39,098:INFO:Starting cross validation
2022-09-24 20:42:39,100:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:42:39,240:INFO:Calculating mean and std
2022-09-24 20:42:39,241:INFO:Creating metrics dataframe
2022-09-24 20:42:39,251:INFO:Uploading results into container
2022-09-24 20:42:39,251:INFO:Uploading model into container now
2022-09-24 20:42:39,251:INFO:create_model_container: 8
2022-09-24 20:42:39,252:INFO:master_model_container: 8
2022-09-24 20:42:39,252:INFO:display_container: 2
2022-09-24 20:42:39,253:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=123, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-09-24 20:42:39,253:INFO:create_model() succesfully completed......................................
2022-09-24 20:42:39,408:INFO:SubProcess create_model() end ==================================
2022-09-24 20:42:39,409:INFO:Creating metrics dataframe
2022-09-24 20:42:39,434:INFO:Initializing Huber Regressor
2022-09-24 20:42:39,434:INFO:Total runtime is 0.5306139985720317 minutes
2022-09-24 20:42:39,453:INFO:SubProcess create_model() called ==================================
2022-09-24 20:42:39,454:INFO:Initializing create_model()
2022-09-24 20:42:39,455:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AE3A92B0>, return_train_score=False, kwargs={})
2022-09-24 20:42:39,455:INFO:Checking exceptions
2022-09-24 20:42:39,455:INFO:Importing libraries
2022-09-24 20:42:39,456:INFO:Copying training dataset
2022-09-24 20:42:39,459:INFO:Defining folds
2022-09-24 20:42:39,459:INFO:Declaring metric variables
2022-09-24 20:42:39,482:INFO:Importing untrained model
2022-09-24 20:42:39,500:INFO:Huber Regressor Imported succesfully
2022-09-24 20:42:39,551:INFO:Starting cross validation
2022-09-24 20:42:39,553:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:42:39,774:INFO:Calculating mean and std
2022-09-24 20:42:39,774:INFO:Creating metrics dataframe
2022-09-24 20:42:39,790:INFO:Uploading results into container
2022-09-24 20:42:39,790:INFO:Uploading model into container now
2022-09-24 20:42:39,790:INFO:create_model_container: 9
2022-09-24 20:42:39,790:INFO:master_model_container: 9
2022-09-24 20:42:39,790:INFO:display_container: 2
2022-09-24 20:42:39,790:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-24 20:42:39,790:INFO:create_model() succesfully completed......................................
2022-09-24 20:42:39,935:INFO:SubProcess create_model() end ==================================
2022-09-24 20:42:39,935:INFO:Creating metrics dataframe
2022-09-24 20:42:39,951:INFO:Initializing K Neighbors Regressor
2022-09-24 20:42:39,951:INFO:Total runtime is 0.5392211635907492 minutes
2022-09-24 20:42:39,971:INFO:SubProcess create_model() called ==================================
2022-09-24 20:42:39,971:INFO:Initializing create_model()
2022-09-24 20:42:39,971:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AE3A92B0>, return_train_score=False, kwargs={})
2022-09-24 20:42:39,971:INFO:Checking exceptions
2022-09-24 20:42:39,971:INFO:Importing libraries
2022-09-24 20:42:39,971:INFO:Copying training dataset
2022-09-24 20:42:39,971:INFO:Defining folds
2022-09-24 20:42:39,971:INFO:Declaring metric variables
2022-09-24 20:42:39,987:INFO:Importing untrained model
2022-09-24 20:42:40,002:INFO:K Neighbors Regressor Imported succesfully
2022-09-24 20:42:40,059:INFO:Starting cross validation
2022-09-24 20:42:40,061:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:42:40,208:INFO:Calculating mean and std
2022-09-24 20:42:40,208:INFO:Creating metrics dataframe
2022-09-24 20:42:40,223:INFO:Uploading results into container
2022-09-24 20:42:40,223:INFO:Uploading model into container now
2022-09-24 20:42:40,223:INFO:create_model_container: 10
2022-09-24 20:42:40,223:INFO:master_model_container: 10
2022-09-24 20:42:40,223:INFO:display_container: 2
2022-09-24 20:42:40,223:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2022-09-24 20:42:40,223:INFO:create_model() succesfully completed......................................
2022-09-24 20:42:40,370:INFO:SubProcess create_model() end ==================================
2022-09-24 20:42:40,370:INFO:Creating metrics dataframe
2022-09-24 20:42:40,402:INFO:Initializing Decision Tree Regressor
2022-09-24 20:42:40,402:INFO:Total runtime is 0.5467353264490764 minutes
2022-09-24 20:42:40,421:INFO:SubProcess create_model() called ==================================
2022-09-24 20:42:40,422:INFO:Initializing create_model()
2022-09-24 20:42:40,422:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AE3A92B0>, return_train_score=False, kwargs={})
2022-09-24 20:42:40,423:INFO:Checking exceptions
2022-09-24 20:42:40,424:INFO:Importing libraries
2022-09-24 20:42:40,424:INFO:Copying training dataset
2022-09-24 20:42:40,427:INFO:Defining folds
2022-09-24 20:42:40,428:INFO:Declaring metric variables
2022-09-24 20:42:40,450:INFO:Importing untrained model
2022-09-24 20:42:40,475:INFO:Decision Tree Regressor Imported succesfully
2022-09-24 20:42:40,526:INFO:Starting cross validation
2022-09-24 20:42:40,527:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:42:40,635:INFO:Calculating mean and std
2022-09-24 20:42:40,635:INFO:Creating metrics dataframe
2022-09-24 20:42:40,635:INFO:Uploading results into container
2022-09-24 20:42:40,635:INFO:Uploading model into container now
2022-09-24 20:42:40,651:INFO:create_model_container: 11
2022-09-24 20:42:40,651:INFO:master_model_container: 11
2022-09-24 20:42:40,651:INFO:display_container: 2
2022-09-24 20:42:40,651:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=123, splitter='best')
2022-09-24 20:42:40,651:INFO:create_model() succesfully completed......................................
2022-09-24 20:42:40,787:INFO:SubProcess create_model() end ==================================
2022-09-24 20:42:40,787:INFO:Creating metrics dataframe
2022-09-24 20:42:40,818:INFO:Initializing Random Forest Regressor
2022-09-24 20:42:40,818:INFO:Total runtime is 0.5536721984545391 minutes
2022-09-24 20:42:40,838:INFO:SubProcess create_model() called ==================================
2022-09-24 20:42:40,838:INFO:Initializing create_model()
2022-09-24 20:42:40,838:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AE3A92B0>, return_train_score=False, kwargs={})
2022-09-24 20:42:40,838:INFO:Checking exceptions
2022-09-24 20:42:40,838:INFO:Importing libraries
2022-09-24 20:42:40,838:INFO:Copying training dataset
2022-09-24 20:42:40,838:INFO:Defining folds
2022-09-24 20:42:40,838:INFO:Declaring metric variables
2022-09-24 20:42:40,853:INFO:Importing untrained model
2022-09-24 20:42:40,869:INFO:Random Forest Regressor Imported succesfully
2022-09-24 20:42:40,905:INFO:Starting cross validation
2022-09-24 20:42:40,907:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:42:42,298:INFO:Calculating mean and std
2022-09-24 20:42:42,298:INFO:Creating metrics dataframe
2022-09-24 20:42:42,314:INFO:Uploading results into container
2022-09-24 20:42:42,314:INFO:Uploading model into container now
2022-09-24 20:42:42,314:INFO:create_model_container: 12
2022-09-24 20:42:42,314:INFO:master_model_container: 12
2022-09-24 20:42:42,314:INFO:display_container: 2
2022-09-24 20:42:42,314:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=123, verbose=0, warm_start=False)
2022-09-24 20:42:42,314:INFO:create_model() succesfully completed......................................
2022-09-24 20:42:42,474:INFO:SubProcess create_model() end ==================================
2022-09-24 20:42:42,474:INFO:Creating metrics dataframe
2022-09-24 20:42:42,502:INFO:Initializing Extra Trees Regressor
2022-09-24 20:42:42,502:INFO:Total runtime is 0.5817412296930949 minutes
2022-09-24 20:42:42,536:INFO:SubProcess create_model() called ==================================
2022-09-24 20:42:42,537:INFO:Initializing create_model()
2022-09-24 20:42:42,537:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AE3A92B0>, return_train_score=False, kwargs={})
2022-09-24 20:42:42,538:INFO:Checking exceptions
2022-09-24 20:42:42,538:INFO:Importing libraries
2022-09-24 20:42:42,538:INFO:Copying training dataset
2022-09-24 20:42:42,543:INFO:Defining folds
2022-09-24 20:42:42,543:INFO:Declaring metric variables
2022-09-24 20:42:42,569:INFO:Importing untrained model
2022-09-24 20:42:42,606:INFO:Extra Trees Regressor Imported succesfully
2022-09-24 20:42:42,664:INFO:Starting cross validation
2022-09-24 20:42:42,666:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:42:43,907:INFO:Calculating mean and std
2022-09-24 20:42:43,907:INFO:Creating metrics dataframe
2022-09-24 20:42:43,925:INFO:Uploading results into container
2022-09-24 20:42:43,925:INFO:Uploading model into container now
2022-09-24 20:42:43,925:INFO:create_model_container: 13
2022-09-24 20:42:43,925:INFO:master_model_container: 13
2022-09-24 20:42:43,925:INFO:display_container: 2
2022-09-24 20:42:43,925:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=123, verbose=0, warm_start=False)
2022-09-24 20:42:43,925:INFO:create_model() succesfully completed......................................
2022-09-24 20:42:44,082:INFO:SubProcess create_model() end ==================================
2022-09-24 20:42:44,082:INFO:Creating metrics dataframe
2022-09-24 20:42:44,111:INFO:Initializing AdaBoost Regressor
2022-09-24 20:42:44,112:INFO:Total runtime is 0.6085737705230714 minutes
2022-09-24 20:42:44,130:INFO:SubProcess create_model() called ==================================
2022-09-24 20:42:44,131:INFO:Initializing create_model()
2022-09-24 20:42:44,131:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AE3A92B0>, return_train_score=False, kwargs={})
2022-09-24 20:42:44,132:INFO:Checking exceptions
2022-09-24 20:42:44,133:INFO:Importing libraries
2022-09-24 20:42:44,133:INFO:Copying training dataset
2022-09-24 20:42:44,137:INFO:Defining folds
2022-09-24 20:42:44,137:INFO:Declaring metric variables
2022-09-24 20:42:44,164:INFO:Importing untrained model
2022-09-24 20:42:44,192:INFO:AdaBoost Regressor Imported succesfully
2022-09-24 20:42:44,262:INFO:Starting cross validation
2022-09-24 20:42:44,264:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:42:44,819:INFO:Calculating mean and std
2022-09-24 20:42:44,821:INFO:Creating metrics dataframe
2022-09-24 20:42:44,829:INFO:Uploading results into container
2022-09-24 20:42:44,829:INFO:Uploading model into container now
2022-09-24 20:42:44,829:INFO:create_model_container: 14
2022-09-24 20:42:44,830:INFO:master_model_container: 14
2022-09-24 20:42:44,830:INFO:display_container: 2
2022-09-24 20:42:44,831:INFO:AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=123)
2022-09-24 20:42:44,831:INFO:create_model() succesfully completed......................................
2022-09-24 20:42:44,962:INFO:SubProcess create_model() end ==================================
2022-09-24 20:42:44,962:INFO:Creating metrics dataframe
2022-09-24 20:42:44,997:INFO:Initializing Gradient Boosting Regressor
2022-09-24 20:42:44,998:INFO:Total runtime is 0.6233348011970521 minutes
2022-09-24 20:42:45,016:INFO:SubProcess create_model() called ==================================
2022-09-24 20:42:45,017:INFO:Initializing create_model()
2022-09-24 20:42:45,018:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AE3A92B0>, return_train_score=False, kwargs={})
2022-09-24 20:42:45,018:INFO:Checking exceptions
2022-09-24 20:42:45,019:INFO:Importing libraries
2022-09-24 20:42:45,019:INFO:Copying training dataset
2022-09-24 20:42:45,023:INFO:Defining folds
2022-09-24 20:42:45,023:INFO:Declaring metric variables
2022-09-24 20:42:45,048:INFO:Importing untrained model
2022-09-24 20:42:45,076:INFO:Gradient Boosting Regressor Imported succesfully
2022-09-24 20:42:45,134:INFO:Starting cross validation
2022-09-24 20:42:45,136:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:42:45,492:INFO:Calculating mean and std
2022-09-24 20:42:45,494:INFO:Creating metrics dataframe
2022-09-24 20:42:45,504:INFO:Uploading results into container
2022-09-24 20:42:45,504:INFO:Uploading model into container now
2022-09-24 20:42:45,505:INFO:create_model_container: 15
2022-09-24 20:42:45,505:INFO:master_model_container: 15
2022-09-24 20:42:45,505:INFO:display_container: 2
2022-09-24 20:42:45,507:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=123, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2022-09-24 20:42:45,507:INFO:create_model() succesfully completed......................................
2022-09-24 20:42:45,717:INFO:SubProcess create_model() end ==================================
2022-09-24 20:42:45,717:INFO:Creating metrics dataframe
2022-09-24 20:42:45,757:INFO:Initializing Light Gradient Boosting Machine
2022-09-24 20:42:45,757:INFO:Total runtime is 0.6359967867533367 minutes
2022-09-24 20:42:45,781:INFO:SubProcess create_model() called ==================================
2022-09-24 20:42:45,782:INFO:Initializing create_model()
2022-09-24 20:42:45,783:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AE3A92B0>, return_train_score=False, kwargs={})
2022-09-24 20:42:45,783:INFO:Checking exceptions
2022-09-24 20:42:45,784:INFO:Importing libraries
2022-09-24 20:42:45,784:INFO:Copying training dataset
2022-09-24 20:42:45,787:INFO:Defining folds
2022-09-24 20:42:45,787:INFO:Declaring metric variables
2022-09-24 20:42:45,805:INFO:Importing untrained model
2022-09-24 20:42:45,835:INFO:Light Gradient Boosting Machine Imported succesfully
2022-09-24 20:42:45,892:INFO:Starting cross validation
2022-09-24 20:42:45,894:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:42:46,137:INFO:Calculating mean and std
2022-09-24 20:42:46,140:INFO:Creating metrics dataframe
2022-09-24 20:42:46,151:INFO:Uploading results into container
2022-09-24 20:42:46,151:INFO:Uploading model into container now
2022-09-24 20:42:46,151:INFO:create_model_container: 16
2022-09-24 20:42:46,152:INFO:master_model_container: 16
2022-09-24 20:42:46,152:INFO:display_container: 2
2022-09-24 20:42:46,154:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-09-24 20:42:46,154:INFO:create_model() succesfully completed......................................
2022-09-24 20:42:46,323:INFO:SubProcess create_model() end ==================================
2022-09-24 20:42:46,324:INFO:Creating metrics dataframe
2022-09-24 20:42:46,361:INFO:Initializing Dummy Regressor
2022-09-24 20:42:46,362:INFO:Total runtime is 0.6460597078005474 minutes
2022-09-24 20:42:46,384:INFO:SubProcess create_model() called ==================================
2022-09-24 20:42:46,386:INFO:Initializing create_model()
2022-09-24 20:42:46,387:INFO:create_model(estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8AE3A92B0>, return_train_score=False, kwargs={})
2022-09-24 20:42:46,388:INFO:Checking exceptions
2022-09-24 20:42:46,389:INFO:Importing libraries
2022-09-24 20:42:46,389:INFO:Copying training dataset
2022-09-24 20:42:46,392:INFO:Defining folds
2022-09-24 20:42:46,393:INFO:Declaring metric variables
2022-09-24 20:42:46,413:INFO:Importing untrained model
2022-09-24 20:42:46,441:INFO:Dummy Regressor Imported succesfully
2022-09-24 20:42:46,499:INFO:Starting cross validation
2022-09-24 20:42:46,500:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 20:42:46,636:INFO:Calculating mean and std
2022-09-24 20:42:46,639:INFO:Creating metrics dataframe
2022-09-24 20:42:46,649:INFO:Uploading results into container
2022-09-24 20:42:46,650:INFO:Uploading model into container now
2022-09-24 20:42:46,650:INFO:create_model_container: 17
2022-09-24 20:42:46,651:INFO:master_model_container: 17
2022-09-24 20:42:46,651:INFO:display_container: 2
2022-09-24 20:42:46,652:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2022-09-24 20:42:46,652:INFO:create_model() succesfully completed......................................
2022-09-24 20:42:46,853:INFO:SubProcess create_model() end ==================================
2022-09-24 20:42:46,854:INFO:Creating metrics dataframe
2022-09-24 20:42:46,937:INFO:Initializing create_model()
2022-09-24 20:42:46,938:INFO:create_model(estimator=AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-09-24 20:42:46,938:INFO:Checking exceptions
2022-09-24 20:42:46,939:INFO:Importing libraries
2022-09-24 20:42:46,939:INFO:Copying training dataset
2022-09-24 20:42:46,940:INFO:Defining folds
2022-09-24 20:42:46,940:INFO:Declaring metric variables
2022-09-24 20:42:46,940:INFO:Importing untrained model
2022-09-24 20:42:46,940:INFO:Declaring custom model
2022-09-24 20:42:46,941:INFO:AdaBoost Regressor Imported succesfully
2022-09-24 20:42:46,942:INFO:Cross validation set to False
2022-09-24 20:42:46,942:INFO:Fitting Model
2022-09-24 20:42:47,147:INFO:AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=123)
2022-09-24 20:42:47,147:INFO:create_models() succesfully completed......................................
2022-09-24 20:42:47,389:INFO:create_model_container: 17
2022-09-24 20:42:47,390:INFO:master_model_container: 17
2022-09-24 20:42:47,390:INFO:display_container: 2
2022-09-24 20:42:47,391:INFO:AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=123)
2022-09-24 20:42:47,392:INFO:compare_models() succesfully completed......................................
2022-09-24 21:19:44,385:INFO:Initializing get_config()
2022-09-24 21:19:44,385:INFO:get_config(variable=data_before_preprocess)
2022-09-24 21:20:25,961:INFO:Initializing get_config()
2022-09-24 21:20:25,961:INFO:get_config(variable=data_before_preprocess)
2022-09-24 21:21:16,386:INFO:Initializing get_config()
2022-09-24 21:21:16,386:INFO:get_config(variable=data_before_preprocess)
2022-09-24 21:25:43,232:INFO:Initializing get_config()
2022-09-24 21:25:43,232:INFO:get_config(variable=data_before_preprocess)
2022-09-24 21:26:29,881:INFO:PyCaret Supervised Module
2022-09-24 21:26:29,881:INFO:ML Usecase: regression
2022-09-24 21:26:29,881:INFO:version 2.3.10
2022-09-24 21:26:29,881:INFO:Initializing setup()
2022-09-24 21:26:29,881:INFO:setup(target=mpy, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-09-24 21:26:29,881:INFO:Checking environment
2022-09-24 21:26:29,881:INFO:python_version: 3.8.13
2022-09-24 21:26:29,881:INFO:python_build: ('default', 'Mar 28 2022 06:59:08')
2022-09-24 21:26:29,881:INFO:machine: AMD64
2022-09-24 21:26:29,881:INFO:platform: Windows-10-10.0.22000-SP0
2022-09-24 21:26:29,881:INFO:Memory: svmem(total=12710350848, available=3365318656, percent=73.5, used=9345032192, free=3365318656)
2022-09-24 21:26:29,881:INFO:Physical Core: 4
2022-09-24 21:26:29,881:INFO:Logical Core: 8
2022-09-24 21:26:29,881:INFO:Checking libraries
2022-09-24 21:26:29,881:INFO:pd==1.4.4
2022-09-24 21:26:29,881:INFO:numpy==1.20.3
2022-09-24 21:26:29,881:INFO:sklearn==0.23.2
2022-09-24 21:26:29,881:INFO:lightgbm==3.3.2
2022-09-24 21:26:29,881:WARNING:catboost not found
2022-09-24 21:26:29,881:INFO:xgboost==1.6.2
2022-09-24 21:26:29,881:INFO:mlflow==1.29.0
2022-09-24 21:26:29,881:INFO:Checking Exceptions
2022-09-24 21:26:29,881:INFO:Declaring global variables
2022-09-24 21:26:29,881:INFO:USI: 851e
2022-09-24 21:26:29,881:INFO:pycaret_globals: {'fold_param', 'imputation_regressor', 'log_plots_param', '_internal_pipeline', 'fix_imbalance_method_param', 'experiment__', 'X_test', 'seed', 'y_test', 'data_before_preprocess', '_gpu_n_jobs_param', 'gpu_param', 'y', '_all_models', '_ml_usecase', 'transform_target_param', 'n_jobs_param', 'stratify_param', '_all_models_internal', 'X', '_available_plots', 'fold_groups_param', 'exp_name_log', 'prep_pipe', 'transform_target_method_param', '_all_metrics', 'iterative_imputation_iters_param', 'y_train', 'pycaret_globals', 'fold_groups_param_full', 'fold_generator', 'imputation_classifier', 'logging_param', 'fix_imbalance_param', 'html_param', 'X_train', 'USI', 'display_container', 'master_model_container', 'fold_shuffle_param', 'dashboard_logger', 'create_model_container', 'target_param'}
2022-09-24 21:26:29,881:INFO:Preparing display monitor
2022-09-24 21:26:29,881:INFO:Preparing display monitor
2022-09-24 21:26:29,897:INFO:Importing libraries
2022-09-24 21:26:29,897:INFO:Copying data for preprocessing
2022-09-24 21:26:29,912:INFO:Declaring preprocessing parameters
2022-09-24 21:26:29,928:INFO:Creating preprocessing pipeline
2022-09-24 21:26:29,940:INFO:Preprocessing pipeline created successfully
2022-09-24 21:26:29,941:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-09-24 21:26:29,941:INFO:Creating global containers
2022-09-24 21:26:29,944:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-09-24 21:26:31,972:WARNING:Couldn't import catboost.CatBoostRegressor
2022-09-24 21:26:32,196:WARNING:Couldn't import catboost.CatBoostRegressor
2022-09-24 21:26:32,196:INFO:Creating grid variables
2022-09-24 21:26:32,219:INFO:create_model_container: 0
2022-09-24 21:26:32,220:INFO:master_model_container: 0
2022-09-24 21:26:32,220:INFO:display_container: 1
2022-09-24 21:26:32,233:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='mpy',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='me...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='mpy')),
                ('fix_perfect', Remove_100(target='mpy')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-09-24 21:26:32,233:INFO:setup() succesfully completed......................................
2022-09-24 21:26:34,753:INFO:Initializing get_config()
2022-09-24 21:26:34,753:INFO:get_config(variable=data_before_preprocess)
2022-09-24 21:26:34,764:INFO:Global variable: data_before_preprocess returned as       BPPD     BAPD  Caudal_gas_MSCFD  Presion_cabeza_psi  \
0   273.00  5187.00             120.0                 160   
1   306.90   251.10              33.0                 180   
2    30.00   970.00              51.0                 200   
3   311.64   324.36              28.0                 210   
4   412.48  4743.52              48.0                 200   
..     ...      ...               ...                 ...   
72   91.98  2974.02              22.0                 195   
73  295.80  4634.20              12.0                 156   
74  239.96  3188.04              50.7                 195   
75  992.00  3968.00              41.3                 170   
76  279.90  2830.10              45.0                 220   

    Temperatura_cabeza_F  Salinidad_ppm  CO2_gas  bicarbonatos_ppm  \
0                    220          76600        7               240   
1                    130          74000        0               281   
2                    192          73000       15               120   
3                    160          36200       15               220   
4                    150          82200       20               400   
..                   ...            ...      ...               ...   
72                   200          55000       10               370   
73                   200          60200        4               360   
74                   210          52800        5               360   
75                   210          69500        3               300   
76                   197          53200        7               300   

    dosis_IC_ppm  Fe_ppm       mpy  
0             50   45.90   8.41626  
1             50   77.11   0.10024  
2             90   54.00   7.17844  
3             40   56.21   1.50500  
4             40   54.80   0.71894  
..           ...     ...       ...  
72            70   34.90  10.20184  
73            40   71.82   3.36175  
74            80   40.90   0.76563  
75            50   48.90   3.65412  
76            80   32.00  10.41508  

[77 rows x 11 columns]
2022-09-24 21:26:34,764:INFO:get_config() succesfully completed......................................
2022-09-24 21:26:34,765:INFO:Initializing get_config()
2022-09-24 21:26:34,765:INFO:get_config(variable=prep_pipe)
2022-09-24 21:26:34,771:INFO:Global variable: prep_pipe returned as Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='mpy',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='me...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='mpy')),
                ('fix_perfect', Remove_100(target='mpy')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-09-24 21:26:34,773:INFO:get_config() succesfully completed......................................
2022-09-24 21:27:34,511:INFO:PyCaret Supervised Module
2022-09-24 21:27:34,512:INFO:ML Usecase: regression
2022-09-24 21:27:34,512:INFO:version 2.3.10
2022-09-24 21:27:34,512:INFO:Initializing setup()
2022-09-24 21:27:34,512:INFO:setup(target=mpy, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-09-24 21:27:34,513:INFO:Checking environment
2022-09-24 21:27:34,513:INFO:python_version: 3.8.13
2022-09-24 21:27:34,513:INFO:python_build: ('default', 'Mar 28 2022 06:59:08')
2022-09-24 21:27:34,513:INFO:machine: AMD64
2022-09-24 21:27:34,513:INFO:platform: Windows-10-10.0.22000-SP0
2022-09-24 21:27:34,513:INFO:Memory: svmem(total=12710350848, available=3002195968, percent=76.4, used=9708154880, free=3002195968)
2022-09-24 21:27:34,514:INFO:Physical Core: 4
2022-09-24 21:27:34,514:INFO:Logical Core: 8
2022-09-24 21:27:34,514:INFO:Checking libraries
2022-09-24 21:27:34,514:INFO:pd==1.4.4
2022-09-24 21:27:34,514:INFO:numpy==1.20.3
2022-09-24 21:27:34,514:INFO:sklearn==0.23.2
2022-09-24 21:27:34,514:INFO:lightgbm==3.3.2
2022-09-24 21:27:34,517:WARNING:catboost not found
2022-09-24 21:27:34,517:INFO:xgboost==1.6.2
2022-09-24 21:27:34,517:INFO:mlflow==1.29.0
2022-09-24 21:27:34,518:INFO:Checking Exceptions
2022-09-24 21:27:34,518:INFO:Declaring global variables
2022-09-24 21:27:34,518:INFO:USI: feb9
2022-09-24 21:27:34,518:INFO:pycaret_globals: {'fold_param', 'imputation_regressor', 'log_plots_param', '_internal_pipeline', 'fix_imbalance_method_param', 'experiment__', 'X_test', 'seed', 'y_test', 'data_before_preprocess', '_gpu_n_jobs_param', 'gpu_param', 'y', '_all_models', '_ml_usecase', 'transform_target_param', 'n_jobs_param', 'stratify_param', '_all_models_internal', 'X', '_available_plots', 'fold_groups_param', 'exp_name_log', 'prep_pipe', 'transform_target_method_param', '_all_metrics', 'iterative_imputation_iters_param', 'y_train', 'pycaret_globals', 'fold_groups_param_full', 'fold_generator', 'imputation_classifier', 'logging_param', 'fix_imbalance_param', 'html_param', 'X_train', 'USI', 'display_container', 'master_model_container', 'fold_shuffle_param', 'dashboard_logger', 'create_model_container', 'target_param'}
2022-09-24 21:27:34,519:INFO:Preparing display monitor
2022-09-24 21:27:34,519:INFO:Preparing display monitor
2022-09-24 21:27:34,560:INFO:Importing libraries
2022-09-24 21:27:34,561:INFO:Copying data for preprocessing
2022-09-24 21:27:34,581:INFO:Declaring preprocessing parameters
2022-09-24 21:27:34,584:INFO:Creating preprocessing pipeline
2022-09-24 21:27:34,594:INFO:Preprocessing pipeline created successfully
2022-09-24 21:27:34,595:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-09-24 21:27:34,595:INFO:Creating global containers
2022-09-24 21:27:34,596:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-09-24 21:27:36,425:WARNING:Couldn't import catboost.CatBoostRegressor
2022-09-24 21:27:36,646:WARNING:Couldn't import catboost.CatBoostRegressor
2022-09-24 21:27:36,646:INFO:Creating grid variables
2022-09-24 21:27:36,662:INFO:create_model_container: 0
2022-09-24 21:27:36,662:INFO:master_model_container: 0
2022-09-24 21:27:36,662:INFO:display_container: 1
2022-09-24 21:27:36,662:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='mpy',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='me...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='mpy')),
                ('fix_perfect', Remove_100(target='mpy')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-09-24 21:27:36,662:INFO:setup() succesfully completed......................................
2022-09-24 21:27:38,444:INFO:Initializing get_config()
2022-09-24 21:27:38,444:INFO:get_config(variable=data_before_preprocess)
2022-09-24 21:27:38,454:INFO:Global variable: data_before_preprocess returned as       BPPD     BAPD  Caudal_gas_MSCFD  Presion_cabeza_psi  \
0   273.00  5187.00             120.0                 160   
1   306.90   251.10              33.0                 180   
2    30.00   970.00              51.0                 200   
3   311.64   324.36              28.0                 210   
4   412.48  4743.52              48.0                 200   
..     ...      ...               ...                 ...   
72   91.98  2974.02              22.0                 195   
73  295.80  4634.20              12.0                 156   
74  239.96  3188.04              50.7                 195   
75  992.00  3968.00              41.3                 170   
76  279.90  2830.10              45.0                 220   

    Temperatura_cabeza_F  Salinidad_ppm  CO2_gas  bicarbonatos_ppm  \
0                    220          76600        7               240   
1                    130          74000        0               281   
2                    192          73000       15               120   
3                    160          36200       15               220   
4                    150          82200       20               400   
..                   ...            ...      ...               ...   
72                   200          55000       10               370   
73                   200          60200        4               360   
74                   210          52800        5               360   
75                   210          69500        3               300   
76                   197          53200        7               300   

    dosis_IC_ppm  Fe_ppm       mpy  
0             50   45.90   8.41626  
1             50   77.11   0.10024  
2             90   54.00   7.17844  
3             40   56.21   1.50500  
4             40   54.80   0.71894  
..           ...     ...       ...  
72            70   34.90  10.20184  
73            40   71.82   3.36175  
74            80   40.90   0.76563  
75            50   48.90   3.65412  
76            80   32.00  10.41508  

[77 rows x 11 columns]
2022-09-24 21:27:38,455:INFO:get_config() succesfully completed......................................
2022-09-24 21:27:38,455:INFO:Initializing get_config()
2022-09-24 21:27:38,455:INFO:get_config(variable=prep_pipe)
2022-09-24 21:27:38,473:INFO:Global variable: prep_pipe returned as Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='mpy',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='me...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='mpy')),
                ('fix_perfect', Remove_100(target='mpy')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-09-24 21:27:38,473:INFO:get_config() succesfully completed......................................
2022-09-24 21:28:08,957:INFO:Initializing compare_models()
2022-09-24 21:28:08,957:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2022-09-24 21:28:08,957:INFO:Checking exceptions
2022-09-24 21:28:08,957:INFO:Preparing display monitor
2022-09-24 21:28:08,957:INFO:Preparing display monitor
2022-09-24 21:28:09,004:INFO:Initializing Linear Regression
2022-09-24 21:28:09,004:INFO:Total runtime is 0.0 minutes
2022-09-24 21:28:09,020:INFO:SubProcess create_model() called ==================================
2022-09-24 21:28:09,020:INFO:Initializing create_model()
2022-09-24 21:28:09,020:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002183304E4F0>, return_train_score=False, kwargs={})
2022-09-24 21:28:09,020:INFO:Checking exceptions
2022-09-24 21:28:09,020:INFO:Importing libraries
2022-09-24 21:28:09,020:INFO:Copying training dataset
2022-09-24 21:28:09,020:INFO:Defining folds
2022-09-24 21:28:09,020:INFO:Declaring metric variables
2022-09-24 21:28:09,020:INFO:Importing untrained model
2022-09-24 21:28:09,035:INFO:Linear Regression Imported succesfully
2022-09-24 21:28:09,067:INFO:Starting cross validation
2022-09-24 21:28:09,067:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:28:24,398:INFO:Calculating mean and std
2022-09-24 21:28:24,401:INFO:Creating metrics dataframe
2022-09-24 21:28:24,418:INFO:Uploading results into container
2022-09-24 21:28:24,418:INFO:Uploading model into container now
2022-09-24 21:28:24,422:INFO:create_model_container: 1
2022-09-24 21:28:24,424:INFO:master_model_container: 1
2022-09-24 21:28:24,424:INFO:display_container: 2
2022-09-24 21:28:24,425:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2022-09-24 21:28:24,425:INFO:create_model() succesfully completed......................................
2022-09-24 21:28:25,075:INFO:SubProcess create_model() end ==================================
2022-09-24 21:28:25,076:INFO:Creating metrics dataframe
2022-09-24 21:28:25,109:INFO:Initializing Lasso Regression
2022-09-24 21:28:25,109:INFO:Total runtime is 0.26841925382614135 minutes
2022-09-24 21:28:25,141:INFO:SubProcess create_model() called ==================================
2022-09-24 21:28:25,142:INFO:Initializing create_model()
2022-09-24 21:28:25,143:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002183304E4F0>, return_train_score=False, kwargs={})
2022-09-24 21:28:25,144:INFO:Checking exceptions
2022-09-24 21:28:25,144:INFO:Importing libraries
2022-09-24 21:28:25,146:INFO:Copying training dataset
2022-09-24 21:28:25,149:INFO:Defining folds
2022-09-24 21:28:25,149:INFO:Declaring metric variables
2022-09-24 21:28:25,180:INFO:Importing untrained model
2022-09-24 21:28:25,210:INFO:Lasso Regression Imported succesfully
2022-09-24 21:28:25,288:INFO:Starting cross validation
2022-09-24 21:28:25,293:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:28:25,514:INFO:Calculating mean and std
2022-09-24 21:28:25,517:INFO:Creating metrics dataframe
2022-09-24 21:28:25,534:INFO:Uploading results into container
2022-09-24 21:28:25,534:INFO:Uploading model into container now
2022-09-24 21:28:25,535:INFO:create_model_container: 2
2022-09-24 21:28:25,535:INFO:master_model_container: 2
2022-09-24 21:28:25,536:INFO:display_container: 2
2022-09-24 21:28:25,537:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=123,
      selection='cyclic', tol=0.0001, warm_start=False)
2022-09-24 21:28:25,540:INFO:create_model() succesfully completed......................................
2022-09-24 21:28:25,947:INFO:SubProcess create_model() end ==================================
2022-09-24 21:28:25,947:INFO:Creating metrics dataframe
2022-09-24 21:28:25,981:INFO:Initializing Ridge Regression
2022-09-24 21:28:25,981:INFO:Total runtime is 0.28294707139333086 minutes
2022-09-24 21:28:26,011:INFO:SubProcess create_model() called ==================================
2022-09-24 21:28:26,013:INFO:Initializing create_model()
2022-09-24 21:28:26,013:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002183304E4F0>, return_train_score=False, kwargs={})
2022-09-24 21:28:26,014:INFO:Checking exceptions
2022-09-24 21:28:26,014:INFO:Importing libraries
2022-09-24 21:28:26,014:INFO:Copying training dataset
2022-09-24 21:28:26,018:INFO:Defining folds
2022-09-24 21:28:26,019:INFO:Declaring metric variables
2022-09-24 21:28:26,052:INFO:Importing untrained model
2022-09-24 21:28:26,082:INFO:Ridge Regression Imported succesfully
2022-09-24 21:28:26,144:INFO:Starting cross validation
2022-09-24 21:28:26,151:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:28:26,344:INFO:Calculating mean and std
2022-09-24 21:28:26,346:INFO:Creating metrics dataframe
2022-09-24 21:28:26,356:INFO:Uploading results into container
2022-09-24 21:28:26,356:INFO:Uploading model into container now
2022-09-24 21:28:26,357:INFO:create_model_container: 3
2022-09-24 21:28:26,357:INFO:master_model_container: 3
2022-09-24 21:28:26,358:INFO:display_container: 2
2022-09-24 21:28:26,359:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=123, solver='auto', tol=0.001)
2022-09-24 21:28:26,359:INFO:create_model() succesfully completed......................................
2022-09-24 21:28:26,690:INFO:SubProcess create_model() end ==================================
2022-09-24 21:28:26,690:INFO:Creating metrics dataframe
2022-09-24 21:28:26,722:INFO:Initializing Elastic Net
2022-09-24 21:28:26,722:INFO:Total runtime is 0.29529736439387 minutes
2022-09-24 21:28:26,747:INFO:SubProcess create_model() called ==================================
2022-09-24 21:28:26,748:INFO:Initializing create_model()
2022-09-24 21:28:26,748:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002183304E4F0>, return_train_score=False, kwargs={})
2022-09-24 21:28:26,749:INFO:Checking exceptions
2022-09-24 21:28:26,749:INFO:Importing libraries
2022-09-24 21:28:26,749:INFO:Copying training dataset
2022-09-24 21:28:26,752:INFO:Defining folds
2022-09-24 21:28:26,753:INFO:Declaring metric variables
2022-09-24 21:28:26,774:INFO:Importing untrained model
2022-09-24 21:28:26,795:INFO:Elastic Net Imported succesfully
2022-09-24 21:28:26,853:INFO:Starting cross validation
2022-09-24 21:28:26,855:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:28:27,034:INFO:Calculating mean and std
2022-09-24 21:28:27,036:INFO:Creating metrics dataframe
2022-09-24 21:28:27,043:INFO:Uploading results into container
2022-09-24 21:28:27,043:INFO:Uploading model into container now
2022-09-24 21:28:27,044:INFO:create_model_container: 4
2022-09-24 21:28:27,044:INFO:master_model_container: 4
2022-09-24 21:28:27,044:INFO:display_container: 2
2022-09-24 21:28:27,046:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=123, selection='cyclic', tol=0.0001, warm_start=False)
2022-09-24 21:28:27,046:INFO:create_model() succesfully completed......................................
2022-09-24 21:28:27,395:INFO:SubProcess create_model() end ==================================
2022-09-24 21:28:27,395:INFO:Creating metrics dataframe
2022-09-24 21:28:27,433:INFO:Initializing Least Angle Regression
2022-09-24 21:28:27,434:INFO:Total runtime is 0.3071656505266825 minutes
2022-09-24 21:28:27,468:INFO:SubProcess create_model() called ==================================
2022-09-24 21:28:27,471:INFO:Initializing create_model()
2022-09-24 21:28:27,473:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002183304E4F0>, return_train_score=False, kwargs={})
2022-09-24 21:28:27,474:INFO:Checking exceptions
2022-09-24 21:28:27,474:INFO:Importing libraries
2022-09-24 21:28:27,475:INFO:Copying training dataset
2022-09-24 21:28:27,480:INFO:Defining folds
2022-09-24 21:28:27,481:INFO:Declaring metric variables
2022-09-24 21:28:27,515:INFO:Importing untrained model
2022-09-24 21:28:27,575:INFO:Least Angle Regression Imported succesfully
2022-09-24 21:28:27,657:INFO:Starting cross validation
2022-09-24 21:28:27,659:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:28:27,875:INFO:Calculating mean and std
2022-09-24 21:28:27,878:INFO:Creating metrics dataframe
2022-09-24 21:28:27,888:INFO:Uploading results into container
2022-09-24 21:28:27,888:INFO:Uploading model into container now
2022-09-24 21:28:27,889:INFO:create_model_container: 5
2022-09-24 21:28:27,889:INFO:master_model_container: 5
2022-09-24 21:28:27,889:INFO:display_container: 2
2022-09-24 21:28:27,890:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize=True, precompute='auto',
     random_state=123, verbose=False)
2022-09-24 21:28:27,891:INFO:create_model() succesfully completed......................................
2022-09-24 21:28:28,171:INFO:SubProcess create_model() end ==================================
2022-09-24 21:28:28,171:INFO:Creating metrics dataframe
2022-09-24 21:28:28,194:INFO:Initializing Lasso Least Angle Regression
2022-09-24 21:28:28,194:INFO:Total runtime is 0.31983177661895745 minutes
2022-09-24 21:28:28,217:INFO:SubProcess create_model() called ==================================
2022-09-24 21:28:28,218:INFO:Initializing create_model()
2022-09-24 21:28:28,218:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002183304E4F0>, return_train_score=False, kwargs={})
2022-09-24 21:28:28,219:INFO:Checking exceptions
2022-09-24 21:28:28,219:INFO:Importing libraries
2022-09-24 21:28:28,220:INFO:Copying training dataset
2022-09-24 21:28:28,222:INFO:Defining folds
2022-09-24 21:28:28,223:INFO:Declaring metric variables
2022-09-24 21:28:28,250:INFO:Importing untrained model
2022-09-24 21:28:28,268:INFO:Lasso Least Angle Regression Imported succesfully
2022-09-24 21:28:28,321:INFO:Starting cross validation
2022-09-24 21:28:28,322:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:28:28,465:INFO:Calculating mean and std
2022-09-24 21:28:28,466:INFO:Creating metrics dataframe
2022-09-24 21:28:28,474:INFO:Uploading results into container
2022-09-24 21:28:28,474:INFO:Uploading model into container now
2022-09-24 21:28:28,475:INFO:create_model_container: 6
2022-09-24 21:28:28,475:INFO:master_model_container: 6
2022-09-24 21:28:28,476:INFO:display_container: 2
2022-09-24 21:28:28,477:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize=True,
          positive=False, precompute='auto', random_state=123, verbose=False)
2022-09-24 21:28:28,478:INFO:create_model() succesfully completed......................................
2022-09-24 21:28:28,782:INFO:SubProcess create_model() end ==================================
2022-09-24 21:28:28,782:INFO:Creating metrics dataframe
2022-09-24 21:28:28,822:INFO:Initializing Orthogonal Matching Pursuit
2022-09-24 21:28:28,822:INFO:Total runtime is 0.3302920778592427 minutes
2022-09-24 21:28:28,844:INFO:SubProcess create_model() called ==================================
2022-09-24 21:28:28,845:INFO:Initializing create_model()
2022-09-24 21:28:28,845:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002183304E4F0>, return_train_score=False, kwargs={})
2022-09-24 21:28:28,846:INFO:Checking exceptions
2022-09-24 21:28:28,846:INFO:Importing libraries
2022-09-24 21:28:28,847:INFO:Copying training dataset
2022-09-24 21:28:28,850:INFO:Defining folds
2022-09-24 21:28:28,851:INFO:Declaring metric variables
2022-09-24 21:28:28,878:INFO:Importing untrained model
2022-09-24 21:28:28,911:INFO:Orthogonal Matching Pursuit Imported succesfully
2022-09-24 21:28:29,004:INFO:Starting cross validation
2022-09-24 21:28:29,006:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:28:29,197:INFO:Calculating mean and std
2022-09-24 21:28:29,199:INFO:Creating metrics dataframe
2022-09-24 21:28:29,208:INFO:Uploading results into container
2022-09-24 21:28:29,208:INFO:Uploading model into container now
2022-09-24 21:28:29,213:INFO:create_model_container: 7
2022-09-24 21:28:29,213:INFO:master_model_container: 7
2022-09-24 21:28:29,213:INFO:display_container: 2
2022-09-24 21:28:29,214:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None)
2022-09-24 21:28:29,215:INFO:create_model() succesfully completed......................................
2022-09-24 21:28:29,574:INFO:SubProcess create_model() end ==================================
2022-09-24 21:28:29,574:INFO:Creating metrics dataframe
2022-09-24 21:28:29,604:INFO:Initializing Bayesian Ridge
2022-09-24 21:28:29,605:INFO:Total runtime is 0.3433553377787272 minutes
2022-09-24 21:28:29,625:INFO:SubProcess create_model() called ==================================
2022-09-24 21:28:29,627:INFO:Initializing create_model()
2022-09-24 21:28:29,627:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002183304E4F0>, return_train_score=False, kwargs={})
2022-09-24 21:28:29,627:INFO:Checking exceptions
2022-09-24 21:28:29,628:INFO:Importing libraries
2022-09-24 21:28:29,628:INFO:Copying training dataset
2022-09-24 21:28:29,632:INFO:Defining folds
2022-09-24 21:28:29,633:INFO:Declaring metric variables
2022-09-24 21:28:29,664:INFO:Importing untrained model
2022-09-24 21:28:29,697:INFO:Bayesian Ridge Imported succesfully
2022-09-24 21:28:29,783:INFO:Starting cross validation
2022-09-24 21:28:29,785:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:28:29,965:INFO:Calculating mean and std
2022-09-24 21:28:29,967:INFO:Creating metrics dataframe
2022-09-24 21:28:29,974:INFO:Uploading results into container
2022-09-24 21:28:29,974:INFO:Uploading model into container now
2022-09-24 21:28:29,974:INFO:create_model_container: 8
2022-09-24 21:28:29,975:INFO:master_model_container: 8
2022-09-24 21:28:29,975:INFO:display_container: 2
2022-09-24 21:28:29,976:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False)
2022-09-24 21:28:29,976:INFO:create_model() succesfully completed......................................
2022-09-24 21:28:30,232:INFO:SubProcess create_model() end ==================================
2022-09-24 21:28:30,232:INFO:Creating metrics dataframe
2022-09-24 21:28:30,252:INFO:Initializing Passive Aggressive Regressor
2022-09-24 21:28:30,252:INFO:Total runtime is 0.35412902832031246 minutes
2022-09-24 21:28:30,271:INFO:SubProcess create_model() called ==================================
2022-09-24 21:28:30,271:INFO:Initializing create_model()
2022-09-24 21:28:30,272:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002183304E4F0>, return_train_score=False, kwargs={})
2022-09-24 21:28:30,272:INFO:Checking exceptions
2022-09-24 21:28:30,273:INFO:Importing libraries
2022-09-24 21:28:30,273:INFO:Copying training dataset
2022-09-24 21:28:30,276:INFO:Defining folds
2022-09-24 21:28:30,277:INFO:Declaring metric variables
2022-09-24 21:28:30,291:INFO:Importing untrained model
2022-09-24 21:28:30,311:INFO:Passive Aggressive Regressor Imported succesfully
2022-09-24 21:28:30,356:INFO:Starting cross validation
2022-09-24 21:28:30,357:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:28:30,509:INFO:Calculating mean and std
2022-09-24 21:28:30,512:INFO:Creating metrics dataframe
2022-09-24 21:28:30,521:INFO:Uploading results into container
2022-09-24 21:28:30,521:INFO:Uploading model into container now
2022-09-24 21:28:30,522:INFO:create_model_container: 9
2022-09-24 21:28:30,522:INFO:master_model_container: 9
2022-09-24 21:28:30,522:INFO:display_container: 2
2022-09-24 21:28:30,524:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=123, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-09-24 21:28:30,524:INFO:create_model() succesfully completed......................................
2022-09-24 21:28:30,797:INFO:SubProcess create_model() end ==================================
2022-09-24 21:28:30,798:INFO:Creating metrics dataframe
2022-09-24 21:28:30,818:INFO:Initializing Huber Regressor
2022-09-24 21:28:30,818:INFO:Total runtime is 0.36357045173645014 minutes
2022-09-24 21:28:30,835:INFO:SubProcess create_model() called ==================================
2022-09-24 21:28:30,835:INFO:Initializing create_model()
2022-09-24 21:28:30,836:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002183304E4F0>, return_train_score=False, kwargs={})
2022-09-24 21:28:30,836:INFO:Checking exceptions
2022-09-24 21:28:30,836:INFO:Importing libraries
2022-09-24 21:28:30,836:INFO:Copying training dataset
2022-09-24 21:28:30,837:INFO:Defining folds
2022-09-24 21:28:30,838:INFO:Declaring metric variables
2022-09-24 21:28:30,857:INFO:Importing untrained model
2022-09-24 21:28:30,870:INFO:Huber Regressor Imported succesfully
2022-09-24 21:28:30,917:INFO:Starting cross validation
2022-09-24 21:28:30,920:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:28:31,180:INFO:Calculating mean and std
2022-09-24 21:28:31,182:INFO:Creating metrics dataframe
2022-09-24 21:28:31,189:INFO:Uploading results into container
2022-09-24 21:28:31,189:INFO:Uploading model into container now
2022-09-24 21:28:31,189:INFO:create_model_container: 10
2022-09-24 21:28:31,190:INFO:master_model_container: 10
2022-09-24 21:28:31,190:INFO:display_container: 2
2022-09-24 21:28:31,190:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-24 21:28:31,190:INFO:create_model() succesfully completed......................................
2022-09-24 21:28:31,607:INFO:SubProcess create_model() end ==================================
2022-09-24 21:28:31,608:INFO:Creating metrics dataframe
2022-09-24 21:28:31,645:INFO:Initializing K Neighbors Regressor
2022-09-24 21:28:31,645:INFO:Total runtime is 0.3773516734441121 minutes
2022-09-24 21:28:31,674:INFO:SubProcess create_model() called ==================================
2022-09-24 21:28:31,676:INFO:Initializing create_model()
2022-09-24 21:28:31,676:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002183304E4F0>, return_train_score=False, kwargs={})
2022-09-24 21:28:31,677:INFO:Checking exceptions
2022-09-24 21:28:31,677:INFO:Importing libraries
2022-09-24 21:28:31,677:INFO:Copying training dataset
2022-09-24 21:28:31,680:INFO:Defining folds
2022-09-24 21:28:31,681:INFO:Declaring metric variables
2022-09-24 21:28:31,707:INFO:Importing untrained model
2022-09-24 21:28:31,750:INFO:K Neighbors Regressor Imported succesfully
2022-09-24 21:28:31,810:INFO:Starting cross validation
2022-09-24 21:28:31,812:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:28:32,002:INFO:Calculating mean and std
2022-09-24 21:28:32,003:INFO:Creating metrics dataframe
2022-09-24 21:28:32,014:INFO:Uploading results into container
2022-09-24 21:28:32,014:INFO:Uploading model into container now
2022-09-24 21:28:32,015:INFO:create_model_container: 11
2022-09-24 21:28:32,015:INFO:master_model_container: 11
2022-09-24 21:28:32,015:INFO:display_container: 2
2022-09-24 21:28:32,017:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2022-09-24 21:28:32,017:INFO:create_model() succesfully completed......................................
2022-09-24 21:28:32,334:INFO:SubProcess create_model() end ==================================
2022-09-24 21:28:32,335:INFO:Creating metrics dataframe
2022-09-24 21:28:32,373:INFO:Initializing Decision Tree Regressor
2022-09-24 21:28:32,373:INFO:Total runtime is 0.38948589563369745 minutes
2022-09-24 21:28:32,393:INFO:SubProcess create_model() called ==================================
2022-09-24 21:28:32,394:INFO:Initializing create_model()
2022-09-24 21:28:32,394:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002183304E4F0>, return_train_score=False, kwargs={})
2022-09-24 21:28:32,394:INFO:Checking exceptions
2022-09-24 21:28:32,395:INFO:Importing libraries
2022-09-24 21:28:32,396:INFO:Copying training dataset
2022-09-24 21:28:32,399:INFO:Defining folds
2022-09-24 21:28:32,399:INFO:Declaring metric variables
2022-09-24 21:28:32,423:INFO:Importing untrained model
2022-09-24 21:28:32,443:INFO:Decision Tree Regressor Imported succesfully
2022-09-24 21:28:32,490:INFO:Starting cross validation
2022-09-24 21:28:32,492:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:28:32,663:INFO:Calculating mean and std
2022-09-24 21:28:32,665:INFO:Creating metrics dataframe
2022-09-24 21:28:32,675:INFO:Uploading results into container
2022-09-24 21:28:32,675:INFO:Uploading model into container now
2022-09-24 21:28:32,675:INFO:create_model_container: 12
2022-09-24 21:28:32,676:INFO:master_model_container: 12
2022-09-24 21:28:32,676:INFO:display_container: 2
2022-09-24 21:28:32,677:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=123, splitter='best')
2022-09-24 21:28:32,677:INFO:create_model() succesfully completed......................................
2022-09-24 21:28:32,979:INFO:SubProcess create_model() end ==================================
2022-09-24 21:28:32,979:INFO:Creating metrics dataframe
2022-09-24 21:28:33,004:INFO:Initializing Random Forest Regressor
2022-09-24 21:28:33,004:INFO:Total runtime is 0.3999911824862162 minutes
2022-09-24 21:28:33,019:INFO:SubProcess create_model() called ==================================
2022-09-24 21:28:33,020:INFO:Initializing create_model()
2022-09-24 21:28:33,020:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002183304E4F0>, return_train_score=False, kwargs={})
2022-09-24 21:28:33,020:INFO:Checking exceptions
2022-09-24 21:28:33,020:INFO:Importing libraries
2022-09-24 21:28:33,021:INFO:Copying training dataset
2022-09-24 21:28:33,024:INFO:Defining folds
2022-09-24 21:28:33,024:INFO:Declaring metric variables
2022-09-24 21:28:33,045:INFO:Importing untrained model
2022-09-24 21:28:33,062:INFO:Random Forest Regressor Imported succesfully
2022-09-24 21:28:33,103:INFO:Starting cross validation
2022-09-24 21:28:33,105:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:28:34,711:INFO:Calculating mean and std
2022-09-24 21:28:34,713:INFO:Creating metrics dataframe
2022-09-24 21:28:34,720:INFO:Uploading results into container
2022-09-24 21:28:34,720:INFO:Uploading model into container now
2022-09-24 21:28:34,720:INFO:create_model_container: 13
2022-09-24 21:28:34,721:INFO:master_model_container: 13
2022-09-24 21:28:34,721:INFO:display_container: 2
2022-09-24 21:28:34,722:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=123, verbose=0, warm_start=False)
2022-09-24 21:28:34,722:INFO:create_model() succesfully completed......................................
2022-09-24 21:28:35,060:INFO:SubProcess create_model() end ==================================
2022-09-24 21:28:35,062:INFO:Creating metrics dataframe
2022-09-24 21:28:35,110:INFO:Initializing Extra Trees Regressor
2022-09-24 21:28:35,110:INFO:Total runtime is 0.43509287039438876 minutes
2022-09-24 21:28:35,137:INFO:SubProcess create_model() called ==================================
2022-09-24 21:28:35,138:INFO:Initializing create_model()
2022-09-24 21:28:35,139:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002183304E4F0>, return_train_score=False, kwargs={})
2022-09-24 21:28:35,141:INFO:Checking exceptions
2022-09-24 21:28:35,142:INFO:Importing libraries
2022-09-24 21:28:35,142:INFO:Copying training dataset
2022-09-24 21:28:35,145:INFO:Defining folds
2022-09-24 21:28:35,146:INFO:Declaring metric variables
2022-09-24 21:28:35,178:INFO:Importing untrained model
2022-09-24 21:28:35,226:INFO:Extra Trees Regressor Imported succesfully
2022-09-24 21:28:35,324:INFO:Starting cross validation
2022-09-24 21:28:35,327:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:28:37,162:INFO:Calculating mean and std
2022-09-24 21:28:37,165:INFO:Creating metrics dataframe
2022-09-24 21:28:37,173:INFO:Uploading results into container
2022-09-24 21:28:37,173:INFO:Uploading model into container now
2022-09-24 21:28:37,174:INFO:create_model_container: 14
2022-09-24 21:28:37,174:INFO:master_model_container: 14
2022-09-24 21:28:37,174:INFO:display_container: 2
2022-09-24 21:28:37,176:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=123, verbose=0, warm_start=False)
2022-09-24 21:28:37,176:INFO:create_model() succesfully completed......................................
2022-09-24 21:28:37,471:INFO:SubProcess create_model() end ==================================
2022-09-24 21:28:37,471:INFO:Creating metrics dataframe
2022-09-24 21:28:37,513:INFO:Initializing AdaBoost Regressor
2022-09-24 21:28:37,513:INFO:Total runtime is 0.4751418908437092 minutes
2022-09-24 21:28:37,532:INFO:SubProcess create_model() called ==================================
2022-09-24 21:28:37,533:INFO:Initializing create_model()
2022-09-24 21:28:37,533:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002183304E4F0>, return_train_score=False, kwargs={})
2022-09-24 21:28:37,534:INFO:Checking exceptions
2022-09-24 21:28:37,534:INFO:Importing libraries
2022-09-24 21:28:37,535:INFO:Copying training dataset
2022-09-24 21:28:37,538:INFO:Defining folds
2022-09-24 21:28:37,539:INFO:Declaring metric variables
2022-09-24 21:28:37,564:INFO:Importing untrained model
2022-09-24 21:28:37,592:INFO:AdaBoost Regressor Imported succesfully
2022-09-24 21:28:37,671:INFO:Starting cross validation
2022-09-24 21:28:37,676:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:28:38,418:INFO:Calculating mean and std
2022-09-24 21:28:38,421:INFO:Creating metrics dataframe
2022-09-24 21:28:38,439:INFO:Uploading results into container
2022-09-24 21:28:38,440:INFO:Uploading model into container now
2022-09-24 21:28:38,440:INFO:create_model_container: 15
2022-09-24 21:28:38,441:INFO:master_model_container: 15
2022-09-24 21:28:38,441:INFO:display_container: 2
2022-09-24 21:28:38,441:INFO:AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=123)
2022-09-24 21:28:38,442:INFO:create_model() succesfully completed......................................
2022-09-24 21:28:38,836:INFO:SubProcess create_model() end ==================================
2022-09-24 21:28:38,836:INFO:Creating metrics dataframe
2022-09-24 21:28:38,867:INFO:Initializing Gradient Boosting Regressor
2022-09-24 21:28:38,867:INFO:Total runtime is 0.4977093458175658 minutes
2022-09-24 21:28:38,899:INFO:SubProcess create_model() called ==================================
2022-09-24 21:28:38,900:INFO:Initializing create_model()
2022-09-24 21:28:38,901:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002183304E4F0>, return_train_score=False, kwargs={})
2022-09-24 21:28:38,901:INFO:Checking exceptions
2022-09-24 21:28:38,902:INFO:Importing libraries
2022-09-24 21:28:38,902:INFO:Copying training dataset
2022-09-24 21:28:38,905:INFO:Defining folds
2022-09-24 21:28:38,906:INFO:Declaring metric variables
2022-09-24 21:28:38,927:INFO:Importing untrained model
2022-09-24 21:28:38,968:INFO:Gradient Boosting Regressor Imported succesfully
2022-09-24 21:28:39,051:INFO:Starting cross validation
2022-09-24 21:28:39,054:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:28:39,420:INFO:Calculating mean and std
2022-09-24 21:28:39,421:INFO:Creating metrics dataframe
2022-09-24 21:28:39,436:INFO:Uploading results into container
2022-09-24 21:28:39,437:INFO:Uploading model into container now
2022-09-24 21:28:39,438:INFO:create_model_container: 16
2022-09-24 21:28:39,438:INFO:master_model_container: 16
2022-09-24 21:28:39,438:INFO:display_container: 2
2022-09-24 21:28:39,440:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=123, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2022-09-24 21:28:39,441:INFO:create_model() succesfully completed......................................
2022-09-24 21:28:39,723:INFO:SubProcess create_model() end ==================================
2022-09-24 21:28:39,723:INFO:Creating metrics dataframe
2022-09-24 21:28:39,770:INFO:Initializing Extreme Gradient Boosting
2022-09-24 21:28:39,770:INFO:Total runtime is 0.5127563714981078 minutes
2022-09-24 21:28:39,801:INFO:SubProcess create_model() called ==================================
2022-09-24 21:28:39,802:INFO:Initializing create_model()
2022-09-24 21:28:39,803:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002183304E4F0>, return_train_score=False, kwargs={})
2022-09-24 21:28:39,803:INFO:Checking exceptions
2022-09-24 21:28:39,804:INFO:Importing libraries
2022-09-24 21:28:39,804:INFO:Copying training dataset
2022-09-24 21:28:39,809:INFO:Defining folds
2022-09-24 21:28:39,810:INFO:Declaring metric variables
2022-09-24 21:28:39,834:INFO:Importing untrained model
2022-09-24 21:28:39,871:INFO:Extreme Gradient Boosting Imported succesfully
2022-09-24 21:28:39,947:INFO:Starting cross validation
2022-09-24 21:28:39,953:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:28:41,855:INFO:Calculating mean and std
2022-09-24 21:28:41,858:INFO:Creating metrics dataframe
2022-09-24 21:28:41,909:INFO:Uploading results into container
2022-09-24 21:28:41,910:INFO:Uploading model into container now
2022-09-24 21:28:41,910:INFO:create_model_container: 17
2022-09-24 21:28:41,910:INFO:master_model_container: 17
2022-09-24 21:28:41,910:INFO:display_container: 2
2022-09-24 21:28:41,944:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror',
             predictor=None, random_state=123, reg_alpha=None, ...)
2022-09-24 21:28:41,945:INFO:create_model() succesfully completed......................................
2022-09-24 21:28:42,319:INFO:SubProcess create_model() end ==================================
2022-09-24 21:28:42,320:INFO:Creating metrics dataframe
2022-09-24 21:28:42,371:INFO:Initializing Light Gradient Boosting Machine
2022-09-24 21:28:42,371:INFO:Total runtime is 0.5561071157455444 minutes
2022-09-24 21:28:42,397:INFO:SubProcess create_model() called ==================================
2022-09-24 21:28:42,398:INFO:Initializing create_model()
2022-09-24 21:28:42,399:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002183304E4F0>, return_train_score=False, kwargs={})
2022-09-24 21:28:42,399:INFO:Checking exceptions
2022-09-24 21:28:42,399:INFO:Importing libraries
2022-09-24 21:28:42,399:INFO:Copying training dataset
2022-09-24 21:28:42,402:INFO:Defining folds
2022-09-24 21:28:42,404:INFO:Declaring metric variables
2022-09-24 21:28:42,435:INFO:Importing untrained model
2022-09-24 21:28:42,465:INFO:Light Gradient Boosting Machine Imported succesfully
2022-09-24 21:28:42,534:INFO:Starting cross validation
2022-09-24 21:28:42,537:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:28:42,875:INFO:Calculating mean and std
2022-09-24 21:28:42,877:INFO:Creating metrics dataframe
2022-09-24 21:28:42,891:INFO:Uploading results into container
2022-09-24 21:28:42,892:INFO:Uploading model into container now
2022-09-24 21:28:42,892:INFO:create_model_container: 18
2022-09-24 21:28:42,893:INFO:master_model_container: 18
2022-09-24 21:28:42,893:INFO:display_container: 2
2022-09-24 21:28:42,896:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-09-24 21:28:42,897:INFO:create_model() succesfully completed......................................
2022-09-24 21:28:43,219:INFO:SubProcess create_model() end ==================================
2022-09-24 21:28:43,219:INFO:Creating metrics dataframe
2022-09-24 21:28:43,262:INFO:Initializing Dummy Regressor
2022-09-24 21:28:43,262:INFO:Total runtime is 0.5709673682848612 minutes
2022-09-24 21:28:43,285:INFO:SubProcess create_model() called ==================================
2022-09-24 21:28:43,286:INFO:Initializing create_model()
2022-09-24 21:28:43,287:INFO:create_model(estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002183304E4F0>, return_train_score=False, kwargs={})
2022-09-24 21:28:43,288:INFO:Checking exceptions
2022-09-24 21:28:43,288:INFO:Importing libraries
2022-09-24 21:28:43,288:INFO:Copying training dataset
2022-09-24 21:28:43,291:INFO:Defining folds
2022-09-24 21:28:43,291:INFO:Declaring metric variables
2022-09-24 21:28:43,319:INFO:Importing untrained model
2022-09-24 21:28:43,346:INFO:Dummy Regressor Imported succesfully
2022-09-24 21:28:43,419:INFO:Starting cross validation
2022-09-24 21:28:43,421:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:28:43,602:INFO:Calculating mean and std
2022-09-24 21:28:43,605:INFO:Creating metrics dataframe
2022-09-24 21:28:43,616:INFO:Uploading results into container
2022-09-24 21:28:43,617:INFO:Uploading model into container now
2022-09-24 21:28:43,617:INFO:create_model_container: 19
2022-09-24 21:28:43,618:INFO:master_model_container: 19
2022-09-24 21:28:43,618:INFO:display_container: 2
2022-09-24 21:28:43,619:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2022-09-24 21:28:43,619:INFO:create_model() succesfully completed......................................
2022-09-24 21:28:44,030:INFO:SubProcess create_model() end ==================================
2022-09-24 21:28:44,030:INFO:Creating metrics dataframe
2022-09-24 21:28:44,174:INFO:Initializing create_model()
2022-09-24 21:28:44,175:INFO:create_model(estimator=HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-09-24 21:28:44,176:INFO:Checking exceptions
2022-09-24 21:28:44,176:INFO:Importing libraries
2022-09-24 21:28:44,176:INFO:Copying training dataset
2022-09-24 21:28:44,177:INFO:Defining folds
2022-09-24 21:28:44,180:INFO:Declaring metric variables
2022-09-24 21:28:44,180:INFO:Importing untrained model
2022-09-24 21:28:44,180:INFO:Declaring custom model
2022-09-24 21:28:44,182:INFO:Huber Regressor Imported succesfully
2022-09-24 21:28:44,183:INFO:Cross validation set to False
2022-09-24 21:28:44,183:INFO:Fitting Model
2022-09-24 21:28:44,376:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-24 21:28:44,376:INFO:create_models() succesfully completed......................................
2022-09-24 21:28:44,805:INFO:create_model_container: 19
2022-09-24 21:28:44,805:INFO:master_model_container: 19
2022-09-24 21:28:44,806:INFO:display_container: 2
2022-09-24 21:28:44,807:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-24 21:28:44,807:INFO:compare_models() succesfully completed......................................
2022-09-24 21:31:01,348:INFO:PyCaret Supervised Module
2022-09-24 21:31:01,348:INFO:ML Usecase: regression
2022-09-24 21:31:01,348:INFO:version 2.3.10
2022-09-24 21:31:01,348:INFO:Initializing setup()
2022-09-24 21:31:01,348:INFO:setup(target=mpy, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-09-24 21:31:01,348:INFO:Checking environment
2022-09-24 21:31:01,348:INFO:python_version: 3.8.13
2022-09-24 21:31:01,348:INFO:python_build: ('default', 'Mar 28 2022 06:59:08')
2022-09-24 21:31:01,348:INFO:machine: AMD64
2022-09-24 21:31:01,348:INFO:platform: Windows-10-10.0.22000-SP0
2022-09-24 21:31:01,348:INFO:Memory: svmem(total=12710350848, available=2374307840, percent=81.3, used=10336043008, free=2374307840)
2022-09-24 21:31:01,348:INFO:Physical Core: 4
2022-09-24 21:31:01,348:INFO:Logical Core: 8
2022-09-24 21:31:01,348:INFO:Checking libraries
2022-09-24 21:31:01,348:INFO:pd==1.4.4
2022-09-24 21:31:01,348:INFO:numpy==1.20.3
2022-09-24 21:31:01,348:INFO:sklearn==0.23.2
2022-09-24 21:31:01,348:INFO:lightgbm==3.3.2
2022-09-24 21:31:01,348:WARNING:catboost not found
2022-09-24 21:31:01,348:INFO:xgboost==1.6.2
2022-09-24 21:31:01,348:INFO:mlflow==1.29.0
2022-09-24 21:31:01,348:INFO:Checking Exceptions
2022-09-24 21:31:01,348:INFO:Declaring global variables
2022-09-24 21:31:01,348:INFO:USI: 4eb6
2022-09-24 21:31:01,348:INFO:pycaret_globals: {'fold_param', 'imputation_regressor', 'log_plots_param', '_internal_pipeline', 'fix_imbalance_method_param', 'experiment__', 'X_test', 'seed', 'y_test', 'data_before_preprocess', '_gpu_n_jobs_param', 'gpu_param', 'y', '_all_models', '_ml_usecase', 'transform_target_param', 'n_jobs_param', 'stratify_param', '_all_models_internal', 'X', '_available_plots', 'fold_groups_param', 'exp_name_log', 'prep_pipe', 'transform_target_method_param', '_all_metrics', 'iterative_imputation_iters_param', 'y_train', 'pycaret_globals', 'fold_groups_param_full', 'fold_generator', 'imputation_classifier', 'logging_param', 'fix_imbalance_param', 'html_param', 'X_train', 'USI', 'display_container', 'master_model_container', 'fold_shuffle_param', 'dashboard_logger', 'create_model_container', 'target_param'}
2022-09-24 21:31:01,348:INFO:Preparing display monitor
2022-09-24 21:31:01,348:INFO:Preparing display monitor
2022-09-24 21:31:01,363:INFO:Importing libraries
2022-09-24 21:31:01,363:INFO:Copying data for preprocessing
2022-09-24 21:31:01,389:INFO:Declaring preprocessing parameters
2022-09-24 21:31:01,391:INFO:Creating preprocessing pipeline
2022-09-24 21:31:01,399:INFO:Preprocessing pipeline created successfully
2022-09-24 21:31:01,399:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-09-24 21:31:01,400:INFO:Creating global containers
2022-09-24 21:31:01,400:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-09-24 21:31:03,271:WARNING:Couldn't import catboost.CatBoostRegressor
2022-09-24 21:31:03,482:WARNING:Couldn't import catboost.CatBoostRegressor
2022-09-24 21:31:03,482:INFO:Creating grid variables
2022-09-24 21:31:03,498:INFO:create_model_container: 0
2022-09-24 21:31:03,498:INFO:master_model_container: 0
2022-09-24 21:31:03,498:INFO:display_container: 1
2022-09-24 21:31:03,498:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='mpy',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='me...
                                                  target='mpy')),
                ('P_transform', 'passthrough'), ('binn', 'passthrough'),
                ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='mpy')),
                ('fix_perfect', Remove_100(target='mpy')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-09-24 21:31:03,498:INFO:setup() succesfully completed......................................
2022-09-24 21:31:06,315:INFO:Initializing compare_models()
2022-09-24 21:31:06,316:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2022-09-24 21:31:06,316:INFO:Checking exceptions
2022-09-24 21:31:06,317:INFO:Preparing display monitor
2022-09-24 21:31:06,317:INFO:Preparing display monitor
2022-09-24 21:31:06,377:INFO:Initializing Linear Regression
2022-09-24 21:31:06,377:INFO:Total runtime is 1.662572224934896e-05 minutes
2022-09-24 21:31:06,391:INFO:SubProcess create_model() called ==================================
2022-09-24 21:31:06,392:INFO:Initializing create_model()
2022-09-24 21:31:06,392:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000021828A42340>, return_train_score=False, kwargs={})
2022-09-24 21:31:06,392:INFO:Checking exceptions
2022-09-24 21:31:06,393:INFO:Importing libraries
2022-09-24 21:31:06,393:INFO:Copying training dataset
2022-09-24 21:31:06,395:INFO:Defining folds
2022-09-24 21:31:06,396:INFO:Declaring metric variables
2022-09-24 21:31:06,422:INFO:Importing untrained model
2022-09-24 21:31:06,453:INFO:Linear Regression Imported succesfully
2022-09-24 21:31:06,508:INFO:Starting cross validation
2022-09-24 21:31:06,510:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:31:06,687:INFO:Calculating mean and std
2022-09-24 21:31:06,689:INFO:Creating metrics dataframe
2022-09-24 21:31:06,701:INFO:Uploading results into container
2022-09-24 21:31:06,702:INFO:Uploading model into container now
2022-09-24 21:31:06,702:INFO:create_model_container: 1
2022-09-24 21:31:06,702:INFO:master_model_container: 1
2022-09-24 21:31:06,702:INFO:display_container: 2
2022-09-24 21:31:06,703:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2022-09-24 21:31:06,703:INFO:create_model() succesfully completed......................................
2022-09-24 21:31:06,963:INFO:SubProcess create_model() end ==================================
2022-09-24 21:31:06,964:INFO:Creating metrics dataframe
2022-09-24 21:31:06,997:INFO:Initializing Lasso Regression
2022-09-24 21:31:06,997:INFO:Total runtime is 0.010350135962168374 minutes
2022-09-24 21:31:07,020:INFO:SubProcess create_model() called ==================================
2022-09-24 21:31:07,020:INFO:Initializing create_model()
2022-09-24 21:31:07,021:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000021828A42340>, return_train_score=False, kwargs={})
2022-09-24 21:31:07,021:INFO:Checking exceptions
2022-09-24 21:31:07,022:INFO:Importing libraries
2022-09-24 21:31:07,022:INFO:Copying training dataset
2022-09-24 21:31:07,024:INFO:Defining folds
2022-09-24 21:31:07,025:INFO:Declaring metric variables
2022-09-24 21:31:07,043:INFO:Importing untrained model
2022-09-24 21:31:07,060:INFO:Lasso Regression Imported succesfully
2022-09-24 21:31:07,087:INFO:Starting cross validation
2022-09-24 21:31:07,088:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:31:07,192:INFO:Calculating mean and std
2022-09-24 21:31:07,194:INFO:Creating metrics dataframe
2022-09-24 21:31:07,203:INFO:Uploading results into container
2022-09-24 21:31:07,203:INFO:Uploading model into container now
2022-09-24 21:31:07,203:INFO:create_model_container: 2
2022-09-24 21:31:07,203:INFO:master_model_container: 2
2022-09-24 21:31:07,204:INFO:display_container: 2
2022-09-24 21:31:07,205:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=123,
      selection='cyclic', tol=0.0001, warm_start=False)
2022-09-24 21:31:07,205:INFO:create_model() succesfully completed......................................
2022-09-24 21:31:07,440:INFO:SubProcess create_model() end ==================================
2022-09-24 21:31:07,440:INFO:Creating metrics dataframe
2022-09-24 21:31:07,455:INFO:Initializing Ridge Regression
2022-09-24 21:31:07,456:INFO:Total runtime is 0.018001604080200195 minutes
2022-09-24 21:31:07,469:INFO:SubProcess create_model() called ==================================
2022-09-24 21:31:07,470:INFO:Initializing create_model()
2022-09-24 21:31:07,470:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000021828A42340>, return_train_score=False, kwargs={})
2022-09-24 21:31:07,470:INFO:Checking exceptions
2022-09-24 21:31:07,471:INFO:Importing libraries
2022-09-24 21:31:07,471:INFO:Copying training dataset
2022-09-24 21:31:07,472:INFO:Defining folds
2022-09-24 21:31:07,472:INFO:Declaring metric variables
2022-09-24 21:31:07,486:INFO:Importing untrained model
2022-09-24 21:31:07,499:INFO:Ridge Regression Imported succesfully
2022-09-24 21:31:07,521:INFO:Starting cross validation
2022-09-24 21:31:07,522:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:31:07,605:INFO:Calculating mean and std
2022-09-24 21:31:07,606:INFO:Creating metrics dataframe
2022-09-24 21:31:07,612:INFO:Uploading results into container
2022-09-24 21:31:07,613:INFO:Uploading model into container now
2022-09-24 21:31:07,613:INFO:create_model_container: 3
2022-09-24 21:31:07,613:INFO:master_model_container: 3
2022-09-24 21:31:07,613:INFO:display_container: 2
2022-09-24 21:31:07,613:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=123, solver='auto', tol=0.001)
2022-09-24 21:31:07,613:INFO:create_model() succesfully completed......................................
2022-09-24 21:31:07,964:INFO:SubProcess create_model() end ==================================
2022-09-24 21:31:07,965:INFO:Creating metrics dataframe
2022-09-24 21:31:08,010:INFO:Initializing Elastic Net
2022-09-24 21:31:08,011:INFO:Total runtime is 0.027255400021870928 minutes
2022-09-24 21:31:08,027:INFO:SubProcess create_model() called ==================================
2022-09-24 21:31:08,027:INFO:Initializing create_model()
2022-09-24 21:31:08,027:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000021828A42340>, return_train_score=False, kwargs={})
2022-09-24 21:31:08,027:INFO:Checking exceptions
2022-09-24 21:31:08,027:INFO:Importing libraries
2022-09-24 21:31:08,027:INFO:Copying training dataset
2022-09-24 21:31:08,027:INFO:Defining folds
2022-09-24 21:31:08,027:INFO:Declaring metric variables
2022-09-24 21:31:08,064:INFO:Importing untrained model
2022-09-24 21:31:08,093:INFO:Elastic Net Imported succesfully
2022-09-24 21:31:08,149:INFO:Starting cross validation
2022-09-24 21:31:08,151:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:31:08,306:INFO:Calculating mean and std
2022-09-24 21:31:08,306:INFO:Creating metrics dataframe
2022-09-24 21:31:08,306:INFO:Uploading results into container
2022-09-24 21:31:08,306:INFO:Uploading model into container now
2022-09-24 21:31:08,306:INFO:create_model_container: 4
2022-09-24 21:31:08,306:INFO:master_model_container: 4
2022-09-24 21:31:08,306:INFO:display_container: 2
2022-09-24 21:31:08,321:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=123, selection='cyclic', tol=0.0001, warm_start=False)
2022-09-24 21:31:08,321:INFO:create_model() succesfully completed......................................
2022-09-24 21:31:08,534:INFO:SubProcess create_model() end ==================================
2022-09-24 21:31:08,534:INFO:Creating metrics dataframe
2022-09-24 21:31:08,550:INFO:Initializing Least Angle Regression
2022-09-24 21:31:08,550:INFO:Total runtime is 0.03623060385386149 minutes
2022-09-24 21:31:08,569:INFO:SubProcess create_model() called ==================================
2022-09-24 21:31:08,569:INFO:Initializing create_model()
2022-09-24 21:31:08,570:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000021828A42340>, return_train_score=False, kwargs={})
2022-09-24 21:31:08,570:INFO:Checking exceptions
2022-09-24 21:31:08,570:INFO:Importing libraries
2022-09-24 21:31:08,570:INFO:Copying training dataset
2022-09-24 21:31:08,571:INFO:Defining folds
2022-09-24 21:31:08,572:INFO:Declaring metric variables
2022-09-24 21:31:08,584:INFO:Importing untrained model
2022-09-24 21:31:08,598:INFO:Least Angle Regression Imported succesfully
2022-09-24 21:31:08,635:INFO:Starting cross validation
2022-09-24 21:31:08,637:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:31:09,278:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2022-09-24 21:31:09,294:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\joblib\externals\loky\process_executor.py", line 436, in _process_worker
    r = call_item()
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\joblib\externals\loky\process_executor.py", line 288, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\tabular.py", line 3200, in create_model_supervised
    scores = cross_validate(
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\joblib\parallel.py", line 1056, in __call__
    self.retrieve()
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\joblib\parallel.py", line 935, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\concurrent\futures\_base.py", line 444, in result
    return self.__get_result()
  File "C:\Users\saint\anaconda3\envs\myenv\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2022-09-24 21:31:09,294:INFO:Initializing create_model()
2022-09-24 21:31:09,294:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000021828A42340>, return_train_score=False, kwargs={})
2022-09-24 21:31:09,294:INFO:Checking exceptions
2022-09-24 21:31:09,294:INFO:Importing libraries
2022-09-24 21:31:09,294:INFO:Copying training dataset
2022-09-24 21:31:09,294:INFO:Defining folds
2022-09-24 21:31:09,294:INFO:Declaring metric variables
2022-09-24 21:31:09,308:INFO:Importing untrained model
2022-09-24 21:31:09,323:INFO:Least Angle Regression Imported succesfully
2022-09-24 21:31:09,343:INFO:Starting cross validation
2022-09-24 21:31:09,343:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:31:21,175:ERROR:create_model() for lar raised an exception or returned all 0.0:
2022-09-24 21:31:21,175:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\joblib\externals\loky\process_executor.py", line 436, in _process_worker
    r = call_item()
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\joblib\externals\loky\process_executor.py", line 288, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\tabular.py", line 2212, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\tabular.py", line 3200, in create_model_supervised
    scores = cross_validate(
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\joblib\parallel.py", line 1056, in __call__
    self.retrieve()
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\joblib\parallel.py", line 935, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "C:\Users\saint\anaconda3\envs\myenv\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "C:\Users\saint\anaconda3\envs\myenv\lib\concurrent\futures\_base.py", line 444, in result
    return self.__get_result()
  File "C:\Users\saint\anaconda3\envs\myenv\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2022-09-24 21:31:21,175:INFO:Initializing Lasso Least Angle Regression
2022-09-24 21:31:21,175:INFO:Total runtime is 0.24665000438690185 minutes
2022-09-24 21:31:21,188:INFO:SubProcess create_model() called ==================================
2022-09-24 21:31:21,189:INFO:Initializing create_model()
2022-09-24 21:31:21,189:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000021828A42340>, return_train_score=False, kwargs={})
2022-09-24 21:31:21,189:INFO:Checking exceptions
2022-09-24 21:31:21,189:INFO:Importing libraries
2022-09-24 21:31:21,190:INFO:Copying training dataset
2022-09-24 21:31:21,192:INFO:Defining folds
2022-09-24 21:31:21,192:INFO:Declaring metric variables
2022-09-24 21:31:21,204:INFO:Importing untrained model
2022-09-24 21:31:21,217:INFO:Lasso Least Angle Regression Imported succesfully
2022-09-24 21:31:21,244:INFO:Starting cross validation
2022-09-24 21:31:21,245:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:31:34,157:INFO:Calculating mean and std
2022-09-24 21:31:34,158:INFO:Creating metrics dataframe
2022-09-24 21:31:34,171:INFO:Uploading results into container
2022-09-24 21:31:34,171:INFO:Uploading model into container now
2022-09-24 21:31:34,172:INFO:create_model_container: 5
2022-09-24 21:31:34,172:INFO:master_model_container: 5
2022-09-24 21:31:34,173:INFO:display_container: 2
2022-09-24 21:31:34,174:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize=True,
          positive=False, precompute='auto', random_state=123, verbose=False)
2022-09-24 21:31:34,174:INFO:create_model() succesfully completed......................................
2022-09-24 21:31:34,481:INFO:SubProcess create_model() end ==================================
2022-09-24 21:31:34,481:INFO:Creating metrics dataframe
2022-09-24 21:31:34,500:INFO:Initializing Orthogonal Matching Pursuit
2022-09-24 21:31:34,501:INFO:Total runtime is 0.4687416632970174 minutes
2022-09-24 21:31:34,517:INFO:SubProcess create_model() called ==================================
2022-09-24 21:31:34,518:INFO:Initializing create_model()
2022-09-24 21:31:34,518:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000021828A42340>, return_train_score=False, kwargs={})
2022-09-24 21:31:34,518:INFO:Checking exceptions
2022-09-24 21:31:34,519:INFO:Importing libraries
2022-09-24 21:31:34,519:INFO:Copying training dataset
2022-09-24 21:31:34,520:INFO:Defining folds
2022-09-24 21:31:34,521:INFO:Declaring metric variables
2022-09-24 21:31:34,542:INFO:Importing untrained model
2022-09-24 21:31:34,560:INFO:Orthogonal Matching Pursuit Imported succesfully
2022-09-24 21:31:34,592:INFO:Starting cross validation
2022-09-24 21:31:34,594:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:31:34,760:INFO:Calculating mean and std
2022-09-24 21:31:34,763:INFO:Creating metrics dataframe
2022-09-24 21:31:34,772:INFO:Uploading results into container
2022-09-24 21:31:34,773:INFO:Uploading model into container now
2022-09-24 21:31:34,773:INFO:create_model_container: 6
2022-09-24 21:31:34,773:INFO:master_model_container: 6
2022-09-24 21:31:34,773:INFO:display_container: 2
2022-09-24 21:31:34,774:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None)
2022-09-24 21:31:34,775:INFO:create_model() succesfully completed......................................
2022-09-24 21:31:35,023:INFO:SubProcess create_model() end ==================================
2022-09-24 21:31:35,023:INFO:Creating metrics dataframe
2022-09-24 21:31:35,043:INFO:Initializing Bayesian Ridge
2022-09-24 21:31:35,044:INFO:Total runtime is 0.4778007388114929 minutes
2022-09-24 21:31:35,062:INFO:SubProcess create_model() called ==================================
2022-09-24 21:31:35,063:INFO:Initializing create_model()
2022-09-24 21:31:35,063:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000021828A42340>, return_train_score=False, kwargs={})
2022-09-24 21:31:35,063:INFO:Checking exceptions
2022-09-24 21:31:35,064:INFO:Importing libraries
2022-09-24 21:31:35,064:INFO:Copying training dataset
2022-09-24 21:31:35,067:INFO:Defining folds
2022-09-24 21:31:35,068:INFO:Declaring metric variables
2022-09-24 21:31:35,084:INFO:Importing untrained model
2022-09-24 21:31:35,103:INFO:Bayesian Ridge Imported succesfully
2022-09-24 21:31:35,147:INFO:Starting cross validation
2022-09-24 21:31:35,149:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:31:35,285:INFO:Calculating mean and std
2022-09-24 21:31:35,287:INFO:Creating metrics dataframe
2022-09-24 21:31:35,294:INFO:Uploading results into container
2022-09-24 21:31:35,294:INFO:Uploading model into container now
2022-09-24 21:31:35,295:INFO:create_model_container: 7
2022-09-24 21:31:35,295:INFO:master_model_container: 7
2022-09-24 21:31:35,296:INFO:display_container: 2
2022-09-24 21:31:35,296:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False)
2022-09-24 21:31:35,296:INFO:create_model() succesfully completed......................................
2022-09-24 21:31:35,516:INFO:SubProcess create_model() end ==================================
2022-09-24 21:31:35,516:INFO:Creating metrics dataframe
2022-09-24 21:31:35,533:INFO:Initializing Passive Aggressive Regressor
2022-09-24 21:31:35,534:INFO:Total runtime is 0.4859622518221537 minutes
2022-09-24 21:31:35,547:INFO:SubProcess create_model() called ==================================
2022-09-24 21:31:35,548:INFO:Initializing create_model()
2022-09-24 21:31:35,548:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000021828A42340>, return_train_score=False, kwargs={})
2022-09-24 21:31:35,548:INFO:Checking exceptions
2022-09-24 21:31:35,549:INFO:Importing libraries
2022-09-24 21:31:35,549:INFO:Copying training dataset
2022-09-24 21:31:35,552:INFO:Defining folds
2022-09-24 21:31:35,552:INFO:Declaring metric variables
2022-09-24 21:31:35,566:INFO:Importing untrained model
2022-09-24 21:31:35,579:INFO:Passive Aggressive Regressor Imported succesfully
2022-09-24 21:31:35,609:INFO:Starting cross validation
2022-09-24 21:31:35,610:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:31:35,739:INFO:Calculating mean and std
2022-09-24 21:31:35,741:INFO:Creating metrics dataframe
2022-09-24 21:31:35,748:INFO:Uploading results into container
2022-09-24 21:31:35,748:INFO:Uploading model into container now
2022-09-24 21:31:35,748:INFO:create_model_container: 8
2022-09-24 21:31:35,748:INFO:master_model_container: 8
2022-09-24 21:31:35,749:INFO:display_container: 2
2022-09-24 21:31:35,750:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=123, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-09-24 21:31:35,751:INFO:create_model() succesfully completed......................................
2022-09-24 21:31:35,994:INFO:SubProcess create_model() end ==================================
2022-09-24 21:31:35,995:INFO:Creating metrics dataframe
2022-09-24 21:31:36,012:INFO:Initializing Huber Regressor
2022-09-24 21:31:36,012:INFO:Total runtime is 0.49393151203791297 minutes
2022-09-24 21:31:36,027:INFO:SubProcess create_model() called ==================================
2022-09-24 21:31:36,028:INFO:Initializing create_model()
2022-09-24 21:31:36,028:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000021828A42340>, return_train_score=False, kwargs={})
2022-09-24 21:31:36,029:INFO:Checking exceptions
2022-09-24 21:31:36,029:INFO:Importing libraries
2022-09-24 21:31:36,029:INFO:Copying training dataset
2022-09-24 21:31:36,031:INFO:Defining folds
2022-09-24 21:31:36,031:INFO:Declaring metric variables
2022-09-24 21:31:36,049:INFO:Importing untrained model
2022-09-24 21:31:36,062:INFO:Huber Regressor Imported succesfully
2022-09-24 21:31:36,112:INFO:Starting cross validation
2022-09-24 21:31:36,114:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:31:36,338:INFO:Calculating mean and std
2022-09-24 21:31:36,340:INFO:Creating metrics dataframe
2022-09-24 21:31:36,346:INFO:Uploading results into container
2022-09-24 21:31:36,346:INFO:Uploading model into container now
2022-09-24 21:31:36,346:INFO:create_model_container: 9
2022-09-24 21:31:36,347:INFO:master_model_container: 9
2022-09-24 21:31:36,347:INFO:display_container: 2
2022-09-24 21:31:36,348:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-24 21:31:36,348:INFO:create_model() succesfully completed......................................
2022-09-24 21:31:36,575:INFO:SubProcess create_model() end ==================================
2022-09-24 21:31:36,575:INFO:Creating metrics dataframe
2022-09-24 21:31:36,601:INFO:Initializing K Neighbors Regressor
2022-09-24 21:31:36,601:INFO:Total runtime is 0.5037552555402119 minutes
2022-09-24 21:31:36,617:INFO:SubProcess create_model() called ==================================
2022-09-24 21:31:36,618:INFO:Initializing create_model()
2022-09-24 21:31:36,618:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000021828A42340>, return_train_score=False, kwargs={})
2022-09-24 21:31:36,618:INFO:Checking exceptions
2022-09-24 21:31:36,619:INFO:Importing libraries
2022-09-24 21:31:36,619:INFO:Copying training dataset
2022-09-24 21:31:36,620:INFO:Defining folds
2022-09-24 21:31:36,620:INFO:Declaring metric variables
2022-09-24 21:31:36,639:INFO:Importing untrained model
2022-09-24 21:31:36,655:INFO:K Neighbors Regressor Imported succesfully
2022-09-24 21:31:36,706:INFO:Starting cross validation
2022-09-24 21:31:36,707:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:31:36,851:INFO:Calculating mean and std
2022-09-24 21:31:36,853:INFO:Creating metrics dataframe
2022-09-24 21:31:36,859:INFO:Uploading results into container
2022-09-24 21:31:36,859:INFO:Uploading model into container now
2022-09-24 21:31:36,860:INFO:create_model_container: 10
2022-09-24 21:31:36,860:INFO:master_model_container: 10
2022-09-24 21:31:36,860:INFO:display_container: 2
2022-09-24 21:31:36,861:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2022-09-24 21:31:36,861:INFO:create_model() succesfully completed......................................
2022-09-24 21:31:37,083:INFO:SubProcess create_model() end ==================================
2022-09-24 21:31:37,083:INFO:Creating metrics dataframe
2022-09-24 21:31:37,101:INFO:Initializing Decision Tree Regressor
2022-09-24 21:31:37,101:INFO:Total runtime is 0.5120830297470093 minutes
2022-09-24 21:31:37,115:INFO:SubProcess create_model() called ==================================
2022-09-24 21:31:37,116:INFO:Initializing create_model()
2022-09-24 21:31:37,117:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000021828A42340>, return_train_score=False, kwargs={})
2022-09-24 21:31:37,117:INFO:Checking exceptions
2022-09-24 21:31:37,117:INFO:Importing libraries
2022-09-24 21:31:37,117:INFO:Copying training dataset
2022-09-24 21:31:37,120:INFO:Defining folds
2022-09-24 21:31:37,122:INFO:Declaring metric variables
2022-09-24 21:31:37,138:INFO:Importing untrained model
2022-09-24 21:31:37,151:INFO:Decision Tree Regressor Imported succesfully
2022-09-24 21:31:37,192:INFO:Starting cross validation
2022-09-24 21:31:37,193:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:31:37,307:INFO:Calculating mean and std
2022-09-24 21:31:37,309:INFO:Creating metrics dataframe
2022-09-24 21:31:37,317:INFO:Uploading results into container
2022-09-24 21:31:37,317:INFO:Uploading model into container now
2022-09-24 21:31:37,317:INFO:create_model_container: 11
2022-09-24 21:31:37,317:INFO:master_model_container: 11
2022-09-24 21:31:37,318:INFO:display_container: 2
2022-09-24 21:31:37,318:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=123, splitter='best')
2022-09-24 21:31:37,319:INFO:create_model() succesfully completed......................................
2022-09-24 21:31:37,560:INFO:SubProcess create_model() end ==================================
2022-09-24 21:31:37,560:INFO:Creating metrics dataframe
2022-09-24 21:31:37,579:INFO:Initializing Random Forest Regressor
2022-09-24 21:31:37,579:INFO:Total runtime is 0.5200450420379639 minutes
2022-09-24 21:31:37,593:INFO:SubProcess create_model() called ==================================
2022-09-24 21:31:37,594:INFO:Initializing create_model()
2022-09-24 21:31:37,595:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000021828A42340>, return_train_score=False, kwargs={})
2022-09-24 21:31:37,595:INFO:Checking exceptions
2022-09-24 21:31:37,595:INFO:Importing libraries
2022-09-24 21:31:37,596:INFO:Copying training dataset
2022-09-24 21:31:37,598:INFO:Defining folds
2022-09-24 21:31:37,598:INFO:Declaring metric variables
2022-09-24 21:31:37,617:INFO:Importing untrained model
2022-09-24 21:31:37,629:INFO:Random Forest Regressor Imported succesfully
2022-09-24 21:31:37,682:INFO:Starting cross validation
2022-09-24 21:31:37,685:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:31:38,994:INFO:Calculating mean and std
2022-09-24 21:31:38,996:INFO:Creating metrics dataframe
2022-09-24 21:31:39,002:INFO:Uploading results into container
2022-09-24 21:31:39,002:INFO:Uploading model into container now
2022-09-24 21:31:39,003:INFO:create_model_container: 12
2022-09-24 21:31:39,003:INFO:master_model_container: 12
2022-09-24 21:31:39,003:INFO:display_container: 2
2022-09-24 21:31:39,004:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=123, verbose=0, warm_start=False)
2022-09-24 21:31:39,005:INFO:create_model() succesfully completed......................................
2022-09-24 21:31:39,268:INFO:SubProcess create_model() end ==================================
2022-09-24 21:31:39,268:INFO:Creating metrics dataframe
2022-09-24 21:31:39,311:INFO:Initializing Extra Trees Regressor
2022-09-24 21:31:39,311:INFO:Total runtime is 0.5489178538322449 minutes
2022-09-24 21:31:39,328:INFO:SubProcess create_model() called ==================================
2022-09-24 21:31:39,329:INFO:Initializing create_model()
2022-09-24 21:31:39,330:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000021828A42340>, return_train_score=False, kwargs={})
2022-09-24 21:31:39,330:INFO:Checking exceptions
2022-09-24 21:31:39,331:INFO:Importing libraries
2022-09-24 21:31:39,331:INFO:Copying training dataset
2022-09-24 21:31:39,332:INFO:Defining folds
2022-09-24 21:31:39,333:INFO:Declaring metric variables
2022-09-24 21:31:39,350:INFO:Importing untrained model
2022-09-24 21:31:39,367:INFO:Extra Trees Regressor Imported succesfully
2022-09-24 21:31:39,410:INFO:Starting cross validation
2022-09-24 21:31:39,411:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:31:40,560:INFO:Calculating mean and std
2022-09-24 21:31:40,562:INFO:Creating metrics dataframe
2022-09-24 21:31:40,571:INFO:Uploading results into container
2022-09-24 21:31:40,571:INFO:Uploading model into container now
2022-09-24 21:31:40,571:INFO:create_model_container: 13
2022-09-24 21:31:40,572:INFO:master_model_container: 13
2022-09-24 21:31:40,572:INFO:display_container: 2
2022-09-24 21:31:40,573:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=123, verbose=0, warm_start=False)
2022-09-24 21:31:40,574:INFO:create_model() succesfully completed......................................
2022-09-24 21:31:40,839:INFO:SubProcess create_model() end ==================================
2022-09-24 21:31:40,839:INFO:Creating metrics dataframe
2022-09-24 21:31:40,870:INFO:Initializing AdaBoost Regressor
2022-09-24 21:31:40,871:INFO:Total runtime is 0.5748983383178711 minutes
2022-09-24 21:31:40,896:INFO:SubProcess create_model() called ==================================
2022-09-24 21:31:40,898:INFO:Initializing create_model()
2022-09-24 21:31:40,898:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000021828A42340>, return_train_score=False, kwargs={})
2022-09-24 21:31:40,899:INFO:Checking exceptions
2022-09-24 21:31:40,899:INFO:Importing libraries
2022-09-24 21:31:40,899:INFO:Copying training dataset
2022-09-24 21:31:40,902:INFO:Defining folds
2022-09-24 21:31:40,903:INFO:Declaring metric variables
2022-09-24 21:31:40,934:INFO:Importing untrained model
2022-09-24 21:31:40,956:INFO:AdaBoost Regressor Imported succesfully
2022-09-24 21:31:41,007:INFO:Starting cross validation
2022-09-24 21:31:41,010:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:31:41,561:INFO:Calculating mean and std
2022-09-24 21:31:41,564:INFO:Creating metrics dataframe
2022-09-24 21:31:41,575:INFO:Uploading results into container
2022-09-24 21:31:41,575:INFO:Uploading model into container now
2022-09-24 21:31:41,576:INFO:create_model_container: 14
2022-09-24 21:31:41,576:INFO:master_model_container: 14
2022-09-24 21:31:41,576:INFO:display_container: 2
2022-09-24 21:31:41,577:INFO:AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=123)
2022-09-24 21:31:41,578:INFO:create_model() succesfully completed......................................
2022-09-24 21:31:41,829:INFO:SubProcess create_model() end ==================================
2022-09-24 21:31:41,830:INFO:Creating metrics dataframe
2022-09-24 21:31:41,851:INFO:Initializing Gradient Boosting Regressor
2022-09-24 21:31:41,852:INFO:Total runtime is 0.591269302368164 minutes
2022-09-24 21:31:41,867:INFO:SubProcess create_model() called ==================================
2022-09-24 21:31:41,868:INFO:Initializing create_model()
2022-09-24 21:31:41,868:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000021828A42340>, return_train_score=False, kwargs={})
2022-09-24 21:31:41,869:INFO:Checking exceptions
2022-09-24 21:31:41,870:INFO:Importing libraries
2022-09-24 21:31:41,871:INFO:Copying training dataset
2022-09-24 21:31:41,873:INFO:Defining folds
2022-09-24 21:31:41,874:INFO:Declaring metric variables
2022-09-24 21:31:41,893:INFO:Importing untrained model
2022-09-24 21:31:41,920:INFO:Gradient Boosting Regressor Imported succesfully
2022-09-24 21:31:41,962:INFO:Starting cross validation
2022-09-24 21:31:41,965:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:31:42,259:INFO:Calculating mean and std
2022-09-24 21:31:42,261:INFO:Creating metrics dataframe
2022-09-24 21:31:42,268:INFO:Uploading results into container
2022-09-24 21:31:42,268:INFO:Uploading model into container now
2022-09-24 21:31:42,269:INFO:create_model_container: 15
2022-09-24 21:31:42,269:INFO:master_model_container: 15
2022-09-24 21:31:42,269:INFO:display_container: 2
2022-09-24 21:31:42,270:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=123, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2022-09-24 21:31:42,270:INFO:create_model() succesfully completed......................................
2022-09-24 21:31:42,496:INFO:SubProcess create_model() end ==================================
2022-09-24 21:31:42,496:INFO:Creating metrics dataframe
2022-09-24 21:31:42,517:INFO:Initializing Extreme Gradient Boosting
2022-09-24 21:31:42,517:INFO:Total runtime is 0.6023397048314412 minutes
2022-09-24 21:31:42,531:INFO:SubProcess create_model() called ==================================
2022-09-24 21:31:42,532:INFO:Initializing create_model()
2022-09-24 21:31:42,532:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000021828A42340>, return_train_score=False, kwargs={})
2022-09-24 21:31:42,532:INFO:Checking exceptions
2022-09-24 21:31:42,532:INFO:Importing libraries
2022-09-24 21:31:42,533:INFO:Copying training dataset
2022-09-24 21:31:42,534:INFO:Defining folds
2022-09-24 21:31:42,535:INFO:Declaring metric variables
2022-09-24 21:31:42,552:INFO:Importing untrained model
2022-09-24 21:31:42,570:INFO:Extreme Gradient Boosting Imported succesfully
2022-09-24 21:31:42,609:INFO:Starting cross validation
2022-09-24 21:31:42,612:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:31:43,651:INFO:Calculating mean and std
2022-09-24 21:31:43,653:INFO:Creating metrics dataframe
2022-09-24 21:31:43,660:INFO:Uploading results into container
2022-09-24 21:31:43,660:INFO:Uploading model into container now
2022-09-24 21:31:43,661:INFO:create_model_container: 16
2022-09-24 21:31:43,661:INFO:master_model_container: 16
2022-09-24 21:31:43,661:INFO:display_container: 2
2022-09-24 21:31:43,664:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror',
             predictor=None, random_state=123, reg_alpha=None, ...)
2022-09-24 21:31:43,665:INFO:create_model() succesfully completed......................................
2022-09-24 21:31:43,899:INFO:SubProcess create_model() end ==================================
2022-09-24 21:31:43,899:INFO:Creating metrics dataframe
2022-09-24 21:31:43,924:INFO:Initializing Light Gradient Boosting Machine
2022-09-24 21:31:43,924:INFO:Total runtime is 0.6257910291353861 minutes
2022-09-24 21:31:43,943:INFO:SubProcess create_model() called ==================================
2022-09-24 21:31:43,944:INFO:Initializing create_model()
2022-09-24 21:31:43,944:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000021828A42340>, return_train_score=False, kwargs={})
2022-09-24 21:31:43,944:INFO:Checking exceptions
2022-09-24 21:31:43,944:INFO:Importing libraries
2022-09-24 21:31:43,945:INFO:Copying training dataset
2022-09-24 21:31:43,946:INFO:Defining folds
2022-09-24 21:31:43,947:INFO:Declaring metric variables
2022-09-24 21:31:43,966:INFO:Importing untrained model
2022-09-24 21:31:43,983:INFO:Light Gradient Boosting Machine Imported succesfully
2022-09-24 21:31:44,033:INFO:Starting cross validation
2022-09-24 21:31:44,034:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:31:44,257:INFO:Calculating mean and std
2022-09-24 21:31:44,260:INFO:Creating metrics dataframe
2022-09-24 21:31:44,269:INFO:Uploading results into container
2022-09-24 21:31:44,269:INFO:Uploading model into container now
2022-09-24 21:31:44,269:INFO:create_model_container: 17
2022-09-24 21:31:44,270:INFO:master_model_container: 17
2022-09-24 21:31:44,270:INFO:display_container: 2
2022-09-24 21:31:44,271:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-09-24 21:31:44,271:INFO:create_model() succesfully completed......................................
2022-09-24 21:31:44,509:INFO:SubProcess create_model() end ==================================
2022-09-24 21:31:44,509:INFO:Creating metrics dataframe
2022-09-24 21:31:44,529:INFO:Initializing Dummy Regressor
2022-09-24 21:31:44,529:INFO:Total runtime is 0.6358807047208149 minutes
2022-09-24 21:31:44,541:INFO:SubProcess create_model() called ==================================
2022-09-24 21:31:44,542:INFO:Initializing create_model()
2022-09-24 21:31:44,542:INFO:create_model(estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000021828A42340>, return_train_score=False, kwargs={})
2022-09-24 21:31:44,543:INFO:Checking exceptions
2022-09-24 21:31:44,543:INFO:Importing libraries
2022-09-24 21:31:44,543:INFO:Copying training dataset
2022-09-24 21:31:44,545:INFO:Defining folds
2022-09-24 21:31:44,545:INFO:Declaring metric variables
2022-09-24 21:31:44,560:INFO:Importing untrained model
2022-09-24 21:31:44,575:INFO:Dummy Regressor Imported succesfully
2022-09-24 21:31:44,614:INFO:Starting cross validation
2022-09-24 21:31:44,616:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:31:44,714:INFO:Calculating mean and std
2022-09-24 21:31:44,716:INFO:Creating metrics dataframe
2022-09-24 21:31:44,721:INFO:Uploading results into container
2022-09-24 21:31:44,721:INFO:Uploading model into container now
2022-09-24 21:31:44,722:INFO:create_model_container: 18
2022-09-24 21:31:44,722:INFO:master_model_container: 18
2022-09-24 21:31:44,722:INFO:display_container: 2
2022-09-24 21:31:44,723:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2022-09-24 21:31:44,723:INFO:create_model() succesfully completed......................................
2022-09-24 21:31:45,008:INFO:SubProcess create_model() end ==================================
2022-09-24 21:31:45,008:INFO:Creating metrics dataframe
2022-09-24 21:31:45,071:INFO:Initializing create_model()
2022-09-24 21:31:45,072:INFO:create_model(estimator=AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-09-24 21:31:45,073:INFO:Checking exceptions
2022-09-24 21:31:45,074:INFO:Importing libraries
2022-09-24 21:31:45,076:INFO:Copying training dataset
2022-09-24 21:31:45,077:INFO:Defining folds
2022-09-24 21:31:45,078:INFO:Declaring metric variables
2022-09-24 21:31:45,078:INFO:Importing untrained model
2022-09-24 21:31:45,079:INFO:Declaring custom model
2022-09-24 21:31:45,079:INFO:AdaBoost Regressor Imported succesfully
2022-09-24 21:31:45,080:INFO:Cross validation set to False
2022-09-24 21:31:45,081:INFO:Fitting Model
2022-09-24 21:31:45,203:INFO:AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=123)
2022-09-24 21:31:45,203:INFO:create_models() succesfully completed......................................
2022-09-24 21:31:45,457:INFO:create_model_container: 18
2022-09-24 21:31:45,457:INFO:master_model_container: 18
2022-09-24 21:31:45,458:INFO:display_container: 2
2022-09-24 21:31:45,458:INFO:AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=123)
2022-09-24 21:31:45,459:INFO:compare_models() succesfully completed......................................
2022-09-24 21:32:16,893:INFO:Initializing create_model()
2022-09-24 21:32:16,893:INFO:create_model(estimator=huber, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-09-24 21:32:16,893:INFO:Checking exceptions
2022-09-24 21:32:16,893:INFO:Preparing display monitor
2022-09-24 21:32:16,924:INFO:Importing libraries
2022-09-24 21:32:16,939:INFO:Copying training dataset
2022-09-24 21:32:16,944:INFO:Defining folds
2022-09-24 21:32:16,944:INFO:Declaring metric variables
2022-09-24 21:32:16,961:INFO:Importing untrained model
2022-09-24 21:32:16,989:INFO:Huber Regressor Imported succesfully
2022-09-24 21:32:17,057:INFO:Starting cross validation
2022-09-24 21:32:17,057:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:32:17,341:INFO:Calculating mean and std
2022-09-24 21:32:17,357:INFO:Creating metrics dataframe
2022-09-24 21:32:17,372:INFO:Finalizing model
2022-09-24 21:32:17,442:INFO:Uploading results into container
2022-09-24 21:32:17,442:INFO:Uploading model into container now
2022-09-24 21:32:17,457:INFO:create_model_container: 19
2022-09-24 21:32:17,457:INFO:master_model_container: 19
2022-09-24 21:32:17,457:INFO:display_container: 3
2022-09-24 21:32:17,457:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-24 21:32:17,457:INFO:create_model() succesfully completed......................................
2022-09-24 21:32:21,474:INFO:Initializing tune_model()
2022-09-24 21:32:21,474:INFO:tune_model(estimator=HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), fold=None, round=4, n_iter=50, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, return_train_score=False, kwargs={})
2022-09-24 21:32:21,474:INFO:Checking exceptions
2022-09-24 21:32:21,474:INFO:Preparing display monitor
2022-09-24 21:32:21,522:INFO:Copying training dataset
2022-09-24 21:32:21,526:INFO:Checking base model
2022-09-24 21:32:21,527:INFO:Base model : Huber Regressor
2022-09-24 21:32:21,543:INFO:Declaring metric variables
2022-09-24 21:32:21,560:INFO:Defining Hyperparameters
2022-09-24 21:32:21,959:INFO:Tuning with n_jobs=-1
2022-09-24 21:32:21,959:INFO:Initializing RandomizedSearchCV
2022-09-24 21:32:27,870:INFO:best_params: {'actual_estimator__fit_intercept': False, 'actual_estimator__epsilon': 1, 'actual_estimator__alpha': 0.9}
2022-09-24 21:32:27,886:INFO:Hyperparameter search completed
2022-09-24 21:32:27,886:INFO:SubProcess create_model() called ==================================
2022-09-24 21:32:27,886:INFO:Initializing create_model()
2022-09-24 21:32:27,886:INFO:create_model(estimator=HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x0000021831DE3A00>, return_train_score=False, kwargs={'fit_intercept': False, 'epsilon': 1, 'alpha': 0.9})
2022-09-24 21:32:27,886:INFO:Checking exceptions
2022-09-24 21:32:27,886:INFO:Importing libraries
2022-09-24 21:32:27,886:INFO:Copying training dataset
2022-09-24 21:32:27,890:INFO:Defining folds
2022-09-24 21:32:27,891:INFO:Declaring metric variables
2022-09-24 21:32:27,909:INFO:Importing untrained model
2022-09-24 21:32:27,910:INFO:Declaring custom model
2022-09-24 21:32:27,928:INFO:Huber Regressor Imported succesfully
2022-09-24 21:32:27,984:INFO:Starting cross validation
2022-09-24 21:32:27,986:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:32:28,243:INFO:Calculating mean and std
2022-09-24 21:32:28,245:INFO:Creating metrics dataframe
2022-09-24 21:32:28,261:INFO:Finalizing model
2022-09-24 21:32:28,315:INFO:Uploading results into container
2022-09-24 21:32:28,315:INFO:Uploading model into container now
2022-09-24 21:32:28,316:INFO:create_model_container: 20
2022-09-24 21:32:28,316:INFO:master_model_container: 20
2022-09-24 21:32:28,316:INFO:display_container: 4
2022-09-24 21:32:28,317:INFO:HuberRegressor(alpha=0.9, epsilon=1, fit_intercept=False, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-24 21:32:28,317:INFO:create_model() succesfully completed......................................
2022-09-24 21:32:28,531:INFO:SubProcess create_model() end ==================================
2022-09-24 21:32:28,531:INFO:choose_better activated
2022-09-24 21:32:28,541:INFO:SubProcess create_model() called ==================================
2022-09-24 21:32:28,542:INFO:Initializing create_model()
2022-09-24 21:32:28,542:INFO:create_model(estimator=HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-09-24 21:32:28,542:INFO:Checking exceptions
2022-09-24 21:32:28,543:INFO:Importing libraries
2022-09-24 21:32:28,543:INFO:Copying training dataset
2022-09-24 21:32:28,543:INFO:Defining folds
2022-09-24 21:32:28,543:INFO:Declaring metric variables
2022-09-24 21:32:28,544:INFO:Importing untrained model
2022-09-24 21:32:28,544:INFO:Declaring custom model
2022-09-24 21:32:28,544:INFO:Huber Regressor Imported succesfully
2022-09-24 21:32:28,544:INFO:Starting cross validation
2022-09-24 21:32:28,545:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-24 21:32:28,710:INFO:Calculating mean and std
2022-09-24 21:32:28,710:INFO:Creating metrics dataframe
2022-09-24 21:32:28,714:INFO:Finalizing model
2022-09-24 21:32:28,771:INFO:Uploading results into container
2022-09-24 21:32:28,772:INFO:Uploading model into container now
2022-09-24 21:32:28,772:INFO:create_model_container: 21
2022-09-24 21:32:28,772:INFO:master_model_container: 21
2022-09-24 21:32:28,772:INFO:display_container: 5
2022-09-24 21:32:28,772:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-24 21:32:28,772:INFO:create_model() succesfully completed......................................
2022-09-24 21:32:28,978:INFO:SubProcess create_model() end ==================================
2022-09-24 21:32:28,979:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False) result for R2 is -40.8156
2022-09-24 21:32:28,979:INFO:HuberRegressor(alpha=0.9, epsilon=1, fit_intercept=False, max_iter=100,
               tol=1e-05, warm_start=False) result for R2 is -2.8507
2022-09-24 21:32:28,980:INFO:HuberRegressor(alpha=0.9, epsilon=1, fit_intercept=False, max_iter=100,
               tol=1e-05, warm_start=False) is best model
2022-09-24 21:32:28,980:INFO:choose_better completed
2022-09-24 21:32:28,991:INFO:create_model_container: 21
2022-09-24 21:32:28,992:INFO:master_model_container: 21
2022-09-24 21:32:28,992:INFO:display_container: 4
2022-09-24 21:32:28,992:INFO:HuberRegressor(alpha=0.9, epsilon=1, fit_intercept=False, max_iter=100,
               tol=1e-05, warm_start=False)
2022-09-24 21:32:28,992:INFO:tune_model() succesfully completed......................................
2022-09-24 21:32:32,467:INFO:Initializing evaluate_model()
2022-09-24 21:32:32,468:INFO:evaluate_model(estimator=HuberRegressor(alpha=0.9, epsilon=1, fit_intercept=False, max_iter=100,
               tol=1e-05, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2022-09-24 21:32:32,522:INFO:Initializing plot_model()
2022-09-24 21:32:32,522:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=HuberRegressor(alpha=0.9, epsilon=1, fit_intercept=False, max_iter=100,
               tol=1e-05, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=parameter, plot_kwargs={}, save=False, scale=1, system=True)
2022-09-24 21:32:32,522:INFO:Checking exceptions
2022-09-24 21:32:32,523:INFO:Preparing display monitor
2022-09-24 21:32:32,541:INFO:Preloading libraries
2022-09-24 21:32:32,544:INFO:Copying training dataset
2022-09-24 21:32:32,545:INFO:Copying test dataset
2022-09-24 21:32:32,546:INFO:Plot type: parameter
2022-09-24 21:32:32,561:INFO:Visual Rendered Successfully
2022-09-24 21:32:33,032:INFO:plot_model() succesfully completed......................................
2022-09-24 21:32:37,026:INFO:Initializing plot_model()
2022-09-24 21:32:37,026:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=HuberRegressor(alpha=0.9, epsilon=1, fit_intercept=False, max_iter=100,
               tol=1e-05, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=residuals, plot_kwargs={}, save=False, scale=1, system=True)
2022-09-24 21:32:37,026:INFO:Checking exceptions
2022-09-24 21:32:37,026:INFO:Preparing display monitor
2022-09-24 21:32:37,052:INFO:Preloading libraries
2022-09-24 21:32:37,055:INFO:Copying training dataset
2022-09-24 21:32:37,056:INFO:Copying test dataset
2022-09-24 21:32:37,057:INFO:Plot type: residuals
2022-09-24 21:32:37,158:INFO:Fitting Model
2022-09-24 21:32:37,190:INFO:Scoring test/hold-out set
2022-09-24 21:32:37,975:INFO:Visual Rendered Successfully
2022-09-24 21:32:38,153:INFO:plot_model() succesfully completed......................................
2022-09-24 21:36:04,903:INFO:Initializing predict_model()
2022-09-24 21:36:04,904:INFO:predict_model(estimator=HuberRegressor(alpha=0.9, epsilon=1, fit_intercept=False, max_iter=100,
               tol=1e-05, warm_start=False), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-09-24 21:36:04,904:INFO:Checking exceptions
2022-09-24 21:36:04,904:INFO:Preloading libraries
2022-09-24 21:36:04,904:INFO:Preparing display monitor
